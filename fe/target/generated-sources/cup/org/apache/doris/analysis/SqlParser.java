
//----------------------------------------------------
// The following code was generated by CUP v0.11a czt01 beta
// Tue Jun 30 13:24:44 CST 2020
//----------------------------------------------------

package org.apache.doris.analysis;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import org.apache.doris.analysis.AlterDatabaseQuotaStmt.QuotaType;
import org.apache.doris.analysis.SetOperationStmt.Qualifier;
import org.apache.doris.analysis.SetOperationStmt.Operation;
import org.apache.doris.analysis.SetOperationStmt.SetOperand;
import org.apache.doris.catalog.AccessPrivilege;
import org.apache.doris.catalog.AggregateType;
import org.apache.doris.catalog.KeysType;
import org.apache.doris.catalog.PrimitiveType;
import org.apache.doris.catalog.ScalarType;
import org.apache.doris.catalog.Type;
import org.apache.doris.catalog.View;
import org.apache.doris.common.AnalysisException;
import org.apache.doris.common.Version;
import org.apache.doris.mysql.MysqlPassword;
import com.google.common.collect.Lists;
import com.google.common.collect.Maps;
import java_cup.runtime.Symbol;

/** CUP v0.11a czt01 beta generated parser.
  * @version Tue Jun 30 13:24:44 CST 2020
  */
public class SqlParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public SqlParser() {super();}

  /** Constructor which sets the default scanner. */
  public SqlParser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public SqlParser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u03bd\000\002\002\004\000\002\002\003\000\002\002" +
    "\005\000\002\002\003\000\002\002\003\000\002\043\006" +
    "\000\002\050\003\000\002\050\005\000\002\047\003\000" +
    "\002\047\005\000\002\044\004\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\003\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\003\000\002\003\002\000\002\142\003\000" +
    "\002\142\005\000\002\143\003\000\002\143\005\000\002" +
    "\045\006\000\002\046\005\000\002\034\006\000\002\035" +
    "\006\000\002\017\006\000\002\017\010\000\002\017\010" +
    "\000\002\017\010\000\002\017\005\000\002\017\006\000" +
    "\002\017\011\000\002\017\011\000\002\017\007\000\002" +
    "\101\003\000\002\101\003\000\002\077\002\000\002\077" +
    "\004\000\002\344\011\000\002\342\003\000\002\342\005" +
    "\000\002\345\004\000\002\343\003\000\002\343\005\000" +
    "\002\340\003\000\002\340\005\000\002\333\002\000\002" +
    "\333\004\000\002\333\004\000\002\332\002\000\002\332" +
    "\004\000\002\334\002\000\002\334\003\000\002\334\004" +
    "\000\002\307\002\000\002\307\007\000\002\337\010\000" +
    "\002\337\011\000\002\337\007\000\002\337\010\000\002" +
    "\337\011\000\002\337\006\000\002\337\007\000\002\337" +
    "\007\000\002\337\011\000\002\337\007\000\002\337\004" +
    "\000\002\337\006\000\002\337\006\000\002\337\006\000" +
    "\002\337\004\000\002\337\005\000\002\335\005\000\002" +
    "\335\006\000\002\335\007\000\002\335\005\000\002\335" +
    "\005\000\002\335\005\000\002\335\005\000\002\335\005" +
    "\000\002\335\005\000\002\335\005\000\002\335\006\000" +
    "\002\335\006\000\002\335\006\000\002\335\007\000\002" +
    "\336\004\000\002\030\003\000\002\170\002\000\002\170" +
    "\004\000\002\026\006\000\002\026\006\000\002\026\015" +
    "\000\002\026\022\000\002\026\024\000\002\026\007\000" +
    "\002\026\012\000\002\026\011\000\002\026\015\000\002" +
    "\026\005\000\002\026\012\000\002\026\011\000\002\026" +
    "\014\000\002\026\007\000\002\331\002\000\002\331\003" +
    "\000\002\330\002\000\002\330\004\000\002\102\003\000" +
    "\002\102\006\000\002\102\007\000\002\317\002\000\002" +
    "\317\003\000\002\317\005\000\002\076\003\000\002\100" +
    "\003\000\002\100\005\000\002\100\007\000\002\006\004" +
    "\000\002\040\011\000\002\007\013\000\002\007\012\000" +
    "\002\300\003\000\002\300\005\000\002\277\003\000\002" +
    "\277\005\000\002\276\022\000\002\276\015\000\002\325" +
    "\002\000\002\325\003\000\002\315\002\000\002\315\006" +
    "\000\002\316\006\000\002\365\002\000\002\365\005\000" +
    "\002\310\002\000\002\310\011\000\002\305\002\000\002" +
    "\305\005\000\002\311\002\000\002\311\005\000\002\312" +
    "\003\000\002\312\005\000\002\313\004\000\002\306\006" +
    "\000\002\314\002\000\002\314\006\000\002\302\002\000" +
    "\002\302\004\000\002\303\002\000\002\303\005\000\002" +
    "\303\010\000\002\304\005\000\002\304\010\000\002\010" +
    "\017\000\002\324\002\000\002\324\003\000\002\324\005" +
    "\000\002\323\003\000\002\323\003\000\002\323\003\000" +
    "\002\323\003\000\002\011\007\000\002\012\007\000\002" +
    "\013\007\000\002\014\007\000\002\014\010\000\002\014" +
    "\005\000\002\014\006\000\002\015\010\000\002\024\010" +
    "\000\002\024\011\000\002\024\011\000\002\024\012\000" +
    "\002\320\003\000\002\320\005\000\002\321\003\000\002" +
    "\321\003\000\002\322\003\000\002\322\003\000\002\025" +
    "\010\000\002\025\011\000\002\025\011\000\002\025\012" +
    "\000\002\022\006\000\002\022\006\000\002\022\006\000" +
    "\002\022\010\000\002\022\006\000\002\022\005\000\002" +
    "\022\006\000\002\022\005\000\002\022\005\000\002\022" +
    "\012\000\002\022\007\000\002\022\011\000\002\022\005" +
    "\000\002\023\005\000\002\023\005\000\002\023\007\000" +
    "\002\255\002\000\002\255\003\000\002\255\003\000\002" +
    "\255\003\000\002\255\003\000\002\255\003\000\002\255" +
    "\003\000\002\255\003\000\002\256\002\000\002\256\013" +
    "\000\002\257\002\000\002\257\011\000\002\257\006\000" +
    "\002\341\002\000\002\341\006\000\002\260\002\000\002" +
    "\260\004\000\002\262\002\000\002\262\007\000\002\262" +
    "\007\000\002\262\007\000\002\262\007\000\002\267\002" +
    "\000\002\267\003\000\002\270\005\000\002\270\003\000" +
    "\002\266\012\000\002\266\010\000\002\263\003\000\002" +
    "\263\005\000\002\265\002\000\002\265\005\000\002\265" +
    "\005\000\002\265\003\000\002\265\003\000\002\264\013" +
    "\000\002\372\002\000\002\372\005\000\002\246\002\000" +
    "\002\246\005\000\002\245\005\000\002\245\007\000\002" +
    "\247\002\000\002\247\006\000\002\250\002\000\002\250" +
    "\007\000\002\253\003\000\002\253\005\000\002\254\003" +
    "\000\002\254\005\000\002\373\002\000\002\373\004\000" +
    "\002\373\004\000\002\327\002\000\002\327\003\000\002" +
    "\251\011\000\002\252\011\000\002\326\002\000\002\326" +
    "\003\000\002\326\004\000\002\371\002\000\002\371\004" +
    "\000\002\377\002\000\002\377\004\000\002\374\002\000" +
    "\002\374\004\000\002\375\002\000\002\375\005\000\002" +
    "\376\002\000\002\376\003\000\002\004\004\000\002\005" +
    "\003\000\002\005\005\000\002\005\006\000\002\005\006" +
    "\000\002\005\006\000\002\005\004\000\002\005\005\000" +
    "\002\005\005\000\002\005\006\000\002\005\005\000\002" +
    "\005\003\000\002\005\004\000\002\005\003\000\002\005" +
    "\005\000\002\005\005\000\002\005\005\000\002\005\005" +
    "\000\002\005\003\000\002\005\003\000\002\005\004\000" +
    "\002\005\004\000\002\005\006\000\002\005\010\000\002" +
    "\005\004\000\002\005\004\000\002\005\004\000\002\005" +
    "\007\000\002\005\007\000\002\005\004\000\002\005\004" +
    "\000\002\005\007\000\002\005\006\000\002\005\007\000" +
    "\002\005\007\000\002\005\004\000\002\005\011\000\002" +
    "\005\003\000\002\005\005\000\002\005\011\000\002\005" +
    "\004\000\002\005\011\000\002\005\005\000\002\005\004" +
    "\000\002\005\005\000\002\005\003\000\002\005\003\000" +
    "\002\005\003\000\002\005\003\000\002\005\003\000\002" +
    "\005\003\000\002\005\006\000\002\005\004\000\002\005" +
    "\003\000\002\005\005\000\002\005\003\000\002\005\007" +
    "\000\002\005\004\000\002\005\006\000\002\005\005\000" +
    "\002\u0102\002\000\002\u0102\003\000\002\064\003\000\002" +
    "\064\003\000\002\064\003\000\002\064\003\000\002\367" +
    "\002\000\002\367\004\000\002\067\004\000\002\067\003" +
    "\000\002\357\003\000\002\357\003\000\002\360\003\000" +
    "\002\360\003\000\002\070\002\000\002\070\004\000\002" +
    "\361\002\000\002\361\004\000\002\362\003\000\002\362" +
    "\003\000\002\065\002\000\002\065\003\000\002\370\003" +
    "\000\002\370\003\000\002\063\003\000\002\063\003\000" +
    "\002\060\002\000\002\060\003\000\002\066\002\000\002" +
    "\066\004\000\002\066\004\000\002\u0100\003\000\002\u0100" +
    "\003\000\002\u0101\002\000\002\u0101\003\000\002\016\004" +
    "\000\002\016\005\000\002\016\004\000\002\016\004\000" +
    "\002\057\003\000\002\057\003\000\002\031\004\000\002" +
    "\274\002\000\002\274\005\000\002\032\005\000\002\032" +
    "\010\000\002\032\005\000\002\032\004\000\002\032\004" +
    "\000\002\033\007\000\002\103\005\000\002\103\005\000" +
    "\002\u0103\002\000\002\u0103\007\000\002\215\004\000\002" +
    "\215\002\000\002\217\007\000\002\217\007\000\002\217" +
    "\012\000\002\217\012\000\002\216\003\000\002\216\005" +
    "\000\002\106\005\000\002\106\007\000\002\106\007\000" +
    "\002\106\006\000\002\106\010\000\002\106\012\000\002" +
    "\106\012\000\002\104\003\000\002\104\005\000\002\105" +
    "\003\000\002\105\006\000\002\227\003\000\002\227\003" +
    "\000\002\227\003\000\002\227\003\000\002\226\002\000" +
    "\002\226\003\000\002\226\003\000\002\036\004\000\002" +
    "\020\004\000\002\107\011\000\002\110\004\000\002\301" +
    "\002\000\002\301\005\000\002\111\003\000\002\112\014" +
    "\000\002\113\014\000\002\021\004\000\002\021\005\000" +
    "\002\021\005\000\002\027\004\000\002\027\006\000\002" +
    "\244\003\000\002\244\005\000\002\237\005\000\002\237" +
    "\005\000\002\242\004\000\002\242\004\000\002\242\004" +
    "\000\002\243\004\000\002\243\004\000\002\241\002\000" +
    "\002\241\004\000\002\240\003\000\002\240\005\000\002" +
    "\234\004\000\002\234\003\000\002\235\005\000\002\236" +
    "\005\000\002\236\006\000\002\236\007\000\002\236\010" +
    "\000\002\236\004\000\002\236\005\000\002\236\005\000" +
    "\002\236\005\000\002\236\007\000\002\355\003\000\002" +
    "\356\003\000\002\356\006\000\002\231\003\000\002\231" +
    "\003\000\002\231\003\000\002\232\002\000\002\232\003" +
    "\000\002\232\003\000\002\232\003\000\002\233\004\000" +
    "\002\233\004\000\002\233\004\000\002\071\003\000\002" +
    "\071\003\000\002\072\003\000\002\072\003\000\002\072" +
    "\005\000\002\072\005\000\002\074\004\000\002\074\004" +
    "\000\002\073\005\000\002\075\004\000\002\075\004\000" +
    "\002\075\004\000\002\075\003\000\002\126\003\000\002" +
    "\126\003\000\002\126\003\000\002\126\003\000\002\055" +
    "\004\000\002\055\011\000\002\055\005\000\002\056\004" +
    "\000\002\056\005\000\002\131\005\000\002\132\003\000" +
    "\002\132\002\000\002\130\003\000\002\130\005\000\002" +
    "\125\003\000\002\125\003\000\002\114\004\000\002\114" +
    "\005\000\002\114\005\000\002\115\003\000\002\115\003" +
    "\000\002\116\005\000\002\116\005\000\002\116\005\000" +
    "\002\116\003\000\002\117\005\000\002\117\003\000\002" +
    "\135\002\000\002\135\004\000\002\135\003\000\002\135" +
    "\004\000\002\135\003\000\002\120\005\000\002\120\007" +
    "\000\002\144\003\000\002\144\005\000\002\145\003\000" +
    "\002\145\005\000\002\364\003\000\002\364\003\000\002" +
    "\212\004\000\002\210\004\000\002\210\006\000\002\210" +
    "\007\000\002\210\011\000\002\210\013\000\002\213\003" +
    "\000\002\213\003\000\002\221\006\000\002\211\003\000" +
    "\002\211\005\000\002\214\006\000\002\230\005\000\002" +
    "\230\005\000\002\230\002\000\002\136\002\000\002\136" +
    "\003\000\002\136\004\000\002\136\004\000\002\140\002" +
    "\000\002\140\003\000\002\141\006\000\002\141\007\000" +
    "\002\141\006\000\002\141\007\000\002\141\004\000\002" +
    "\141\005\000\002\222\004\000\002\222\005\000\002\222" +
    "\004\000\002\222\005\000\002\222\005\000\002\222\005" +
    "\000\002\222\005\000\002\222\005\000\002\222\005\000" +
    "\002\222\004\000\002\061\003\000\002\061\002\000\002" +
    "\062\003\000\002\062\002\000\002\223\003\000\002\223" +
    "\005\000\002\223\005\000\002\223\002\000\002\224\005" +
    "\000\002\224\002\000\002\137\003\000\002\137\005\000" +
    "\002\127\003\000\002\127\005\000\002\146\002\000\002" +
    "\146\004\000\002\147\004\000\002\347\004\000\002\347" +
    "\005\000\002\346\003\000\002\346\005\000\002\351\003" +
    "\000\002\351\007\000\002\351\006\000\002\351\006\000" +
    "\002\350\005\000\002\350\002\000\002\160\004\000\002" +
    "\160\002\000\002\162\005\000\002\162\002\000\002\161" +
    "\003\000\002\161\005\000\002\163\005\000\002\164\003" +
    "\000\002\164\003\000\002\164\002\000\002\165\004\000" +
    "\002\165\004\000\002\165\002\000\002\166\004\000\002" +
    "\166\002\000\002\166\006\000\002\166\006\000\002\173" +
    "\004\000\002\173\004\000\002\173\004\000\002\173\004" +
    "\000\002\173\004\000\002\173\003\000\002\173\003\000" +
    "\002\173\003\000\002\173\003\000\002\173\003\000\002" +
    "\173\003\000\002\173\003\000\002\173\003\000\002\173" +
    "\006\000\002\173\003\000\002\173\006\000\002\173\003" +
    "\000\002\173\006\000\002\173\010\000\002\173\003\000" +
    "\002\173\003\000\002\261\005\000\002\261\002\000\002" +
    "\167\003\000\002\171\003\000\002\171\005\000\002\172" +
    "\003\000\002\172\003\000\002\172\005\000\002\174\010" +
    "\000\002\200\007\000\002\200\006\000\002\201\006\000" +
    "\002\201\007\000\002\175\004\000\002\175\002\000\002" +
    "\225\004\000\002\225\004\000\002\121\003\000\002\121" +
    "\003\000\002\203\005\000\002\203\006\000\002\156\004" +
    "\000\002\122\003\000\002\122\005\000\002\122\006\000" +
    "\002\122\003\000\002\122\003\000\002\122\004\000\002" +
    "\122\004\000\002\122\010\000\002\122\003\000\002\122" +
    "\006\000\002\122\003\000\002\122\003\000\002\122\003" +
    "\000\002\122\003\000\002\122\003\000\002\122\003\000" +
    "\002\122\005\000\002\122\006\000\002\122\005\000\002" +
    "\122\005\000\002\122\005\000\002\122\005\000\002\122" +
    "\006\000\002\122\003\000\002\122\005\000\002\122\006" +
    "\000\002\134\005\000\002\134\005\000\002\133\003\000" +
    "\002\133\005\000\002\176\011\000\002\157\005\000\002" +
    "\157\002\000\002\204\004\000\002\204\007\000\002\204" +
    "\002\000\002\205\003\000\002\205\003\000\002\206\004" +
    "\000\002\206\004\000\002\206\004\000\002\206\004\000" +
    "\002\206\004\000\002\123\005\000\002\123\005\000\002" +
    "\123\005\000\002\123\005\000\002\123\005\000\002\123" +
    "\005\000\002\123\005\000\002\123\005\000\002\123\005" +
    "\000\002\123\004\000\002\124\007\000\002\124\007\000" +
    "\002\124\007\000\002\124\012\000\002\124\012\000\002" +
    "\177\003\000\002\177\003\000\002\177\003\000\002\177" +
    "\003\000\002\177\003\000\002\177\003\000\002\177\003" +
    "\000\002\177\003\000\002\177\004\000\002\177\003\000" +
    "\002\202\003\000\002\202\004\000\002\202\003\000\002" +
    "\202\004\000\002\202\004\000\002\150\005\000\002\150" +
    "\006\000\002\150\006\000\002\150\003\000\002\150\003" +
    "\000\002\150\003\000\002\150\003\000\002\150\003\000" +
    "\002\150\003\000\002\150\005\000\002\152\005\000\002" +
    "\152\006\000\002\152\006\000\002\152\006\000\002\152" +
    "\006\000\002\152\005\000\002\152\005\000\002\152\007" +
    "\000\002\155\005\000\002\155\005\000\002\155\006\000" +
    "\002\155\006\000\002\151\007\000\002\151\007\000\002" +
    "\151\010\000\002\151\010\000\002\154\007\000\002\154" +
    "\010\000\002\154\005\000\002\154\006\000\002\220\005" +
    "\000\002\220\005\000\002\153\005\000\002\153\005\000" +
    "\002\153\004\000\002\153\004\000\002\207\003\000\002" +
    "\207\005\000\002\207\007\000\002\275\003\000\002\275" +
    "\003\000\002\271\005\000\002\271\003\000\002\272\005" +
    "\000\002\272\003\000\002\273\005\000\002\273\003\000" +
    "\002\041\011\000\002\041\010\000\002\041\012\000\002" +
    "\041\006\000\002\041\007\000\002\041\007\000\002\041" +
    "\006\000\002\041\011\000\002\042\005\000\002\037\005" +
    "\000\002\037\004\000\002\037\006\000\002\037\006\000" +
    "\002\051\002\000\002\051\005\000\002\052\002\000\002" +
    "\052\003\000\002\053\002\000\002\053\005\000\002\053" +
    "\004\000\002\054\002\000\002\054\003\000\002\054\004" +
    "\000\002\363\003\000\002\363\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\352\003\000\002\352\003\000\002" +
    "\352\003\000\002\352\003\000\002\352\003\000\002\352" +
    "\003\000\002\352\003\000\002\352\003\000\002\352\003" +
    "\000\002\352\003\000\002\352\003\000\002\352\003\000" +
    "\002\352\003\000\002\353\003\000\002\353\003\000\002" +
    "\354\003\000\002\354\003\000\002\366\003\000\002\366" +
    "\003\000\002\366\003\000\002\366\003\000\002\366\003" +
    "\000\002\366\003\000\002\366\003" });

  /** Access to production table. */
  @Override
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    loadTableFromFile("action_table");

  /** Access to parse-action table. */
  @Override
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0788\000\124\002\053\003\011\004\040\006\032\007" +
    "\113\010\100\011\034\012\055\013\103\014\047\015\022" +
    "\016\020\017\121\020\007\021\105\022\120\023\057\024" +
    "\075\025\046\026\030\027\117\030\042\031\016\033\106" +
    "\034\101\035\115\036\006\037\074\040\051\041\062\042" +
    "\054\043\041\044\102\045\013\046\060\057\031\103\050" +
    "\107\065\112\015\113\073\215\077\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\352\220\353\u0782\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\052\u074e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\352\220\353\u02cc\354\u0718\366\344" +
    "\001\001\000\014\216\u06fe\217\u06ff\352\220\353\u06fd\366" +
    "\344\001\001\000\002\001\001\000\020\103\u06f9\107\u06f8" +
    "\144\u06fa\215\077\352\220\353\u028e\366\344\001\001\000" +
    "\002\001\001\000\010\352\220\353\u06f7\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\u06ec\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\032\u06c9\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\022\067\u066e\231" +
    "\u0666\236\u0664\242\u0668\352\220\353\u0669\355\u066f\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\330\u0598\331" +
    "\u05a3\376\u0595\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\052\u0584\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\016\055\u03c4\056\u03c3\104\u03c1\105\u03c5\106\u03c2\114\u03c6" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\271\u036a\275\u032c\352\220\353" +
    "\u032b\366\344\001\001\000\002\001\001\000\014\271\u032d" +
    "\275\u032c\352\220\353\u032b\366\344\001\001\000\022\005" +
    "\u0254\060\u026c\064\u024d\065\u0251\067\u0266\232\u025f\370\u0259" +
    "\u0102\u0248\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\246\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\220\u0233\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\066\121\u0230\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\066\121\u0228\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\066\121\u0220\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\066\121\u021c\122\232\123\155\124\200\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\066\121\u021b\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\066\121\u01ef\122\232\123\155\124\200\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\251\363\153\364\370\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\070" +
    "\121\u01da\122\232\123\155\124\200\134\357\145\337\150" +
    "\144\151\u0103\152\321\153\273\154\353\155\203\156\162" +
    "\174\234\176\265\177\323\200\270\201\u01d9\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\072\103\u013a\121\u0150\122\u01cb\123\155\124" +
    "\200\134\357\145\337\150\u01ca\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\215\077\220\u013d\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\066\121\u018a\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\145\u011a\352\220\353" +
    "\u0117\363\153\364\370\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\070\121\u011d\122\232\123\155\124\200\133" +
    "\u011e\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\u0121\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\066\121\u017f\122\232\123\155\124\200\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\066\121\u017e\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\066\121\u016d\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\066\121\u016c\122\232\123\155" +
    "\124\200\134\357\145\337\150\144\151\u0103\152\321\153" +
    "\273\154\353\155\203\156\162\174\234\176\265\177\323" +
    "\200\270\203\306\207\u010e\220\347\225\343\352\220\353" +
    "\251\363\153\364\370\366\344\001\001\000\066\121\u016b" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\002\001\001\000\066\121\u0166\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\066\121\u0164\122" +
    "\232\123\155\124\200\134\357\145\337\150\144\151\u0103" +
    "\152\321\153\273\154\353\155\203\156\162\174\234\176" +
    "\265\177\323\200\270\203\306\207\u010e\220\347\225\343" +
    "\352\220\353\251\363\153\364\370\366\344\001\001\000" +
    "\066\121\u015e\122\232\123\155\124\200\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\251\363\153\364\370\366" +
    "\344\001\001\000\066\121\u015c\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\066\121\u015b\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\066" +
    "\121\u0156\122\232\123\155\124\200\134\357\145\337\150" +
    "\144\151\u0103\152\321\153\273\154\353\155\203\156\162" +
    "\174\234\176\265\177\323\200\270\203\306\207\u010e\220" +
    "\347\225\343\352\220\353\251\363\153\364\370\366\344" +
    "\001\001\000\066\121\u0150\122\u014f\123\155\124\200\134" +
    "\357\145\337\150\u014e\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\066\121\u014d\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\066\121\u0149\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\066\121\u0148\122\232\123\155" +
    "\124\200\134\357\145\337\150\144\151\u0103\152\321\153" +
    "\273\154\353\155\203\156\162\174\234\176\265\177\323" +
    "\200\270\203\306\207\u010e\220\347\225\343\352\220\353" +
    "\251\363\153\364\370\366\344\001\001\000\066\121\u0147" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\066\121\u0145\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\066\121\u0143\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\004\220\u0138\001" +
    "\001\000\002\001\001\000\074\103\u013a\121\u013c\122\232" +
    "\123\155\124\200\127\u013b\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\215\077\220" +
    "\u013d\225\343\352\220\353\251\363\153\364\370\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\066\121\u0141" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\u0146\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\u0152\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\066" +
    "\121\u0154\122\232\123\155\124\200\134\357\145\337\150" +
    "\144\151\u0103\152\321\153\273\154\353\155\203\156\162" +
    "\174\234\176\265\177\323\200\270\203\306\207\u010e\220" +
    "\347\225\343\352\220\353\251\363\153\364\370\366\344" +
    "\001\001\000\002\001\001\000\066\121\u0157\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\010\352\220\353\u0158\366\344\001\001\000\002" +
    "\001\001\000\066\121\u015a\122\232\123\155\124\200\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\066\121\u0161\122\232\123\155" +
    "\124\200\134\357\145\337\150\144\151\u0103\152\321\153" +
    "\273\154\353\155\203\156\162\174\234\176\265\177\323" +
    "\200\270\203\306\207\u010e\220\347\225\343\352\220\353" +
    "\251\363\153\364\370\366\344\001\001\000\002\001\001" +
    "\000\066\121\u0160\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\066\121\u0163\122\232\123\155\124\200\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\251\363\153\364\370\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\066" +
    "\121\u0167\122\232\123\155\124\200\134\357\145\337\150" +
    "\144\151\u0103\152\321\153\273\154\353\155\203\156\162" +
    "\174\234\176\265\177\323\200\270\203\306\207\u010e\220" +
    "\347\225\343\352\220\353\251\363\153\364\370\366\344" +
    "\001\001\000\002\001\001\000\010\352\220\353\u0168\366" +
    "\344\001\001\000\002\001\001\000\066\121\u016a\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\066\121\u0150\122\u0179\123\155\124\200\134\357" +
    "\145\337\150\u0178\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\066\121\u0177\122\232\123\155" +
    "\124\200\134\357\145\337\150\144\151\u0103\152\321\153" +
    "\273\154\353\155\203\156\162\174\234\176\265\177\323" +
    "\200\270\203\306\207\u010e\220\347\225\343\352\220\353" +
    "\251\363\153\364\370\366\344\001\001\000\066\121\u0176" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\004\220\u0172\001\001\000\002\001\001\000\074\103" +
    "\u013a\121\u013c\122\232\123\155\124\200\127\u0174\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\215\077\220\u013d\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\066\121\u017b\122\232\123\155" +
    "\124\200\134\357\145\337\150\144\151\u0103\152\321\153" +
    "\273\154\353\155\203\156\162\174\234\176\265\177\323" +
    "\200\270\203\306\207\u010e\220\347\225\343\352\220\353" +
    "\251\363\153\364\370\366\344\001\001\000\002\001\001" +
    "\000\066\121\u017d\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\352\220\353\u0181\363\153\364\u0182" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\066\121\u0189\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\072\121\u013c\122\232\123\155" +
    "\124\200\127\u018d\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\202\u018f\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\u0190\001\001" +
    "\000\002\001\001\000\002\001\001\000\070\121\u013c\122" +
    "\232\123\155\124\200\127\u019b\134\357\145\337\150\144" +
    "\151\u0103\152\321\153\273\154\353\155\203\156\162\174" +
    "\234\176\265\177\323\200\270\203\306\207\u010e\220\347" +
    "\225\343\352\220\353\251\363\153\364\370\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\070\121\u013c\122\232\123\155\124\200\127\u0193\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\066\121\u0196\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\066\121\u0198" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\u0141\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\066\121\u019e\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\010" +
    "\352\220\353\u019f\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\157\u01a6\001\001\000\002\001\001\000" +
    "\004\162\u01a7\001\001\000\006\204\u01b7\205\u01b9\001\001" +
    "\000\002\001\001\000\072\121\u01ab\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\161\u01aa\163\u01ac\174\234\176" +
    "\265\177\323\200\270\203\306\207\u010e\220\347\225\343" +
    "\352\220\353\251\363\153\364\370\366\344\001\001\000" +
    "\002\001\001\000\004\164\u01ad\001\001\000\002\001\001" +
    "\000\004\165\u01b1\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\070\121\u01ab\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\163\u01b5\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\070\121\u01ba\122\232\123\155\124\200\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\206" +
    "\u01bc\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\070\121\u01ba" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\206\u01bf\207\u010e\220" +
    "\347\225\343\352\220\353\251\363\153\364\370\366\344" +
    "\001\001\000\002\001\001\000\070\121\u01ba\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\206\u01c1\207\u010e\220\347\225\343" +
    "\352\220\353\251\363\153\364\370\366\344\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\070\121\u013c\122\232\123\155\124\200\127\u01c9" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\233\u01d0\352\220\353\u01cf\366\344\001\001" +
    "\000\002\001\001\000\010\352\220\353\u01d7\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\066\121\u01e6\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\004\175\u01e4\001\001" +
    "\000\004\201\u01db\001\001\000\004\175\u01dc\001\001\000" +
    "\002\001\001\000\066\121\u01e2\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\066\121\u01df\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\066\121\u01e1\122\232\123\155\124\200\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\066\121\u01e8\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\002\001\001\000" +
    "\014\352\220\353\u01ea\363\153\364\u0182\366\344\001\001" +
    "\000\002\001\001\000\010\352\220\353\u01ec\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\066\121\u01f1\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\002\001\001\000" +
    "\006\167\u01ff\173\u01f7\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\261\u0217\001\001\000\004\261\u0216\001" +
    "\001\000\002\001\001\000\004\261\u0215\001\001\000\004" +
    "\261\u0214\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\261\u0207" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\352\220\353\u021d\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\072\121\u013c\122\232\123\155\124\200\127\u0222\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\202\u0223" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\070\121\u013c\122\232\123" +
    "\155\124\200\127\u0226\134\357\145\337\150\144\151\u0103" +
    "\152\321\153\273\154\353\155\203\156\162\174\234\176" +
    "\265\177\323\200\270\203\306\207\u010e\220\347\225\343" +
    "\352\220\353\251\363\153\364\370\366\344\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\066\121\u022e\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\103\u013a\215\077\220\u0235\001\001" +
    "\000\002\001\001\000\012\142\u0238\352\220\353\u0237\366" +
    "\344\001\001\000\002\001\001\000\012\143\u023a\352\220" +
    "\353\u0239\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\352\220\353\u023c\366\344\001\001\000\002" +
    "\001\001\000\010\352\220\353\u023e\366\344\001\001\000" +
    "\002\001\001\000\006\063\u027f\367\u0329\001\001\000\002" +
    "\001\001\000\004\166\u0323\001\001\000\002\001\001\000" +
    "\006\063\u027f\367\u0321\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\166\u031d\001\001\000\004\077\u0319\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\u027f\367\u0308\001\001\000\006\063\u027f\367" +
    "\u0305\001\001\000\004\063\u0302\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\063\u027f\367\u0300\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\066\u02d5" +
    "\001\001\000\006\063\u027f\367\u02d4\001\001\000\002\001" +
    "\001\000\004\066\u02c9\001\001\000\006\063\u027f\367\u02bf" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\066\u02b1\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0101\u029f\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\u027f\367\u0289\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\066\u0288\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\063\u027f\367\u027e\001\001\000\004\066" +
    "\u0283\001\001\000\010\352\220\353\u0282\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\066\121\u0286\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\352\220\353\u0294\366\344\001\001\000\010" +
    "\352\220\353\u0293\366\344\001\001\000\012\144\u0292\352" +
    "\220\353\u028e\366\344\001\001\000\012\144\u028f\352\220" +
    "\353\u028e\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\352\220\353\u0291\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\300\u029a\352\220\353\u0299\366\344\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\352\220\353\u029c" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\063\u027f\367\u02ac\001\001\000\002\001\001\000\004" +
    "\063\u02a5\001\001\000\006\063\u027f\367\u02a3\001\001\000" +
    "\002\001\001\000\004\066\u02a4\001\001\000\002\001\001" +
    "\000\012\144\u02a6\352\220\353\u028e\366\344\001\001\000" +
    "\006\063\u027f\367\u02a7\001\001\000\004\066\u02a8\001\001" +
    "\000\002\001\001\000\006\063\u027f\367\u02aa\001\001\000" +
    "\004\066\u02ab\001\001\000\002\001\001\000\004\066\u02ad" +
    "\001\001\000\002\001\001\000\010\352\220\353\u02af\366" +
    "\344\001\001\000\004\066\u02b0\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\063\u027f\367\u02b3\001\001\000" +
    "\004\066\u02b4\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\u027f\367\u02b9\001\001\000\012\300\u02b8\352" +
    "\220\353\u0299\366\344\001\001\000\002\001\001\000\004" +
    "\066\u02ba\001\001\000\002\001\001\000\004\066\u02be\001" +
    "\001\000\004\066\u02bd\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\066\u02c0\001\001\000\004\162\u02c1\001" +
    "\001\000\004\166\u02c2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\100\u02ce\352\220\353\u02cc\354\u02cd\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\352\220\353\u02cc\354\u02d0\366" +
    "\344\001\001\000\002\001\001\000\012\352\220\353\u02cc" +
    "\354\u02d2\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\066\u02d7" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\144" +
    "\u02da\352\220\353\u028e\366\344\001\001\000\006\140\u02dd" +
    "\141\u02db\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\066\u02f0\001\001\000\010\352\220\353\u02ec\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\352" +
    "\220\353\u02e2\366\344\001\001\000\002\001\001\000\012" +
    "\137\u02e5\352\220\353\u02e4\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\352\220\353\u02e8\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\137" +
    "\u02ea\352\220\353\u02e4\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\137\u02ee\352" +
    "\220\353\u02e4\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\162\u02f1\001\001\000\004\166\u02f2\001" +
    "\001\000\002\001\001\000\012\137\u02f4\352\220\353\u02e4" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0100\u02f9\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\u027f\367\u02fa\001\001\000\004\066\u02fb\001" +
    "\001\000\004\162\u02fc\001\001\000\004\166\u02fd\001\001" +
    "\000\002\001\001\000\012\144\u02ff\352\220\353\u028e\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\144\u0303\352\220\353\u028e\366\344\001" +
    "\001\000\006\063\u027f\367\u0304\001\001\000\002\001\001" +
    "\000\004\066\u0306\001\001\000\002\001\001\000\006\063" +
    "\u027f\367\u030c\001\001\000\004\066\u0309\001\001\000\004" +
    "\162\u030a\001\001\000\004\166\u030b\001\001\000\002\001" +
    "\001\000\004\066\u030f\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\166\u0310\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\144\u0314\352\220" +
    "\353\u028e\366\344\001\001\000\004\066\u0315\001\001\000" +
    "\004\162\u0316\001\001\000\004\166\u0317\001\001\000\002" +
    "\001\001\000\014\076\u031b\352\220\353\u02cc\354\u031c\366" +
    "\344\001\001\000\004\066\u031a\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\063\u027f\367\u0320\001\001\000\002" +
    "\001\001\000\004\066\u0322\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\066" +
    "\u032a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\275" +
    "\u0343\352\220\353\u032b\366\344\001\001\000\014\320\u0332" +
    "\322\u0333\352\220\353\u0331\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\321\u0337" +
    "\322\u0338\352\220\353\u0331\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\100\u033b\352\220\353\u02cc\354\u02cd\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\322\u033e\352\220\353\u0331\366\344\001\001\000" +
    "\002\001\001\000\014\100\u0341\352\220\353\u02cc\354\u02cd" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\144\u0345\214\u0346" +
    "\352\220\353\u028e\366\344\001\001\000\006\140\u035c\141" +
    "\u02db\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\247\u0349\001\001\000\004\303\u0356\001\001\000\002\001" +
    "\001\000\004\245\u034c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\352\220\353\u02cc\354\u0358\366\344\001\001\000\002" +
    "\001\001\000\004\245\u035a\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\136\u035d\352\220\353\u035f\366\344" +
    "\001\001\000\004\230\u0364\001\001\000\010\352\220\353" +
    "\u0362\366\344\001\001\000\002\001\001\000\010\352\220" +
    "\353\u0361\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\137\u0368\352\220\353\u02e4\366\344\001\001" +
    "\000\002\001\001\000\012\137\u0366\352\220\353\u02e4\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\320" +
    "\u036c\322\u0333\352\220\353\u0331\366\344\001\001\000\002" +
    "\001\001\000\014\321\u036e\322\u0338\352\220\353\u0331\366" +
    "\344\001\001\000\002\001\001\000\014\100\u0371\352\220" +
    "\353\u02cc\354\u02cd\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\100\u0375\352\220" +
    "\353\u02cc\354\u02cd\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\300\u0378\352\220" +
    "\353\u0299\366\344\001\001\000\002\001\001\000\006\276" +
    "\u037a\277\u037c\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\276\u038c\001\001\000\006\303" +
    "\u0381\304\u037f\001\001\000\004\247\u038b\001\001\000\002" +
    "\001\001\000\004\302\u0382\001\001\000\004\247\u0385\001" +
    "\001\000\012\352\220\353\u02cc\354\u0384\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\352\220\353" +
    "\u02cc\354\u0387\366\344\001\001\000\002\001\001\000\004" +
    "\245\u0389\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\352\220\353\u0390\366\344\001\001\000" +
    "\004\325\u0392\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\352\220\353\u0395\366\344\001" +
    "\001\000\006\140\u0396\141\u02db\001\001\000\004\314\u0398" +
    "\001\001\000\002\001\001\000\004\146\u0399\001\001\000" +
    "\002\001\001\000\066\121\u039b\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\251\363" +
    "\153\364\370\366\344\001\001\000\002\001\001\000\070" +
    "\121\u013c\122\232\123\155\124\200\127\u039d\134\357\145" +
    "\337\150\144\151\u0103\152\321\153\273\154\353\155\203" +
    "\156\162\174\234\176\265\177\323\200\270\203\306\207" +
    "\u010e\220\347\225\343\352\220\353\251\363\153\364\370" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\272\u03a0\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\325\u03a4\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\352\220\353\u03a7\366\344" +
    "\001\001\000\006\140\u03a8\141\u02db\001\001\000\004\315" +
    "\u03a9\001\001\000\004\365\u03ae\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\305\u03b2\001\001\000\002\001\001\000\012\352\220" +
    "\353\u02cc\354\u03b1\366\344\001\001\000\002\001\001\000" +
    "\004\310\u03b6\001\001\000\012\137\u03b4\352\220\353\u02e4" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\314\u03be\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\137\u03bc\352" +
    "\220\353\u02e4\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\146\u03bf\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u0103\u0473\001\001" +
    "\000\004\162\u0470\001\001\000\002\001\001\000\006\227" +
    "\u0454\u0103\u0453\001\001\000\006\166\u03f6\212\u03f8\001\001" +
    "\000\006\103\u03f4\215\077\001\001\000\076\115\u03da\116" +
    "\u03d5\117\u03d9\120\u03d4\121\u03d7\122\232\123\155\124\200" +
    "\134\357\145\337\150\144\151\u0103\152\321\153\273\154" +
    "\353\155\203\156\162\174\234\176\265\177\323\200\270" +
    "\203\306\207\u010e\220\347\225\343\352\220\353\u03d8\363" +
    "\153\364\370\366\344\001\001\000\004\131\u03cb\001\001" +
    "\000\074\121\u03cf\122\232\123\155\124\200\125\u03cd\130" +
    "\u03ce\132\u03d0\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\251\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\070\121\u03cf\122\232\123\155\124\200\125\u03d3\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\076\115\u03f0\116\u03d5\117\u03d9\120" +
    "\u03d4\121\u03d7\122\232\123\155\124\200\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\u03d8\363\153\364\370\366" +
    "\344\001\001\000\004\361\u03e6\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\076\115\u03dd\116\u03d5\117\u03d9\120\u03d4\121\u03d7\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\u03d8\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\072\117\u03df\120\u03d4\121\u03d7\122\232\123" +
    "\155\124\200\134\357\145\337\150\144\151\u0103\152\321" +
    "\153\273\154\353\155\203\156\162\174\234\176\265\177" +
    "\323\200\270\203\306\207\u010e\220\347\225\343\352\220" +
    "\353\u03d8\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\014\352\220\353\u03e1\363\153\364\u0182\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\352" +
    "\220\353\u01ec\366\344\001\001\000\002\001\001\000\014" +
    "\352\220\353\u02cc\354\u03ef\362\u03ed\366\344\001\001\000" +
    "\012\135\u03e8\352\220\353\u03e9\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\352" +
    "\220\353\u03eb\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\072\117\u03f2\120\u03d4\121\u03d7" +
    "\122\232\123\155\124\200\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\u03d8\363\153\364\370\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\144\u0345\210\u041a" +
    "\213\u0418\214\u041c\221\u0419\352\220\353\u028e\366\344\001" +
    "\001\000\004\146\u03f9\001\001\000\004\350\u03fa\001\001" +
    "\000\004\160\u0413\001\001\000\002\001\001\000\072\121" +
    "\u013c\122\232\123\155\124\200\127\u0400\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\351\u03ff\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\070\121\u013c\122\232\123\155\124\200\127\u0403\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\070\121\u013c\122\232\123\155\124\200\127\u0406\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\346\u040a\347\u040b\001\001" +
    "\000\002\001\001\000\002\001\001\000\070\121\u013c\122" +
    "\232\123\155\124\200\127\u040e\134\357\145\337\150\144" +
    "\151\u0103\152\321\153\273\154\353\155\203\156\162\174" +
    "\234\176\265\177\323\200\270\203\306\207\u010e\220\347" +
    "\225\343\352\220\353\251\363\153\364\370\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\347\u0412\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\162\u0416\001\001\000\066\121\u0415\122\232" +
    "\123\155\124\200\134\357\145\337\150\144\151\u0103\152" +
    "\321\153\273\154\353\155\203\156\162\174\234\176\265" +
    "\177\323\200\270\203\306\207\u010e\220\347\225\343\352" +
    "\220\353\251\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\004\166\u0417\001\001\000\002\001\001\000" +
    "\004\224\u0450\001\001\000\002\001\001\000\006\061\u0428" +
    "\222\u0420\001\001\000\006\103\u041d\215\077\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\136\u041f\352\220" +
    "\353\u035f\366\344\001\001\000\002\001\001\000\004\223" +
    "\u0442\001\001\000\004\062\u043b\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\062\u0433\001\001\000\002\001" +
    "\001\000\004\062\u0430\001\001\000\020\144\u0345\213\u042a" +
    "\214\u041c\221\u0419\352\220\353\u028e\366\344\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\224\u042b\001\001" +
    "\000\002\001\001\000\012\137\u042d\352\220\353\u02e4\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\137\u044e\352\220\353\u02e4\366\344\001\001" +
    "\000\002\001\001\000\020\144\u0345\213\u0446\214\u041c\221" +
    "\u0419\352\220\353\u028e\366\344\001\001\000\012\137\u0444" +
    "\352\220\353\u02e4\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\224\u0447\001\001\000\002\001\001" +
    "\000\002\001\001\000\066\121\u044a\122\232\123\155\124" +
    "\200\134\357\145\337\150\144\151\u0103\152\321\153\273" +
    "\154\353\155\203\156\162\174\234\176\265\177\323\200" +
    "\270\203\306\207\u010e\220\347\225\343\352\220\353\251" +
    "\363\153\364\370\366\344\001\001\000\002\001\001\000" +
    "\012\137\u044c\352\220\353\u02e4\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\226\u046c\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\072" +
    "\121\u01ab\122\232\123\155\124\200\134\357\145\337\150" +
    "\144\151\u0103\152\321\153\273\154\353\155\203\156\162" +
    "\161\u0460\163\u01ac\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\365\u0469\001\001\000\004\247\u046a\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\055\u03c4\056\u03c3\104" +
    "\u046e\114\u03c6\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\131\u0472\001\001\000\004\166\u0471\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\110\u0476\144\u0475\352\220\353\u028e\366\344\001\001\000" +
    "\006\140\u047f\141\u02db\001\001\000\004\301\u0478\001\001" +
    "\000\002\001\001\000\004\305\u0479\001\001\000\004\223" +
    "\u047a\001\001\000\010\103\u047b\111\u047c\215\077\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\352\220\353" +
    "\u047e\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\335\u055d\001\001\000\010\352\220\353\u0559\366" +
    "\344\001\001\000\010\352\220\353\u054d\366\344\001\001" +
    "\000\012\144\u0541\352\220\353\u028e\366\344\001\001\000" +
    "\012\144\u0485\352\220\353\u028e\366\344\001\001\000\006" +
    "\337\u048a\340\u048b\001\001\000\002\001\001\000\006\252" +
    "\u04c6\u0102\u04c5\001\001\000\004\u0102\u0511\001\001\000\010" +
    "\352\220\353\u051f\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\140\u048f\141\u02db\001\001\000\002\001\001\000\006\140" +
    "\u0491\141\u02db\001\001\000\004\247\u0492\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\137\u0495\352\220\353" +
    "\u02e4\366\344\001\001\000\002\001\001\000\004\332\u0497" +
    "\001\001\000\004\247\u049a\001\001\000\010\352\220\353" +
    "\u0499\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\251\u04a3\352\220\353\u04a2\366\344\001\001\000" +
    "\010\352\220\353\u049d\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\245\u04a0\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\167\u04aa\173\u01f7\001\001" +
    "\000\004\334\u04a6\001\001\000\010\352\220\353\u04a9\366" +
    "\344\001\001\000\002\001\001\000\004\332\u04a7\001\001" +
    "\000\004\247\u04a8\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\327\u04ac\001\001\000\002\001\001\000\004" +
    "\255\u04b1\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\326\u04b6\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\373\u04b9\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\371\u04bd\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\337\u04c2\001" +
    "\001\000\004\u0102\u0511\001\001\000\002\001\001\000\006" +
    "\252\u04c6\u0102\u04c5\001\001\000\012\251\u0500\352\220\353" +
    "\u04a2\366\344\001\001\000\004\266\u04d0\001\001\000\002" +
    "\001\001\000\010\352\220\353\u04c8\366\344\001\001\000" +
    "\002\001\001\000\012\137\u04ca\352\220\353\u02e4\366\344" +
    "\001\001\000\002\001\001\000\004\377\u04cc\001\001\000" +
    "\004\371\u04cf\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\257\u04f4\001\001\000\004\375" +
    "\u04d3\001\001\000\002\001\001\000\010\352\220\353\u04d4" +
    "\366\344\001\001\000\002\001\001\000\004\264\u04d7\001" +
    "\001\000\002\001\001\000\004\246\u04e7\001\001\000\002" +
    "\001\001\000\004\265\u04dc\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\265\u04e1\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\245\u04e8\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\263\u04eb\001\001\000\004\246\u04f0\001\001\000\002\001" +
    "\001\000\004\265\u04ee\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\247\u04f5\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\260\u04ff\001\001\000" +
    "\002\001\001\000\012\137\u04fa\352\220\353\u02e4\366\344" +
    "\001\001\000\002\001\001\000\004\260\u04fc\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\334\u050d\001\001\000\014\251\u0502\253" +
    "\u0503\352\220\353\u04a2\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\251\u050c\352\220\353\u04a2\366" +
    "\344\001\001\000\004\333\u0506\001\001\000\004\247\u050b" +
    "\001\001\000\010\352\220\353\u050a\366\344\001\001\000" +
    "\010\352\220\353\u0509\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\333\u050e\001\001\000\004\247\u050f\001\001\000\002" +
    "\001\001\000\010\352\220\353\u0519\366\344\001\001\000" +
    "\002\001\001\000\010\352\220\353\u0513\366\344\001\001" +
    "\000\002\001\001\000\004\374\u0516\001\001\000\002\001" +
    "\001\000\010\352\220\353\u0517\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\332\u051a\001\001\000" +
    "\004\247\u051b\001\001\000\002\001\001\000\010\352\220" +
    "\353\u0524\366\344\001\001\000\010\352\220\353\u0522\366" +
    "\344\001\001\000\010\352\220\353\u0520\366\344\001\001" +
    "\000\002\001\001\000\010\352\220\353\u0521\366\344\001" +
    "\001\000\002\001\001\000\010\352\220\353\u0523\366\344" +
    "\001\001\000\002\001\001\000\010\352\220\353\u0525\366" +
    "\344\001\001\000\002\001\001\000\014\343\u0529\345\u0527" +
    "\352\220\353\u0528\366\344\001\001\000\002\001\001\000" +
    "\004\247\u052c\001\001\000\002\001\001\000\012\345\u052b" +
    "\352\220\353\u0528\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\342\u052f\344\u052e\352\220\353\u0530" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\137\u0532\352\220\353\u02e4\366\344" +
    "\001\001\000\002\001\001\000\004\307\u0534\001\001\000" +
    "\004\332\u053a\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\137\u0538\352\220\353\u02e4\366\344\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\247\u053b\001\001" +
    "\000\002\001\001\000\012\344\u053d\352\220\353\u0530\366" +
    "\344\001\001\000\002\001\001\000\004\245\u053f\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\311\u0542\001" +
    "\001\000\002\001\001\000\014\312\u0545\313\u0544\352\220" +
    "\353\u0546\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\371\u0547\001\001\000\002\001\001\000\012" +
    "\313\u054a\352\220\353\u0546\366\344\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\103\u054c\215\077\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\352\220\353\u0550\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\101\u0554\352" +
    "\220\353\u0555\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\247\u055a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\272\u0562" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\247\u0566\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\272\u0571\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\352\220\353\u02cc\354\u056c\366\344" +
    "\001\001\000\004\272\u056d\001\001\000\002\001\001\000" +
    "\004\272\u056f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\352\220\353\u0573\366\344\001" +
    "\001\000\004\272\u0574\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\272\u0577\001\001\000\002\001\001\000" +
    "\004\272\u0583\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\352\220\353\u02cc\354\u057d\366" +
    "\344\001\001\000\004\272\u057e\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\352\220\353\u02cc\354\u0581\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\053\u0587\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\054\u0588\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\352\220\353\u02cc\354\u0591\366\344\001" +
    "\001\000\002\001\001\000\012\352\220\353\u02cc\354\u0593" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\352\220\353\u0606\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\375\u05f4\001\001\000\002\001\001\000\004\375\u05d3" +
    "\001\001\000\004\375\u05c6\001\001\000\010\352\220\353" +
    "\u05c5\366\344\001\001\000\010\352\220\353\u05c0\366\344" +
    "\001\001\000\004\375\u05ba\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\145\u05a5\352\220" +
    "\353\u0117\363\153\364\370\366\344\001\001\000\002\001" +
    "\001\000\012\167\u05aa\171\u05a8\172\u05a7\173\u01f7\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\167\u05ac\173\u01f7\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\167" +
    "\u05b0\173\u01f7\001\001\000\004\170\u05b1\001\001\000\004" +
    "\247\u05b4\001\001\000\006\167\u05b3\173\u01f7\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\352\220\353\u05b6" +
    "\366\344\001\001\000\002\001\001\000\010\055\u05b8\056" +
    "\u03c3\114\u03c6\001\001\000\004\247\u05b9\001\001\000\002" +
    "\001\001\000\012\144\u05bb\352\220\353\u028e\366\344\001" +
    "\001\000\004\311\u05bc\001\001\000\004\371\u05bd\001\001" +
    "\000\002\001\001\000\006\103\u05bf\215\077\001\001\000" +
    "\002\001\001\000\004\247\u05c1\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\016\100\u05c8\102\u05c7\352\220\353\u02cc" +
    "\354\u02cd\366\344\001\001\000\004\317\u05cf\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\352\220\353\u05d4\366\344\001" +
    "\001\000\002\001\001\000\012\300\u05d6\352\220\353\u0299" +
    "\366\344\001\001\000\002\001\001\000\010\352\220\353" +
    "\u05d8\366\344\001\001\000\016\043\u05db\044\u05df\141\u05dc" +
    "\316\u05da\323\u05de\324\u05dd\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\247\u05e1\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\043\u05db\044\u05df\141\u05dc\316\u05da\323\u05e7\001\001" +
    "\000\002\001\001\000\010\352\220\353\u05e3\366\344\001" +
    "\001\000\002\001\001\000\004\245\u05e5\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\047\u05eb\050\u05ea\352\220\353\u05ec\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\066\121\u05ee\122\232\123\155\124\200\134\357" +
    "\145\337\150\144\151\u0103\152\321\153\273\154\353\155" +
    "\203\156\162\174\234\176\265\177\323\200\270\203\306" +
    "\207\u010e\220\347\225\343\352\220\353\251\363\153\364" +
    "\370\366\344\001\001\000\002\001\001\000\012\047\u05f1" +
    "\352\220\353\u05ec\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\352\220\353\u05f5\366\344\001\001\000\002\001\001\000" +
    "\006\063\u027f\367\u05f7\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\245\u05fa\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\352\220\353\u05fd\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\352\220\353" +
    "\u0600\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\247\u0604\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\144\u0608" +
    "\352\220\353\u028e\366\344\001\001\000\002\001\001\000" +
    "\012\137\u060a\352\220\353\u02e4\366\344\001\001\000\002" +
    "\001\001\000\004\377\u060c\001\001\000\004\371\u060d\001" +
    "\001\000\002\001\001\000\012\352\220\353\u02cc\354\u0658" +
    "\366\344\001\001\000\004\375\u0610\001\001\000\012\144" +
    "\u0611\352\220\353\u028e\366\344\001\001\000\002\001\001" +
    "\000\014\251\u0502\253\u0613\352\220\353\u04a2\366\344\001" +
    "\001\000\002\001\001\000\016\251\u050c\252\u064c\254\u064b" +
    "\352\220\353\u04a2\366\344\001\001\000\004\372\u0617\001" +
    "\001\000\002\001\001\000\004\262\u061c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\371\u061d\001\001\000\004\256\u061e\001\001" +
    "\000\004\257\u062c\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\137\u0623\352\220\353\u02e4" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\266\u0627\267\u0626\270\u0628\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\266\u062a\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\341\u062e" +
    "\001\001\000\002\001\001\000\004\247\u062f\001\001\000" +
    "\004\250\u0630\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\245\u0634\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\342\u0637\344\u052e\352\220" +
    "\353\u0530\366\344\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\137\u063b\352\220\353\u02e4" +
    "\366\344\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\137\u063f\352\220\353\u02e4\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\137\u0643\352\220\353\u02e4\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\137\u0647\352\220\353\u02e4\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\352\220\353\u064a\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\252\u0657\001\001\000\004\372\u064f\001" +
    "\001\000\004\262\u0650\001\001\000\004\371\u0651\001\001" +
    "\000\004\256\u0652\001\001\000\004\257\u0653\001\001\000" +
    "\004\341\u0654\001\001\000\004\247\u0655\001\001\000\004" +
    "\250\u0656\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\247\u0659\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\300\u065d\352\220\353\u0299\366" +
    "\344\001\001\000\002\001\001\000\116\003\u0660\004\040" +
    "\006\032\007\113\010\100\011\034\012\055\013\103\014" +
    "\047\015\022\016\020\017\121\020\007\021\105\022\120" +
    "\023\057\024\075\025\046\026\030\027\117\030\042\031" +
    "\016\033\106\034\101\035\115\036\006\037\074\040\051" +
    "\041\062\042\054\045\013\046\060\057\031\103\050\107" +
    "\065\112\015\113\073\215\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\072\u06c4\073" +
    "\u06a3\074\u06a1\001\001\000\016\071\u06bf\352\220\353\u02cc" +
    "\354\u06c0\357\u06c1\366\344\001\001\000\004\241\u06bd\001" +
    "\001\000\002\001\001\000\016\235\u069b\243\u069d\352\220" +
    "\353\u0669\355\u069e\366\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\352\220\353\u02cc" +
    "\354\u0690\366\344\001\001\000\004\077\u0686\001\001\000" +
    "\004\071\u067c\001\001\000\002\001\001\000\014\352\220" +
    "\353\u02cc\354\u0679\360\u067a\366\344\001\001\000\004\071" +
    "\u0671\001\001\000\002\001\001\000\070\121\u0674\122\232" +
    "\123\155\124\200\126\u0675\134\357\145\337\150\144\151" +
    "\u0103\152\321\153\273\154\353\155\203\156\162\174\234" +
    "\176\265\177\323\200\270\203\306\207\u010e\220\347\225" +
    "\343\352\220\353\251\363\153\364\370\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\100" +
    "\u0683\352\220\353\u02cc\354\u02cd\366\344\001\001\000\004" +
    "\356\u067d\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\071\u0684\001\001\000\004\356\u0685\001" +
    "\001\000\002\001\001\000\006\237\u0687\244\u0688\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\071\u068a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\237\u068e\001\001\000\002\001\001\000\014\233" +
    "\u0694\352\220\353\u0669\355\u0695\366\344\001\001\000\004" +
    "\071\u0691\001\001\000\004\177\u0693\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\352\220\353\u0669\355\u0698" +
    "\366\344\001\001\000\004\071\u0696\001\001\000\070\121" +
    "\u0674\122\232\123\155\124\200\126\u0697\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\251\363\153\364\370\366" +
    "\344\001\001\000\002\001\001\000\004\071\u0699\001\001" +
    "\000\070\121\u0674\122\232\123\155\124\200\126\u069a\134" +
    "\357\145\337\150\144\151\u0103\152\321\153\273\154\353" +
    "\155\203\156\162\174\234\176\265\177\323\200\270\203" +
    "\306\207\u010e\220\347\225\343\352\220\353\251\363\153" +
    "\364\370\366\344\001\001\000\002\001\001\000\004\241" +
    "\u06b5\001\001\000\010\072\u06a2\073\u06a3\074\u06a1\001\001" +
    "\000\002\001\001\000\004\071\u069f\001\001\000\070\121" +
    "\u0674\122\232\123\155\124\200\126\u06a0\134\357\145\337" +
    "\150\144\151\u0103\152\321\153\273\154\353\155\203\156" +
    "\162\174\234\176\265\177\323\200\270\203\306\207\u010e" +
    "\220\347\225\343\352\220\353\251\363\153\364\370\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\075\u06a9\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\074\u06b1\001\001\000\002\001" +
    "\001\000\004\073\u06b3\001\001\000\002\001\001\000\024" +
    "\067\u066e\231\u06b7\234\u06b9\236\u06b6\240\u06b8\352\220\353" +
    "\u0669\355\u066f\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\235\u06bc\352\220\353\u0669\355\u069e\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\067\u066e\231\u06b7\234\u06bb\236\u06b6\352\220\353\u0669\355" +
    "\u066f\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\066\121\u06c3\122" +
    "\232\123\155\124\200\134\357\145\337\150\144\151\u0103" +
    "\152\321\153\273\154\353\155\203\156\162\174\234\176" +
    "\265\177\323\200\270\203\306\207\u010e\220\347\225\343" +
    "\352\220\353\251\363\153\364\370\366\344\001\001\000" +
    "\002\001\001\000\004\361\u06c2\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\300\u06c8\352\220\353\u0299\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\063\u027f\367\u06dc\001\001\000\002\001\001" +
    "\000\006\063\u027f\367\u06d0\001\001\000\006\063\u027f\367" +
    "\u06cf\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\u0100\u06d2\001\001\000\002\001\001\000\012\144\u06d4\352" +
    "\220\353\u028e\366\344\001\001\000\004\274\u06d6\001\001" +
    "\000\004\273\u06d8\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\066\u06dd\001\001\000\002\001" +
    "\001\000\004\272\u06df\001\001\000\002\001\001\000\012" +
    "\300\u06e1\352\220\353\u0299\366\344\001\001\000\002\001" +
    "\001\000\010\352\220\353\u06e3\366\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\016\144\u0345\211\u06e6\214" +
    "\u06e7\352\220\353\u028e\366\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\144\u0345\214\u06eb\352\220\353" +
    "\u028e\366\344\001\001\000\004\247\u06ea\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\053\u06ed\001\001\000" +
    "\004\054\u06ee\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\300\u06f2\352\220\353\u0299\366" +
    "\344\001\001\000\002\001\001\000\012\144\u06f4\352\220" +
    "\353\u028e\366\344\001\001\000\006\140\u06f5\141\u02db\001" +
    "\001\000\004\146\u06f6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\217\u0701\352" +
    "\220\353\u06fd\366\344\001\001\000\002\001\001\000\012" +
    "\137\u0707\352\220\353\u02e4\366\344\001\001\000\002\001" +
    "\001\000\006\103\u0705\215\077\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\103\u070b\215\077\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\137\u0712\352\220\353" +
    "\u02e4\366\344\001\001\000\002\001\001\000\006\103\u0710" +
    "\215\077\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\103\u0716\215\077\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\352\220\353\u0743\366\344" +
    "\001\001\000\010\352\220\353\u0742\366\344\001\001\000" +
    "\002\001\001\000\004\374\u073a\001\001\000\014\100\u0739" +
    "\352\220\353\u02cc\354\u02cd\366\344\001\001\000\004\374" +
    "\u0737\001\001\000\010\352\220\353\u0736\366\344\001\001" +
    "\000\004\374\u0734\001\001\000\004\374\u0732\001\001\000" +
    "\004\374\u0730\001\001\000\012\352\220\353\u02cc\354\u072f" +
    "\366\344\001\001\000\002\001\001\000\016\145\u0726\352" +
    "\220\353\u0117\363\153\364\370\366\344\001\001\000\002" +
    "\001\001\000\012\167\u05aa\171\u05a8\172\u0728\173\u01f7\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\374\u072b" +
    "\001\001\000\010\352\220\353\u072c\366\344\001\001\000" +
    "\002\001\001\000\012\144\u072e\352\220\353\u028e\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\144" +
    "\u0731\352\220\353\u028e\366\344\001\001\000\002\001\001" +
    "\000\012\144\u0733\352\220\353\u028e\366\344\001\001\000" +
    "\002\001\001\000\010\352\220\353\u0735\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\352\220\353" +
    "\u0738\366\344\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\352\220\353\u073b\366\344\001\001\000\002\001" +
    "\001\000\006\063\u027f\367\u073d\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\245\u0740\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\144\u0745\352\220\353\u028e\366\344\001\001\000" +
    "\002\001\001\000\012\142\u0747\352\220\353\u0237\366\344" +
    "\001\001\000\012\143\u0748\352\220\353\u0239\366\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\144\u0345\214\u075a\352\220\353" +
    "\u028e\366\344\001\001\000\004\066\u075b\001\001\000\002" +
    "\001\001\000\014\144\u0345\214\u075d\352\220\353\u028e\366" +
    "\344\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\246\u0761\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\245\u0765\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\273\u0769\001\001\000\002\001\001\000\004\247\u076b" +
    "\001\001\000\002\001\001\000\014\144\u0345\214\u076d\352" +
    "\220\353\u028e\366\344\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\144\u0345\214\u0770\352\220\353\u028e\366" +
    "\344\001\001\000\002\001\001\000\010\352\220\353\u0776" +
    "\366\344\001\001\000\010\352\220\353\u0775\366\344\001" +
    "\001\000\012\144\u0774\352\220\353\u028e\366\344\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\144\u0778\352\220\353\u028e\366\344\001\001\000\002" +
    "\001\001\000\012\300\u077a\352\220\353\u0299\366\344\001" +
    "\001\000\002\001\001\000\010\352\220\353\u077c\366\344" +
    "\001\001\000\002\001\001\000\002\001\001\000\016\144" +
    "\u0345\211\u077f\214\u06e7\352\220\353\u028e\366\344\001\001" +
    "\000\002\001\001\000\004\247\u0781\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\051\u0785\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\144\u0345\214\u0789\352\220\353\u028e\366\344" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  @Override
  public short[][] reduce_table() {return _reduce_table;}


  /** Load external table from file. */
  private static short[][] loadTableFromFile(String tableName)
  {
    String tableFileName = tableName + ".dat";
    java.io.InputStream is = SqlParser.class.getResourceAsStream(tableFileName);
    if (is == null) {
      throw new RuntimeException("Cannot find external parser table " + tableFileName);
    }

    try {
      try {

        java.io.ObjectInputStream in = new java.io.ObjectInputStream(is);
        try {
          return (short[][]) in.readObject();
        } finally {
          in.close();
        }

      } finally {
        is.close();
      }
    } catch (Exception e) {
      throw new RuntimeException("Cannot load external parser table " + tableFileName, e);
    }
  }
  /** Instance of action encapsulation class. */
  protected CUP$SqlParser$actions action_obj;

  /** Action encapsulation object initializer. */
  @Override
  protected void init_actions()
    {
      action_obj = new CUP$SqlParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  @Override
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack<java_cup.runtime.Symbol> stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$SqlParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  @Override
  public int start_state() {return 0;}
  /** Indicates start production. */
  @Override
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  @Override
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  @Override
  public int error_sym() {return 1;}



    private Symbol errorToken;
    public boolean isVerbose = false;
    public String wild;
    public Expr where;

    // List of expected tokens ids from current parsing state for generating syntax error message
    private final List<Integer> expectedTokenIds = Lists.newArrayList();

    // To avoid reporting trivial tokens as expected tokens in error messages
    private boolean reportExpectedToken(Integer tokenId) {
        if (SqlScanner.isKeyword(tokenId) ||
                tokenId.intValue() == SqlParserSymbols.COMMA ||
                tokenId.intValue() == SqlParserSymbols.IDENT) {
            return true;
        } else {
            return false;
        }
    }

    private String getErrorTypeMessage(int lastTokenId) {
        String msg = null;
        switch(lastTokenId) {
            case SqlParserSymbols.UNMATCHED_STRING_LITERAL:
                msg = "Unmatched string literal";
                break;
            case SqlParserSymbols.NUMERIC_OVERFLOW:
                msg = "Numeric overflow";
                break;
            default:
                msg = "Syntax error";
                break;
        }
        return msg;
    }

    // Override to save error token, just update error information.
    @Override
    public void syntax_error(Symbol token) {
        errorToken = token;

        // derive expected tokens from current parsing state
        expectedTokenIds.clear();
        int state = ((Symbol)stack.peek()).parse_state;
        // get row of actions table corresponding to current parsing state
        // the row consists of pairs of <tokenId, actionId>
        // a pair is stored as row[i] (tokenId) and row[i+1] (actionId)
        // the last pair is a special error action
        short[] row = action_tab[state];
        short tokenId;
        // the expected tokens are all the symbols with a
        // corresponding action from the current parsing state
        for (int i = 0; i < row.length-2; ++i) {
            // Get tokenId and skip actionId
            tokenId = row[i++];
            expectedTokenIds.add(Integer.valueOf(tokenId));
        }
    }

    // Override to keep it from calling report_fatal_error()
    // This exception is not AnalysisException because we don't want this report to client.
    @Override
    public void unrecovered_syntax_error(Symbol cur_token) throws AnalysisException {
        throw new AnalysisException(getErrorTypeMessage(cur_token.sym));
    }


    // Manually throw a parse error on a given symbol for special circumstances.
    public void parseError(String symbolName, int symbolId) throws AnalysisException {
        Symbol errorToken = getSymbolFactory().newSymbol(symbolName, symbolId,
                ((Symbol) stack.peek()), ((Symbol) stack.peek()), null);
        // Call syntax error to gather information about expected tokens, etc.
        // syntax_error does not throw an exception
        syntax_error(errorToken);

        unrecovered_syntax_error(errorToken);
    }

    // Returns error string, consisting of the original
    // stmt with a '^' under the offending token. Assumes
    // that parse() has been called and threw an exception
    public String getErrorMsg(String stmt) {
        if (errorToken == null || stmt == null) {
            return null;
        }
        String[] lines = stmt.split("\n", -1);
        StringBuffer result = new StringBuffer();
        result.append(getErrorTypeMessage(errorToken.sym) + " in line ");
        result.append(errorToken.left);
        result.append(":\n");

        // errorToken_.left is the line number of error.
        // errorToken_.right is the column number of the error.
        // index is start from 0, so "minus 1" is the real error line idx
        String errorLine = lines[errorToken.left - 1];
        // If the error is that additional tokens are expected past the end,
        // errorToken_.right will be past the end of the string.
        int lastCharIndex = Math.min(errorLine.length(), errorToken.right);
        int maxPrintLength = 60;
        int errorLoc = 0;
        if (errorLine.length() <= maxPrintLength) {
            // The line is short. Print the entire line.
            result.append(errorLine);
            result.append('\n');
            errorLoc = errorToken.right;
        } else {
            // The line is too long. Print maxPrintLength/2 characters before the error and
            // after the error.
            int contextLength = maxPrintLength / 2 - 3;
            String leftSubStr;
            if (errorToken.right > maxPrintLength / 2) {
                leftSubStr = "..." + errorLine.substring(errorToken.right - contextLength,
                        lastCharIndex);
            } else {
                leftSubStr = errorLine.substring(0, errorToken.right);
            }
            errorLoc = leftSubStr.length();
            result.append(leftSubStr);
            if (errorLine.length() - errorToken.right > maxPrintLength / 2) {
                result.append(errorLine.substring(errorToken.right,
                            errorToken.right + contextLength) + "...");
            } else {
                result.append(errorLine.substring(lastCharIndex));
            }
            result.append("\n");
        }

        // print error indicator
        for (int i = 0; i < errorLoc - 1; ++i) {
            result.append(' ');
        }
        result.append("^\n");

        // only report encountered and expected tokens for syntax errors
        if (errorToken.sym == SqlParserSymbols.UNMATCHED_STRING_LITERAL ||
                errorToken.sym == SqlParserSymbols.NUMERIC_OVERFLOW) {
            return result.toString();
        }

        // append last encountered token
        result.append("Encountered: ");
        String lastToken = SqlScanner.tokenIdMap.get(Integer.valueOf(errorToken.sym));
        if (lastToken != null) {
            result.append(lastToken);
        } else if (SqlScanner.isKeyword((String) errorToken.value)) {
            result.append("A reserved word cannot be used as an identifier: ").append((String) errorToken.value);
        } else {
            result.append("Unknown last token with id: " + errorToken.sym);
        }

        // Append expected tokens
        result.append('\n');
        result.append("Expected: ");
        String expectedToken = null;
        Integer tokenId = null;
        for (int i = 0; i < expectedTokenIds.size(); ++i) {
            tokenId = expectedTokenIds.get(i);
            // keywords hints
            if (SqlScanner.isKeyword(lastToken) && tokenId.intValue() == SqlParserSymbols.IDENT) {
                result.append(String.format("%s is keyword, maybe `%s`", lastToken, lastToken) + ", ");
                continue;
            }

            if (reportExpectedToken(tokenId)) {
                expectedToken = SqlScanner.tokenIdMap.get(tokenId);
                result.append(expectedToken + ", ");
            }
        }
        // remove trailing ", "
        result.delete(result.length() - 2, result.length());
        result.append('\n');

        return result.toString();
    }


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$SqlParser$actions {
  private final SqlParser parser;

  /** Constructor */
  CUP$SqlParser$actions(SqlParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$SqlParser$do_action(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$SqlParser$result;

      /* select the action based on the action number */
      switch (CUP$SqlParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 956: // time_unit ::= KW_SECOND 
            {
               CUP$SqlParser$result = case956(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 955: // time_unit ::= KW_MINUTE 
            {
               CUP$SqlParser$result = case955(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 954: // time_unit ::= KW_HOUR 
            {
               CUP$SqlParser$result = case954(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 953: // time_unit ::= KW_DAY 
            {
               CUP$SqlParser$result = case953(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 952: // time_unit ::= KW_WEEK 
            {
               CUP$SqlParser$result = case952(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 951: // time_unit ::= KW_MONTH 
            {
               CUP$SqlParser$result = case951(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 950: // time_unit ::= KW_YEAR 
            {
               CUP$SqlParser$result = case950(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 949: // ident_or_text ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case949(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 948: // ident_or_text ::= ident 
            {
               CUP$SqlParser$result = case948(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 947: // ident ::= keyword 
            {
               CUP$SqlParser$result = case947(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 946: // ident ::= IDENT 
            {
               CUP$SqlParser$result = case946(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 945: // keyword ::= time_unit 
            {
               CUP$SqlParser$result = case945(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 944: // keyword ::= KW_DYNAMIC 
            {
               CUP$SqlParser$result = case944(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 943: // keyword ::= KW_GROUPING 
            {
               CUP$SqlParser$result = case943(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 942: // keyword ::= KW_STOP 
            {
               CUP$SqlParser$result = case942(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 941: // keyword ::= KW_RESUME 
            {
               CUP$SqlParser$result = case941(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 940: // keyword ::= KW_PAUSE 
            {
               CUP$SqlParser$result = case940(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 939: // keyword ::= KW_ROUTINE 
            {
               CUP$SqlParser$result = case939(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 938: // keyword ::= KW_TASK 
            {
               CUP$SqlParser$result = case938(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 937: // keyword ::= KW_FREE 
            {
               CUP$SqlParser$result = case937(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 936: // keyword ::= KW_MAX 
            {
               CUP$SqlParser$result = case936(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 935: // keyword ::= KW_MIN 
            {
               CUP$SqlParser$result = case935(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 934: // keyword ::= KW_SUM 
            {
               CUP$SqlParser$result = case934(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 933: // keyword ::= KW_COUNT 
            {
               CUP$SqlParser$result = case933(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 932: // keyword ::= KW_MIGRATIONS 
            {
               CUP$SqlParser$result = case932(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 931: // keyword ::= KW_MIGRATE 
            {
               CUP$SqlParser$result = case931(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 930: // keyword ::= KW_LINK 
            {
               CUP$SqlParser$result = case930(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 929: // keyword ::= KW_CLUSTERS 
            {
               CUP$SqlParser$result = case929(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 928: // keyword ::= KW_CLUSTER 
            {
               CUP$SqlParser$result = case928(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 927: // keyword ::= KW_WORK 
            {
               CUP$SqlParser$result = case927(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 926: // keyword ::= KW_WARNINGS 
            {
               CUP$SqlParser$result = case926(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 925: // keyword ::= KW_MATERIALIZED 
            {
               CUP$SqlParser$result = case925(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 924: // keyword ::= KW_VIEW 
            {
               CUP$SqlParser$result = case924(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 923: // keyword ::= KW_VALUE 
            {
               CUP$SqlParser$result = case923(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 922: // keyword ::= KW_VARIABLES 
            {
               CUP$SqlParser$result = case922(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 921: // keyword ::= KW_USER 
            {
               CUP$SqlParser$result = case921(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 920: // keyword ::= KW_UNCOMMITTED 
            {
               CUP$SqlParser$result = case920(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 919: // keyword ::= KW_TYPES 
            {
               CUP$SqlParser$result = case919(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 918: // keyword ::= KW_TYPE 
            {
               CUP$SqlParser$result = case918(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 917: // keyword ::= KW_TRUNCATE 
            {
               CUP$SqlParser$result = case917(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 916: // keyword ::= KW_TRIGGERS 
            {
               CUP$SqlParser$result = case916(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 915: // keyword ::= KW_TRANSACTION 
            {
               CUP$SqlParser$result = case915(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 914: // keyword ::= KW_TIMESTAMP 
            {
               CUP$SqlParser$result = case914(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 913: // keyword ::= KW_THAN 
            {
               CUP$SqlParser$result = case913(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 912: // keyword ::= KW_TEMPORARY 
            {
               CUP$SqlParser$result = case912(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 911: // keyword ::= KW_TABLES 
            {
               CUP$SqlParser$result = case911(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 910: // keyword ::= KW_STRING 
            {
               CUP$SqlParser$result = case910(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 909: // keyword ::= KW_STORAGE 
            {
               CUP$SqlParser$result = case909(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 908: // keyword ::= KW_STATUS 
            {
               CUP$SqlParser$result = case908(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 907: // keyword ::= KW_START 
            {
               CUP$SqlParser$result = case907(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 906: // keyword ::= KW_SPLIT 
            {
               CUP$SqlParser$result = case906(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 905: // keyword ::= KW_SONAME 
            {
               CUP$SqlParser$result = case905(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 904: // keyword ::= KW_SNAPSHOT 
            {
               CUP$SqlParser$result = case904(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 903: // keyword ::= KW_SESSION 
            {
               CUP$SqlParser$result = case903(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 902: // keyword ::= KW_SERIALIZABLE 
            {
               CUP$SqlParser$result = case902(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 901: // keyword ::= KW_SCHEMA 
            {
               CUP$SqlParser$result = case901(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 900: // keyword ::= KW_ROLLUP 
            {
               CUP$SqlParser$result = case900(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 899: // keyword ::= KW_ROLLBACK 
            {
               CUP$SqlParser$result = case899(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 898: // keyword ::= KW_RETURNS 
            {
               CUP$SqlParser$result = case898(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 897: // keyword ::= KW_RESTORE 
            {
               CUP$SqlParser$result = case897(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 896: // keyword ::= KW_RESOURCES 
            {
               CUP$SqlParser$result = case896(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 895: // keyword ::= KW_RESOURCE 
            {
               CUP$SqlParser$result = case895(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 894: // keyword ::= KW_REPOSITORIES 
            {
               CUP$SqlParser$result = case894(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 893: // keyword ::= KW_REPOSITORY 
            {
               CUP$SqlParser$result = case893(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 892: // keyword ::= KW_REPLACE_IF_NOT_NULL 
            {
               CUP$SqlParser$result = case892(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 891: // keyword ::= KW_REPEATABLE 
            {
               CUP$SqlParser$result = case891(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 890: // keyword ::= KW_RECOVER 
            {
               CUP$SqlParser$result = case890(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 889: // keyword ::= KW_RANDOM 
            {
               CUP$SqlParser$result = case889(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 888: // keyword ::= KW_QUOTA 
            {
               CUP$SqlParser$result = case888(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 887: // keyword ::= KW_QUERY 
            {
               CUP$SqlParser$result = case887(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 886: // keyword ::= KW_PROPERTY 
            {
               CUP$SqlParser$result = case886(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 885: // keyword ::= KW_PROPERTIES 
            {
               CUP$SqlParser$result = case885(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 884: // keyword ::= KW_PROCESSLIST 
            {
               CUP$SqlParser$result = case884(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 883: // keyword ::= KW_PROC 
            {
               CUP$SqlParser$result = case883(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 882: // keyword ::= KW_PLUGINS 
            {
               CUP$SqlParser$result = case882(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 881: // keyword ::= KW_PLUGIN 
            {
               CUP$SqlParser$result = case881(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 880: // keyword ::= KW_PASSWORD 
            {
               CUP$SqlParser$result = case880(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 879: // keyword ::= KW_PARTITIONS 
            {
               CUP$SqlParser$result = case879(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 878: // keyword ::= KW_OPEN 
            {
               CUP$SqlParser$result = case878(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 877: // keyword ::= KW_ONLY 
            {
               CUP$SqlParser$result = case877(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 876: // keyword ::= KW_OFFSET 
            {
               CUP$SqlParser$result = case876(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 875: // keyword ::= KW_NULLS 
            {
               CUP$SqlParser$result = case875(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 874: // keyword ::= KW_NO 
            {
               CUP$SqlParser$result = case874(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 873: // keyword ::= KW_NEGATIVE 
            {
               CUP$SqlParser$result = case873(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 872: // keyword ::= KW_NAMES 
            {
               CUP$SqlParser$result = case872(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 871: // keyword ::= KW_NAME 
            {
               CUP$SqlParser$result = case871(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 870: // keyword ::= KW_MODIFY 
            {
               CUP$SqlParser$result = case870(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 869: // keyword ::= KW_MERGE 
            {
               CUP$SqlParser$result = case869(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 868: // keyword ::= KW_LOCATION 
            {
               CUP$SqlParser$result = case868(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 867: // keyword ::= KW_LOCAL 
            {
               CUP$SqlParser$result = case867(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 866: // keyword ::= KW_LEVEL 
            {
               CUP$SqlParser$result = case866(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 865: // keyword ::= KW_LESS 
            {
               CUP$SqlParser$result = case865(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 864: // keyword ::= KW_LAST 
            {
               CUP$SqlParser$result = case864(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 863: // keyword ::= KW_LABEL 
            {
               CUP$SqlParser$result = case863(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 862: // keyword ::= KW_ISOLATION 
            {
               CUP$SqlParser$result = case862(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 861: // keyword ::= KW_ISNULL 
            {
               CUP$SqlParser$result = case861(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 860: // keyword ::= KW_INDEXES 
            {
               CUP$SqlParser$result = case860(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 859: // keyword ::= KW_IDENTIFIED 
            {
               CUP$SqlParser$result = case859(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 858: // keyword ::= KW_HUB 
            {
               CUP$SqlParser$result = case858(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 857: // keyword ::= KW_HELP 
            {
               CUP$SqlParser$result = case857(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 856: // keyword ::= KW_HASH 
            {
               CUP$SqlParser$result = case856(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 855: // keyword ::= KW_GLOBAL 
            {
               CUP$SqlParser$result = case855(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 854: // keyword ::= KW_EXTERNAL 
            {
               CUP$SqlParser$result = case854(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 853: // keyword ::= KW_EVENTS 
            {
               CUP$SqlParser$result = case853(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 852: // keyword ::= KW_ERRORS 
            {
               CUP$SqlParser$result = case852(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 851: // keyword ::= KW_ENGINES 
            {
               CUP$SqlParser$result = case851(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 850: // keyword ::= KW_ENGINE 
            {
               CUP$SqlParser$result = case850(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 849: // keyword ::= KW_END 
            {
               CUP$SqlParser$result = case849(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 848: // keyword ::= KW_FUNCTION 
            {
               CUP$SqlParser$result = case848(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 847: // keyword ::= KW_PATH 
            {
               CUP$SqlParser$result = case847(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 846: // keyword ::= KW_HLL_UNION 
            {
               CUP$SqlParser$result = case846(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 845: // keyword ::= KW_FORMAT 
            {
               CUP$SqlParser$result = case845(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 844: // keyword ::= KW_FIRST 
            {
               CUP$SqlParser$result = case844(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 843: // keyword ::= KW_FILE 
            {
               CUP$SqlParser$result = case843(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 842: // keyword ::= KW_BUCKETS 
            {
               CUP$SqlParser$result = case842(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 841: // keyword ::= KW_DISTINCTPCSA 
            {
               CUP$SqlParser$result = case841(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 840: // keyword ::= KW_DISTINCTPC 
            {
               CUP$SqlParser$result = case840(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 839: // keyword ::= KW_DATETIME 
            {
               CUP$SqlParser$result = case839(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 838: // keyword ::= KW_DATE 
            {
               CUP$SqlParser$result = case838(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 837: // keyword ::= KW_DATA 
            {
               CUP$SqlParser$result = case837(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 836: // keyword ::= KW_CONNECTION_ID 
            {
               CUP$SqlParser$result = case836(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 835: // keyword ::= KW_CONNECTION 
            {
               CUP$SqlParser$result = case835(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 834: // keyword ::= KW_CONFIG 
            {
               CUP$SqlParser$result = case834(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 833: // keyword ::= KW_COMMIT 
            {
               CUP$SqlParser$result = case833(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 832: // keyword ::= KW_COLLATION 
            {
               CUP$SqlParser$result = case832(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 831: // keyword ::= KW_CONSISTENT 
            {
               CUP$SqlParser$result = case831(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 830: // keyword ::= KW_COMMITTED 
            {
               CUP$SqlParser$result = case830(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 829: // keyword ::= KW_COMMENT 
            {
               CUP$SqlParser$result = case829(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 828: // keyword ::= KW_COLUMNS 
            {
               CUP$SqlParser$result = case828(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 827: // keyword ::= KW_CHECK 
            {
               CUP$SqlParser$result = case827(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 826: // keyword ::= KW_CHARSET 
            {
               CUP$SqlParser$result = case826(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 825: // keyword ::= KW_CHAIN 
            {
               CUP$SqlParser$result = case825(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 824: // keyword ::= KW_BUILTIN 
            {
               CUP$SqlParser$result = case824(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 823: // keyword ::= KW_BACKENDS 
            {
               CUP$SqlParser$result = case823(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 822: // keyword ::= KW_BROKER 
            {
               CUP$SqlParser$result = case822(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 821: // keyword ::= KW_BOOLEAN 
            {
               CUP$SqlParser$result = case821(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 820: // keyword ::= KW_BITMAP_UNION 
            {
               CUP$SqlParser$result = case820(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 819: // keyword ::= KW_BITMAP 
            {
               CUP$SqlParser$result = case819(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 818: // keyword ::= KW_BEGIN 
            {
               CUP$SqlParser$result = case818(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 817: // keyword ::= KW_BACKUP 
            {
               CUP$SqlParser$result = case817(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 816: // keyword ::= KW_AUTHORS 
            {
               CUP$SqlParser$result = case816(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 815: // keyword ::= KW_AGGREGATE 
            {
               CUP$SqlParser$result = case815(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 814: // keyword ::= KW_AFTER 
            {
               CUP$SqlParser$result = case814(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 813: // type_func_name_keyword ::= KW_RIGHT 
            {
               CUP$SqlParser$result = case813(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 812: // type_func_name_keyword ::= KW_LEFT 
            {
               CUP$SqlParser$result = case812(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 811: // opt_release ::= KW_NO KW_RELEASE 
            {
               CUP$SqlParser$result = case811(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 810: // opt_release ::= KW_RELEASE 
            {
               CUP$SqlParser$result = case810(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 809: // opt_release ::= 
            {
               CUP$SqlParser$result = case809(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 808: // opt_chain ::= KW_AND KW_CHAIN 
            {
               CUP$SqlParser$result = case808(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 807: // opt_chain ::= KW_AND KW_NO KW_CHAIN 
            {
               CUP$SqlParser$result = case807(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 806: // opt_chain ::= 
            {
               CUP$SqlParser$result = case806(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 805: // opt_work ::= KW_WORK 
            {
               CUP$SqlParser$result = case805(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 804: // opt_work ::= 
            {
               CUP$SqlParser$result = case804(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 803: // opt_with_consistent_snapshot ::= KW_WITH KW_CONSISTENT KW_SNAPSHOT 
            {
               CUP$SqlParser$result = case803(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 802: // opt_with_consistent_snapshot ::= 
            {
               CUP$SqlParser$result = case802(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 801: // unsupported_stmt ::= KW_ROLLBACK opt_work opt_chain opt_release 
            {
               CUP$SqlParser$result = case801(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 800: // unsupported_stmt ::= KW_COMMIT opt_work opt_chain opt_release 
            {
               CUP$SqlParser$result = case800(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 799: // unsupported_stmt ::= KW_BEGIN opt_work 
            {
               CUP$SqlParser$result = case799(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 798: // unsupported_stmt ::= KW_START KW_TRANSACTION opt_with_consistent_snapshot 
            {
               CUP$SqlParser$result = case798(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 797: // truncate_stmt ::= KW_TRUNCATE KW_TABLE base_table_ref 
            {
               CUP$SqlParser$result = case797(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 796: // admin_stmt ::= KW_ADMIN KW_CHECK KW_TABLET LPAREN integer_list RPAREN opt_properties 
            {
               CUP$SqlParser$result = case796(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 795: // admin_stmt ::= KW_ADMIN KW_SHOW KW_FRONTEND KW_CONFIG 
            {
               CUP$SqlParser$result = case795(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 794: // admin_stmt ::= KW_ADMIN KW_SET KW_FRONTEND KW_CONFIG opt_key_value_map 
            {
               CUP$SqlParser$result = case794(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 793: // admin_stmt ::= KW_ADMIN KW_CANCEL KW_REPAIR KW_TABLE base_table_ref 
            {
               CUP$SqlParser$result = case793(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 792: // admin_stmt ::= KW_ADMIN KW_REPAIR KW_TABLE base_table_ref 
            {
               CUP$SqlParser$result = case792(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 791: // admin_stmt ::= KW_ADMIN KW_SET KW_REPLICA KW_STATUS KW_PROPERTIES LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case791(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 790: // admin_stmt ::= KW_ADMIN KW_SHOW KW_REPLICA KW_DISTRIBUTION KW_FROM base_table_ref 
            {
               CUP$SqlParser$result = case790(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 789: // admin_stmt ::= KW_ADMIN KW_SHOW KW_REPLICA KW_STATUS KW_FROM base_table_ref opt_wild_where 
            {
               CUP$SqlParser$result = case789(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 788: // integer_list ::= INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case788(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 787: // integer_list ::= integer_list COMMA INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case787(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 786: // string_list ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case786(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 785: // string_list ::= string_list COMMA STRING_LITERAL 
            {
               CUP$SqlParser$result = case785(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 784: // privilege_list ::= privilege_type 
            {
               CUP$SqlParser$result = case784(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 783: // privilege_list ::= privilege_list COMMA privilege_type 
            {
               CUP$SqlParser$result = case783(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 782: // privilege_type ::= KW_ALL 
            {
               CUP$SqlParser$result = case782(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 781: // privilege_type ::= ident 
            {
               CUP$SqlParser$result = case781(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 780: // column_ref ::= ident DOT ident DOT ident 
            {
               CUP$SqlParser$result = case780(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 779: // column_ref ::= ident DOT ident 
            {
               CUP$SqlParser$result = case779(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 778: // column_ref ::= ident 
            {
               CUP$SqlParser$result = case778(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 777: // compound_predicate ::= NOT expr 
            {
               CUP$SqlParser$result = case777(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 776: // compound_predicate ::= KW_NOT expr 
            {
               CUP$SqlParser$result = case776(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 775: // compound_predicate ::= expr KW_OR expr 
            {
               CUP$SqlParser$result = case775(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 774: // compound_predicate ::= expr KW_AND expr 
            {
               CUP$SqlParser$result = case774(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 773: // subquery ::= LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case773(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 772: // subquery ::= LPAREN subquery RPAREN 
            {
               CUP$SqlParser$result = case772(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 771: // in_predicate ::= expr KW_NOT KW_IN subquery 
            {
               CUP$SqlParser$result = case771(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 770: // in_predicate ::= expr KW_IN subquery 
            {
               CUP$SqlParser$result = case770(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 769: // in_predicate ::= expr KW_NOT KW_IN LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case769(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 768: // in_predicate ::= expr KW_IN LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case768(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 767: // between_predicate ::= expr KW_NOT KW_BETWEEN predicate KW_AND expr 
            {
               CUP$SqlParser$result = case767(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 766: // between_predicate ::= expr KW_NOT KW_BETWEEN non_pred_expr KW_AND expr 
            {
               CUP$SqlParser$result = case766(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 765: // between_predicate ::= expr KW_BETWEEN predicate KW_AND expr 
            {
               CUP$SqlParser$result = case765(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 764: // between_predicate ::= expr KW_BETWEEN non_pred_expr KW_AND expr 
            {
               CUP$SqlParser$result = case764(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 763: // like_predicate ::= expr KW_NOT KW_REGEXP expr 
            {
               CUP$SqlParser$result = case763(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 762: // like_predicate ::= expr KW_NOT KW_LIKE expr 
            {
               CUP$SqlParser$result = case762(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 761: // like_predicate ::= expr KW_REGEXP expr 
            {
               CUP$SqlParser$result = case761(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 760: // like_predicate ::= expr KW_LIKE expr 
            {
               CUP$SqlParser$result = case760(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 759: // comparison_predicate ::= expr LESSTHAN EQUAL GREATERTHAN expr 
            {
               CUP$SqlParser$result = case759(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 758: // comparison_predicate ::= expr GREATERTHAN expr 
            {
               CUP$SqlParser$result = case758(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 757: // comparison_predicate ::= expr LESSTHAN expr 
            {
               CUP$SqlParser$result = case757(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 756: // comparison_predicate ::= expr GREATERTHAN EQUAL expr 
            {
               CUP$SqlParser$result = case756(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 755: // comparison_predicate ::= expr LESSTHAN EQUAL expr 
            {
               CUP$SqlParser$result = case755(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 754: // comparison_predicate ::= expr LESSTHAN GREATERTHAN expr 
            {
               CUP$SqlParser$result = case754(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 753: // comparison_predicate ::= expr NOT EQUAL expr 
            {
               CUP$SqlParser$result = case753(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 752: // comparison_predicate ::= expr EQUAL expr 
            {
               CUP$SqlParser$result = case752(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 751: // predicate ::= LPAREN predicate RPAREN 
            {
               CUP$SqlParser$result = case751(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 750: // predicate ::= like_predicate 
            {
               CUP$SqlParser$result = case750(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 749: // predicate ::= exists_predicate 
            {
               CUP$SqlParser$result = case749(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 748: // predicate ::= in_predicate 
            {
               CUP$SqlParser$result = case748(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 747: // predicate ::= compound_predicate 
            {
               CUP$SqlParser$result = case747(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 746: // predicate ::= comparison_predicate 
            {
               CUP$SqlParser$result = case746(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 745: // predicate ::= between_predicate 
            {
               CUP$SqlParser$result = case745(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 744: // predicate ::= expr KW_IS KW_NOT KW_NULL 
            {
               CUP$SqlParser$result = case744(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 743: // predicate ::= KW_ISNULL LPAREN expr RPAREN 
            {
               CUP$SqlParser$result = case743(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 742: // predicate ::= expr KW_IS KW_NULL 
            {
               CUP$SqlParser$result = case742(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 741: // function_params ::= KW_DISTINCT expr_list 
            {
               CUP$SqlParser$result = case741(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 740: // function_params ::= KW_ALL expr_list 
            {
               CUP$SqlParser$result = case740(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 739: // function_params ::= expr_list 
            {
               CUP$SqlParser$result = case739(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 738: // function_params ::= KW_ALL STAR 
            {
               CUP$SqlParser$result = case738(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 737: // function_params ::= STAR 
            {
               CUP$SqlParser$result = case737(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 736: // literal ::= NUMERIC_OVERFLOW 
            {
               CUP$SqlParser$result = case736(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 735: // literal ::= UNMATCHED_STRING_LITERAL expr 
            {
               CUP$SqlParser$result = case735(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 734: // literal ::= KW_NULL 
            {
               CUP$SqlParser$result = case734(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 733: // literal ::= KW_FALSE 
            {
               CUP$SqlParser$result = case733(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 732: // literal ::= KW_TRUE 
            {
               CUP$SqlParser$result = case732(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 731: // literal ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case731(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 730: // literal ::= DECIMAL_LITERAL 
            {
               CUP$SqlParser$result = case730(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 729: // literal ::= FLOATINGPOINT_LITERAL 
            {
               CUP$SqlParser$result = case729(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 728: // literal ::= LARGE_INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case728(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 727: // literal ::= INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case727(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 726: // timestamp_arithmetic_expr ::= function_name LPAREN time_unit COMMA expr COMMA expr RPAREN 
            {
               CUP$SqlParser$result = case726(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 725: // timestamp_arithmetic_expr ::= function_name LPAREN expr_list COMMA KW_INTERVAL expr ident RPAREN 
            {
               CUP$SqlParser$result = case725(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 724: // timestamp_arithmetic_expr ::= expr SUBTRACT KW_INTERVAL expr ident 
            {
               CUP$SqlParser$result = case724(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 723: // timestamp_arithmetic_expr ::= expr ADD KW_INTERVAL expr ident 
            {
               CUP$SqlParser$result = case723(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 722: // timestamp_arithmetic_expr ::= KW_INTERVAL expr ident ADD expr 
            {
               CUP$SqlParser$result = case722(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 721: // arithmetic_expr ::= BITNOT expr 
            {
               CUP$SqlParser$result = case721(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 720: // arithmetic_expr ::= expr BITXOR expr 
            {
               CUP$SqlParser$result = case720(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 719: // arithmetic_expr ::= expr BITOR expr 
            {
               CUP$SqlParser$result = case719(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 718: // arithmetic_expr ::= expr BITAND expr 
            {
               CUP$SqlParser$result = case718(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 717: // arithmetic_expr ::= expr SUBTRACT expr 
            {
               CUP$SqlParser$result = case717(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 716: // arithmetic_expr ::= expr ADD expr 
            {
               CUP$SqlParser$result = case716(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 715: // arithmetic_expr ::= expr KW_DIV expr 
            {
               CUP$SqlParser$result = case715(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 714: // arithmetic_expr ::= expr MOD expr 
            {
               CUP$SqlParser$result = case714(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 713: // arithmetic_expr ::= expr DIVIDE expr 
            {
               CUP$SqlParser$result = case713(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 712: // arithmetic_expr ::= expr STAR expr 
            {
               CUP$SqlParser$result = case712(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 711: // window_boundary ::= expr KW_FOLLOWING 
            {
               CUP$SqlParser$result = case711(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 710: // window_boundary ::= expr KW_PRECEDING 
            {
               CUP$SqlParser$result = case710(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 709: // window_boundary ::= KW_CURRENT KW_ROW 
            {
               CUP$SqlParser$result = case709(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 708: // window_boundary ::= KW_UNBOUNDED KW_FOLLOWING 
            {
               CUP$SqlParser$result = case708(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 707: // window_boundary ::= KW_UNBOUNDED KW_PRECEDING 
            {
               CUP$SqlParser$result = case707(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 706: // window_type ::= KW_RANGE 
            {
               CUP$SqlParser$result = case706(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 705: // window_type ::= KW_ROWS 
            {
               CUP$SqlParser$result = case705(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 704: // opt_window_clause ::= 
            {
               CUP$SqlParser$result = case704(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 703: // opt_window_clause ::= window_type KW_BETWEEN window_boundary KW_AND window_boundary 
            {
               CUP$SqlParser$result = case703(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 702: // opt_window_clause ::= window_type window_boundary 
            {
               CUP$SqlParser$result = case702(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 701: // opt_partition_by_clause ::= 
            {
               CUP$SqlParser$result = case701(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 700: // opt_partition_by_clause ::= KW_PARTITION KW_BY expr_list 
            {
               CUP$SqlParser$result = case700(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 699: // analytic_expr ::= function_call_expr KW_OVER LPAREN opt_partition_by_clause order_by_clause opt_window_clause RPAREN 
            {
               CUP$SqlParser$result = case699(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 698: // func_arg_list ::= func_arg_list COMMA expr 
            {
               CUP$SqlParser$result = case698(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 697: // func_arg_list ::= expr 
            {
               CUP$SqlParser$result = case697(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 696: // expr_pipe_list ::= expr_pipe_list KW_PIPE expr 
            {
               CUP$SqlParser$result = case696(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 695: // expr_pipe_list ::= expr KW_PIPE expr 
            {
               CUP$SqlParser$result = case695(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 694: // non_pred_expr ::= KW_NULL KW_IS KW_NOT KW_NULL 
            {
               CUP$SqlParser$result = case694(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 693: // non_pred_expr ::= KW_NULL KW_IS KW_NULL 
            {
               CUP$SqlParser$result = case693(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 692: // non_pred_expr ::= subquery 
            {
               CUP$SqlParser$result = case692(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 691: // non_pred_expr ::= KW_PASSWORD LPAREN STRING_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case691(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 690: // non_pred_expr ::= KW_CONNECTION_ID LPAREN RPAREN 
            {
               CUP$SqlParser$result = case690(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 689: // non_pred_expr ::= KW_CURRENT_USER LPAREN RPAREN 
            {
               CUP$SqlParser$result = case689(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 688: // non_pred_expr ::= KW_USER LPAREN RPAREN 
            {
               CUP$SqlParser$result = case688(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 687: // non_pred_expr ::= KW_DATABASE LPAREN RPAREN 
            {
               CUP$SqlParser$result = case687(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 686: // non_pred_expr ::= KW_TRIM LPAREN function_params RPAREN 
            {
               CUP$SqlParser$result = case686(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 685: // non_pred_expr ::= LPAREN non_pred_expr RPAREN 
            {
               CUP$SqlParser$result = case685(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 684: // non_pred_expr ::= arithmetic_expr 
            {
               CUP$SqlParser$result = case684(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 683: // non_pred_expr ::= timestamp_arithmetic_expr 
            {
               CUP$SqlParser$result = case683(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 682: // non_pred_expr ::= column_ref 
            {
               CUP$SqlParser$result = case682(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 681: // non_pred_expr ::= case_expr 
            {
               CUP$SqlParser$result = case681(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 680: // non_pred_expr ::= cast_expr 
            {
               CUP$SqlParser$result = case680(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 679: // non_pred_expr ::= expr_pipe_list 
            {
               CUP$SqlParser$result = case679(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 678: // non_pred_expr ::= KW_IF LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case678(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 677: // non_pred_expr ::= analytic_expr 
            {
               CUP$SqlParser$result = case677(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 676: // non_pred_expr ::= KW_EXTRACT LPAREN function_name KW_FROM func_arg_list RPAREN 
            {
               CUP$SqlParser$result = case676(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 675: // non_pred_expr ::= KW_TIMESTAMP STRING_LITERAL 
            {
               CUP$SqlParser$result = case675(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 674: // non_pred_expr ::= KW_DATE STRING_LITERAL 
            {
               CUP$SqlParser$result = case674(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 673: // non_pred_expr ::= function_call_expr 
            {
               CUP$SqlParser$result = case673(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 672: // non_pred_expr ::= literal 
            {
               CUP$SqlParser$result = case672(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 671: // non_pred_expr ::= AT AT var_ident_type ident 
            {
               CUP$SqlParser$result = case671(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 670: // non_pred_expr ::= AT AT ident 
            {
               CUP$SqlParser$result = case670(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 669: // non_pred_expr ::= sign_chain_expr 
            {
               CUP$SqlParser$result = case669(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 668: // exists_predicate ::= KW_EXISTS subquery 
            {
               CUP$SqlParser$result = case668(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 667: // function_call_expr ::= function_name LPAREN function_params RPAREN 
            {
               CUP$SqlParser$result = case667(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 666: // function_call_expr ::= function_name LPAREN RPAREN 
            {
               CUP$SqlParser$result = case666(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 665: // expr ::= predicate 
            {
               CUP$SqlParser$result = case665(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 664: // expr ::= non_pred_expr 
            {
               CUP$SqlParser$result = case664(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 663: // sign_chain_expr ::= ADD expr 
            {
               CUP$SqlParser$result = case663(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 662: // sign_chain_expr ::= SUBTRACT expr 
            {
               CUP$SqlParser$result = case662(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 661: // case_else_clause ::= 
            {
               CUP$SqlParser$result = case661(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 660: // case_else_clause ::= KW_ELSE expr 
            {
               CUP$SqlParser$result = case660(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 659: // case_when_clause_list ::= case_when_clause_list KW_WHEN expr KW_THEN expr 
            {
               CUP$SqlParser$result = case659(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 658: // case_when_clause_list ::= KW_WHEN expr KW_THEN expr 
            {
               CUP$SqlParser$result = case658(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 657: // case_expr ::= KW_CASE case_when_clause_list case_else_clause KW_END 
            {
               CUP$SqlParser$result = case657(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 656: // case_expr ::= KW_CASE expr case_when_clause_list case_else_clause KW_END 
            {
               CUP$SqlParser$result = case656(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 655: // cast_expr ::= KW_CAST LPAREN expr KW_AS type_def RPAREN 
            {
               CUP$SqlParser$result = case655(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 654: // func_args_def ::= type_def_list COMMA DOTDOTDOT 
            {
               CUP$SqlParser$result = case654(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 653: // func_args_def ::= DOTDOTDOT 
            {
               CUP$SqlParser$result = case653(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 652: // func_args_def ::= type_def_list 
            {
               CUP$SqlParser$result = case652(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 651: // type_def_list ::= type_def_list COMMA type_def 
            {
               CUP$SqlParser$result = case651(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 650: // type_def_list ::= type_def 
            {
               CUP$SqlParser$result = case650(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 649: // type_def ::= type 
            {
               CUP$SqlParser$result = case649(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 648: // opt_field_length ::= 
            {
               CUP$SqlParser$result = case648(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 647: // opt_field_length ::= LPAREN INTEGER_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case647(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 646: // type ::= KW_HLL 
            {
               CUP$SqlParser$result = case646(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 645: // type ::= KW_DECIMAL 
            {
               CUP$SqlParser$result = case645(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 644: // type ::= KW_DECIMAL LPAREN INTEGER_LITERAL COMMA INTEGER_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case644(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 643: // type ::= KW_DECIMAL LPAREN INTEGER_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case643(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 642: // type ::= KW_CHAR 
            {
               CUP$SqlParser$result = case642(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 641: // type ::= KW_CHAR LPAREN INTEGER_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case641(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 640: // type ::= KW_VARCHAR 
            {
               CUP$SqlParser$result = case640(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 639: // type ::= KW_VARCHAR LPAREN INTEGER_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case639(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 638: // type ::= KW_STRING 
            {
               CUP$SqlParser$result = case638(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 637: // type ::= KW_BITMAP 
            {
               CUP$SqlParser$result = case637(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 636: // type ::= KW_TIME 
            {
               CUP$SqlParser$result = case636(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 635: // type ::= KW_DATETIME 
            {
               CUP$SqlParser$result = case635(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 634: // type ::= KW_DATE 
            {
               CUP$SqlParser$result = case634(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 633: // type ::= KW_DOUBLE 
            {
               CUP$SqlParser$result = case633(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 632: // type ::= KW_FLOAT 
            {
               CUP$SqlParser$result = case632(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 631: // type ::= KW_BOOLEAN 
            {
               CUP$SqlParser$result = case631(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 630: // type ::= KW_LARGEINT opt_field_length 
            {
               CUP$SqlParser$result = case630(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 629: // type ::= KW_BIGINT opt_field_length 
            {
               CUP$SqlParser$result = case629(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 628: // type ::= KW_INT opt_field_length 
            {
               CUP$SqlParser$result = case628(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 627: // type ::= KW_SMALLINT opt_field_length 
            {
               CUP$SqlParser$result = case627(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 626: // type ::= KW_TINYINT opt_field_length 
            {
               CUP$SqlParser$result = case626(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 625: // limit_clause ::= KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case625(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 624: // limit_clause ::= KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case624(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 623: // limit_clause ::= 
            {
               CUP$SqlParser$result = case623(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 622: // limit_clause ::= KW_LIMIT INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case622(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 621: // opt_nulls_order_param ::= 
            {
               CUP$SqlParser$result = case621(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 620: // opt_nulls_order_param ::= KW_NULLS KW_LAST 
            {
               CUP$SqlParser$result = case620(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 619: // opt_nulls_order_param ::= KW_NULLS KW_FIRST 
            {
               CUP$SqlParser$result = case619(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 618: // opt_order_param ::= 
            {
               CUP$SqlParser$result = case618(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 617: // opt_order_param ::= KW_DESC 
            {
               CUP$SqlParser$result = case617(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 616: // opt_order_param ::= KW_ASC 
            {
               CUP$SqlParser$result = case616(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 615: // order_by_element ::= expr opt_order_param opt_nulls_order_param 
            {
               CUP$SqlParser$result = case615(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 614: // order_by_elements ::= order_by_elements COMMA order_by_element 
            {
               CUP$SqlParser$result = case614(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 613: // order_by_elements ::= order_by_element 
            {
               CUP$SqlParser$result = case613(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 612: // order_by_clause ::= 
            {
               CUP$SqlParser$result = case612(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 611: // order_by_clause ::= KW_ORDER KW_BY order_by_elements 
            {
               CUP$SqlParser$result = case611(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 610: // having_clause ::= 
            {
               CUP$SqlParser$result = case610(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 609: // having_clause ::= KW_HAVING expr 
            {
               CUP$SqlParser$result = case609(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 608: // group_by_clause ::= 
            {
               CUP$SqlParser$result = case608(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 607: // group_by_clause ::= KW_GROUP KW_BY grouping_elements 
            {
               CUP$SqlParser$result = case607(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 606: // grouping_elements ::= KW_ROLLUP LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case606(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 605: // grouping_elements ::= KW_CUBE LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case605(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 604: // grouping_elements ::= KW_GROUPING KW_SETS LPAREN grouping_set_list RPAREN 
            {
               CUP$SqlParser$result = case604(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 603: // grouping_elements ::= expr_list 
            {
               CUP$SqlParser$result = case603(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 602: // grouping_set_list ::= grouping_set_list COMMA grouping_set 
            {
               CUP$SqlParser$result = case602(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 601: // grouping_set_list ::= grouping_set 
            {
               CUP$SqlParser$result = case601(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 600: // grouping_set ::= LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case600(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 599: // grouping_set ::= LPAREN RPAREN 
            {
               CUP$SqlParser$result = case599(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 598: // where_clause_without_null ::= KW_WHERE expr 
            {
               CUP$SqlParser$result = case598(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 597: // where_clause ::= KW_WHERE expr 
            {
               CUP$SqlParser$result = case597(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 596: // where_clause ::= 
            {
               CUP$SqlParser$result = case596(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 595: // expr_list ::= expr_list COMMA expr 
            {
               CUP$SqlParser$result = case595(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 594: // expr_list ::= expr 
            {
               CUP$SqlParser$result = case594(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 593: // ident_list ::= ident_list COMMA ident 
            {
               CUP$SqlParser$result = case593(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 592: // ident_list ::= ident 
            {
               CUP$SqlParser$result = case592(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 591: // opt_sort_hints ::= 
            {
               CUP$SqlParser$result = case591(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 590: // opt_sort_hints ::= LBRACKET ident_list RBRACKET 
            {
               CUP$SqlParser$result = case590(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 589: // opt_plan_hints ::= 
            {
               CUP$SqlParser$result = case589(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 588: // opt_plan_hints ::= LBRACKET ident_list RBRACKET 
            {
               CUP$SqlParser$result = case588(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 587: // opt_plan_hints ::= COMMENTED_PLAN_HINT_START ident_list COMMENTED_PLAN_HINT_END 
            {
               CUP$SqlParser$result = case587(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 586: // opt_plan_hints ::= COMMENTED_PLAN_HINTS 
            {
               CUP$SqlParser$result = case586(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 585: // opt_outer ::= 
            {
               CUP$SqlParser$result = case585(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 584: // opt_outer ::= KW_OUTER 
            {
               CUP$SqlParser$result = case584(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 583: // opt_inner ::= 
            {
               CUP$SqlParser$result = case583(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 582: // opt_inner ::= KW_INNER 
            {
               CUP$SqlParser$result = case582(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 581: // join_operator ::= KW_CROSS KW_JOIN 
            {
               CUP$SqlParser$result = case581(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 580: // join_operator ::= KW_RIGHT KW_ANTI KW_JOIN 
            {
               CUP$SqlParser$result = case580(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 579: // join_operator ::= KW_LEFT KW_ANTI KW_JOIN 
            {
               CUP$SqlParser$result = case579(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 578: // join_operator ::= KW_RIGHT KW_SEMI KW_JOIN 
            {
               CUP$SqlParser$result = case578(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 577: // join_operator ::= KW_LEFT KW_SEMI KW_JOIN 
            {
               CUP$SqlParser$result = case577(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 576: // join_operator ::= KW_FULL opt_outer KW_JOIN 
            {
               CUP$SqlParser$result = case576(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 575: // join_operator ::= KW_RIGHT opt_outer KW_JOIN 
            {
               CUP$SqlParser$result = case575(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 574: // join_operator ::= KW_MERGE KW_JOIN 
            {
               CUP$SqlParser$result = case574(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 573: // join_operator ::= KW_LEFT opt_outer KW_JOIN 
            {
               CUP$SqlParser$result = case573(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 572: // join_operator ::= opt_inner KW_JOIN 
            {
               CUP$SqlParser$result = case572(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // partition_names ::= KW_TEMPORARY KW_PARTITION ident 
            {
               CUP$SqlParser$result = case571(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // partition_names ::= KW_PARTITION ident 
            {
               CUP$SqlParser$result = case570(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // partition_names ::= KW_TEMPORARY KW_PARTITIONS LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case569(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // partition_names ::= KW_PARTITIONS LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case568(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // partition_names ::= KW_TEMPORARY KW_PARTITION LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case567(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // partition_names ::= KW_PARTITION LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case566(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // opt_partition_names ::= partition_names 
            {
               CUP$SqlParser$result = case565(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // opt_partition_names ::= 
            {
               CUP$SqlParser$result = case564(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // opt_table_alias ::= EQUAL ident 
            {
               CUP$SqlParser$result = case563(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // opt_table_alias ::= KW_AS ident 
            {
               CUP$SqlParser$result = case562(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // opt_table_alias ::= ident 
            {
               CUP$SqlParser$result = case561(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // opt_table_alias ::= 
            {
               CUP$SqlParser$result = case560(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // opt_common_hints ::= 
            {
               CUP$SqlParser$result = case559(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // opt_common_hints ::= LBRACKET ident_list RBRACKET 
            {
               CUP$SqlParser$result = case558(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // opt_common_hints ::= COMMENTED_PLAN_HINT_START ident_list COMMENTED_PLAN_HINT_END 
            {
               CUP$SqlParser$result = case557(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // base_table_ref ::= table_name opt_partition_names opt_table_alias opt_common_hints 
            {
               CUP$SqlParser$result = case556(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // base_table_ref_list ::= base_table_ref_list COMMA base_table_ref 
            {
               CUP$SqlParser$result = case555(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // base_table_ref_list ::= base_table_ref 
            {
               CUP$SqlParser$result = case554(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // inline_view_ref ::= LPAREN query_stmt RPAREN opt_table_alias 
            {
               CUP$SqlParser$result = case553(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // table_ref ::= inline_view_ref 
            {
               CUP$SqlParser$result = case552(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // table_ref ::= base_table_ref 
            {
               CUP$SqlParser$result = case551(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints KW_USING LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case550(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints KW_ON expr 
            {
               CUP$SqlParser$result = case549(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints 
            {
               CUP$SqlParser$result = case548(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // table_ref_list ::= table_ref_list COMMA table_ref opt_sort_hints 
            {
               CUP$SqlParser$result = case547(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // table_ref_list ::= table_ref opt_sort_hints 
            {
               CUP$SqlParser$result = case546(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // from_clause ::= KW_FROM table_ref_list 
            {
               CUP$SqlParser$result = case545(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // type_function_name ::= type_func_name_keyword 
            {
               CUP$SqlParser$result = case544(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // type_function_name ::= ident 
            {
               CUP$SqlParser$result = case543(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // function_name ::= ident DOT type_function_name 
            {
               CUP$SqlParser$result = case542(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // function_name ::= type_function_name 
            {
               CUP$SqlParser$result = case541(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // table_name ::= ident DOT ident 
            {
               CUP$SqlParser$result = case540(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // table_name ::= ident 
            {
               CUP$SqlParser$result = case539(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // star_expr ::= ident DOT ident DOT STAR 
            {
               CUP$SqlParser$result = case538(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // star_expr ::= ident DOT STAR 
            {
               CUP$SqlParser$result = case537(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // select_alias ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case536(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // select_alias ::= KW_AS STRING_LITERAL 
            {
               CUP$SqlParser$result = case535(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // select_alias ::= ident 
            {
               CUP$SqlParser$result = case534(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // select_alias ::= KW_AS ident 
            {
               CUP$SqlParser$result = case533(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // select_alias ::= 
            {
               CUP$SqlParser$result = case532(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // select_list_item ::= star_expr 
            {
               CUP$SqlParser$result = case531(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // select_list_item ::= expr opt_collate select_alias 
            {
               CUP$SqlParser$result = case530(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // select_sublist ::= select_list_item 
            {
               CUP$SqlParser$result = case529(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // select_sublist ::= STAR COMMA select_list_item 
            {
               CUP$SqlParser$result = case528(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // select_sublist ::= select_sublist COMMA STAR 
            {
               CUP$SqlParser$result = case527(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // select_sublist ::= select_sublist COMMA select_list_item 
            {
               CUP$SqlParser$result = case526(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // select_list ::= STAR 
            {
               CUP$SqlParser$result = case525(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // select_list ::= select_sublist 
            {
               CUP$SqlParser$result = case524(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // select_clause ::= KW_SELECT KW_DISTINCT select_list 
            {
               CUP$SqlParser$result = case523(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // select_clause ::= KW_SELECT KW_ALL select_list 
            {
               CUP$SqlParser$result = case522(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // select_clause ::= KW_SELECT select_list 
            {
               CUP$SqlParser$result = case521(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // expr_or_default ::= KW_DEFAULT 
            {
               CUP$SqlParser$result = case520(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // expr_or_default ::= expr 
            {
               CUP$SqlParser$result = case519(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // values ::= values COMMA expr_or_default 
            {
               CUP$SqlParser$result = case518(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // values ::= expr_or_default 
            {
               CUP$SqlParser$result = case517(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // opt_values ::= 
            {
               CUP$SqlParser$result = case516(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // opt_values ::= values 
            {
               CUP$SqlParser$result = case515(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // row_value ::= LPAREN opt_values RPAREN 
            {
               CUP$SqlParser$result = case514(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // value_clause ::= value_clause COMMA row_value 
            {
               CUP$SqlParser$result = case513(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // value_clause ::= KW_VALUES row_value 
            {
               CUP$SqlParser$result = case512(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // select_stmt ::= value_clause order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case511(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // select_stmt ::= select_clause from_clause where_clause group_by_clause having_clause order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case510(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // select_stmt ::= select_clause limit_clause 
            {
               CUP$SqlParser$result = case509(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // set_expr_or_default ::= expr 
            {
               CUP$SqlParser$result = case508(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // set_expr_or_default ::= KW_ALL 
            {
               CUP$SqlParser$result = case507(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // set_expr_or_default ::= KW_ON 
            {
               CUP$SqlParser$result = case506(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // set_expr_or_default ::= KW_DEFAULT 
            {
               CUP$SqlParser$result = case505(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // isolation_types ::= KW_SERIALIZABLE 
            {
               CUP$SqlParser$result = case504(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // isolation_types ::= KW_REPEATABLE KW_READ 
            {
               CUP$SqlParser$result = case503(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // isolation_types ::= KW_READ KW_COMMITTED 
            {
               CUP$SqlParser$result = case502(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // isolation_types ::= KW_READ KW_UNCOMMITTED 
            {
               CUP$SqlParser$result = case501(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // isolation_level ::= KW_ISOLATION KW_LEVEL isolation_types 
            {
               CUP$SqlParser$result = case500(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // transaction_access_mode ::= KW_READ KW_WRITE 
            {
               CUP$SqlParser$result = case499(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // transaction_access_mode ::= KW_READ KW_ONLY 
            {
               CUP$SqlParser$result = case498(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // transaction_characteristics ::= isolation_level COMMA transaction_access_mode 
            {
               CUP$SqlParser$result = case497(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // transaction_characteristics ::= transaction_access_mode COMMA isolation_level 
            {
               CUP$SqlParser$result = case496(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // transaction_characteristics ::= isolation_level 
            {
               CUP$SqlParser$result = case495(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // transaction_characteristics ::= transaction_access_mode 
            {
               CUP$SqlParser$result = case494(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // equal ::= SET_VAR 
            {
               CUP$SqlParser$result = case493(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // equal ::= EQUAL 
            {
               CUP$SqlParser$result = case492(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // var_ident_type ::= KW_SESSION DOT 
            {
               CUP$SqlParser$result = case491(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // var_ident_type ::= KW_LOCAL DOT 
            {
               CUP$SqlParser$result = case490(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // var_ident_type ::= KW_GLOBAL DOT 
            {
               CUP$SqlParser$result = case489(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // opt_var_type ::= KW_SESSION 
            {
               CUP$SqlParser$result = case488(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // opt_var_type ::= KW_LOCAL 
            {
               CUP$SqlParser$result = case487(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // opt_var_type ::= KW_GLOBAL 
            {
               CUP$SqlParser$result = case486(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // opt_var_type ::= 
            {
               CUP$SqlParser$result = case485(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // option_type ::= KW_SESSION 
            {
               CUP$SqlParser$result = case484(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // option_type ::= KW_LOCAL 
            {
               CUP$SqlParser$result = case483(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // option_type ::= KW_GLOBAL 
            {
               CUP$SqlParser$result = case482(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // text_or_password ::= KW_PASSWORD LPAREN STRING_LITERAL RPAREN 
            {
               CUP$SqlParser$result = case481(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // text_or_password ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case480(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // variable_name ::= ident 
            {
               CUP$SqlParser$result = case479(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // option_value_no_option_type ::= KW_PASSWORD KW_FOR user_identity equal text_or_password 
            {
               CUP$SqlParser$result = case478(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // option_value_no_option_type ::= KW_PASSWORD equal text_or_password 
            {
               CUP$SqlParser$result = case477(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // option_value_no_option_type ::= KW_NAMES charset_name_or_default opt_collate 
            {
               CUP$SqlParser$result = case476(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // option_value_no_option_type ::= KW_NAMES equal expr 
            {
               CUP$SqlParser$result = case475(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // option_value_no_option_type ::= charset old_or_new_charset_name_or_default 
            {
               CUP$SqlParser$result = case474(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // option_value_no_option_type ::= AT AT var_ident_type variable_name equal set_expr_or_default 
            {
               CUP$SqlParser$result = case473(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // option_value_no_option_type ::= AT AT variable_name equal set_expr_or_default 
            {
               CUP$SqlParser$result = case472(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // option_value_no_option_type ::= AT ident_or_text equal literal 
            {
               CUP$SqlParser$result = case471(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // option_value_no_option_type ::= variable_name equal set_expr_or_default 
            {
               CUP$SqlParser$result = case470(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // option_value_follow_option_type ::= variable_name equal set_expr_or_default 
            {
               CUP$SqlParser$result = case469(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // option_value ::= option_value_no_option_type 
            {
               CUP$SqlParser$result = case468(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // option_value ::= option_type option_value_follow_option_type 
            {
               CUP$SqlParser$result = case467(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // option_value_list ::= option_value_list COMMA option_value 
            {
               CUP$SqlParser$result = case466(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // option_value_list ::= option_value 
            {
               CUP$SqlParser$result = case465(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // option_value_list_continued ::= COMMA option_value_list 
            {
               CUP$SqlParser$result = case464(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // option_value_list_continued ::= 
            {
               CUP$SqlParser$result = case463(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // start_option_value_list_following_option_type ::= KW_TRANSACTION transaction_characteristics 
            {
               CUP$SqlParser$result = case462(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // start_option_value_list_following_option_type ::= option_value_follow_option_type option_value_list_continued 
            {
               CUP$SqlParser$result = case461(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // start_option_value_list ::= option_type start_option_value_list_following_option_type 
            {
               CUP$SqlParser$result = case460(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // start_option_value_list ::= KW_TRANSACTION transaction_characteristics 
            {
               CUP$SqlParser$result = case459(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // start_option_value_list ::= option_value_no_option_type option_value_list_continued 
            {
               CUP$SqlParser$result = case458(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // user_property ::= STRING_LITERAL equal KW_NULL 
            {
               CUP$SqlParser$result = case457(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // user_property ::= STRING_LITERAL equal STRING_LITERAL 
            {
               CUP$SqlParser$result = case456(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // user_property_list ::= user_property_list COMMA user_property 
            {
               CUP$SqlParser$result = case455(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // user_property_list ::= user_property 
            {
               CUP$SqlParser$result = case454(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // set_stmt ::= KW_SET KW_PROPERTY opt_user user_property_list 
            {
               CUP$SqlParser$result = case453(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // set_stmt ::= KW_SET start_option_value_list 
            {
               CUP$SqlParser$result = case452(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // kill_stmt ::= KW_KILL KW_QUERY INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case451(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // kill_stmt ::= KW_KILL KW_CONNECTION INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case450(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // kill_stmt ::= KW_KILL INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case449(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // restore_stmt ::= KW_RESTORE KW_SNAPSHOT job_label KW_FROM ident KW_ON LPAREN base_table_ref_list RPAREN opt_properties 
            {
               CUP$SqlParser$result = case448(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // backup_stmt ::= KW_BACKUP KW_SNAPSHOT job_label KW_TO ident KW_ON LPAREN base_table_ref_list RPAREN opt_properties 
            {
               CUP$SqlParser$result = case447(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // insert_source ::= query_stmt 
            {
               CUP$SqlParser$result = case446(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // opt_with_label ::= KW_WITH KW_LABEL ident 
            {
               CUP$SqlParser$result = case445(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // opt_with_label ::= 
            {
               CUP$SqlParser$result = case444(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // insert_target ::= table_name opt_partition_names 
            {
               CUP$SqlParser$result = case443(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // insert_stmt ::= KW_INSERT KW_INTO insert_target opt_with_label opt_col_list opt_plan_hints insert_source 
            {
               CUP$SqlParser$result = case442(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // use_stmt ::= KW_USE ident 
            {
               CUP$SqlParser$result = case441(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // enter_stmt ::= KW_ENTER ident 
            {
               CUP$SqlParser$result = case440(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // opt_set_qualifier ::= KW_ALL 
            {
               CUP$SqlParser$result = case439(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // opt_set_qualifier ::= KW_DISTINCT 
            {
               CUP$SqlParser$result = case438(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // opt_set_qualifier ::= 
            {
               CUP$SqlParser$result = case437(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // set_op ::= KW_MINUS 
            {
               CUP$SqlParser$result = case436(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // set_op ::= KW_EXCEPT 
            {
               CUP$SqlParser$result = case435(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // set_op ::= KW_INTERSECT 
            {
               CUP$SqlParser$result = case434(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // set_op ::= KW_UNION 
            {
               CUP$SqlParser$result = case433(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // set_operand_list ::= set_operand_list set_op opt_set_qualifier set_operand 
            {
               CUP$SqlParser$result = case432(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // set_operand_list ::= set_operand 
            {
               CUP$SqlParser$result = case431(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // set_operand ::= LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case430(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // set_operand ::= select_stmt 
            {
               CUP$SqlParser$result = case429(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case428(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case427(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case426(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements 
            {
               CUP$SqlParser$result = case425(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case424(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case423(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case422(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // with_view_def_list ::= with_view_def_list COMMA with_view_def 
            {
               CUP$SqlParser$result = case421(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // with_view_def_list ::= with_view_def 
            {
               CUP$SqlParser$result = case420(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // with_view_def ::= STRING_LITERAL LPAREN ident_list RPAREN KW_AS LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case419(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // with_view_def ::= ident LPAREN ident_list RPAREN KW_AS LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case418(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // with_view_def ::= STRING_LITERAL KW_AS LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case417(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // with_view_def ::= ident KW_AS LPAREN query_stmt RPAREN 
            {
               CUP$SqlParser$result = case416(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // opt_with_clause ::= 
            {
               CUP$SqlParser$result = case415(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // opt_with_clause ::= KW_WITH with_view_def_list 
            {
               CUP$SqlParser$result = case414(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // opt_outfile ::= KW_INTO KW_OUTFILE STRING_LITERAL opt_file_format opt_properties 
            {
               CUP$SqlParser$result = case413(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // opt_outfile ::= 
            {
               CUP$SqlParser$result = case412(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // query_stmt ::= opt_with_clause set_operation_with_order_by_or_limit opt_outfile 
            {
               CUP$SqlParser$result = case411(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // query_stmt ::= opt_with_clause set_operand_list opt_outfile 
            {
               CUP$SqlParser$result = case410(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // delete_stmt ::= KW_DELETE KW_FROM table_name opt_partition_names where_clause 
            {
               CUP$SqlParser$result = case409(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // cancel_param ::= KW_RESTORE opt_db 
            {
               CUP$SqlParser$result = case408(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // cancel_param ::= KW_BACKUP opt_db 
            {
               CUP$SqlParser$result = case407(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // cancel_param ::= KW_DECOMMISSION KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case406(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // cancel_param ::= KW_ALTER KW_TABLE opt_alter_type KW_FROM table_name cancel_rollup_job_id_list 
            {
               CUP$SqlParser$result = case405(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // cancel_param ::= KW_LOAD opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case404(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // cancel_rollup_job_id_list ::= LPAREN integer_list RPAREN 
            {
               CUP$SqlParser$result = case403(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // cancel_rollup_job_id_list ::= 
            {
               CUP$SqlParser$result = case402(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // cancel_stmt ::= KW_CANCEL cancel_param 
            {
               CUP$SqlParser$result = case401(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // describe_command ::= KW_DESC 
            {
               CUP$SqlParser$result = case400(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // describe_command ::= KW_DESCRIBE 
            {
               CUP$SqlParser$result = case399(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // describe_stmt ::= describe_command insert_stmt 
            {
               CUP$SqlParser$result = case398(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // describe_stmt ::= describe_command query_stmt 
            {
               CUP$SqlParser$result = case397(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // describe_stmt ::= describe_command table_name KW_ALL 
            {
               CUP$SqlParser$result = case396(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // describe_stmt ::= describe_command table_name 
            {
               CUP$SqlParser$result = case395(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // opt_builtin ::= KW_BUILTIN 
            {
               CUP$SqlParser$result = case394(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // opt_builtin ::= 
            {
               CUP$SqlParser$result = case393(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // opt_alter_type ::= KW_COLUMN 
            {
               CUP$SqlParser$result = case392(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // opt_alter_type ::= KW_ROLLUP 
            {
               CUP$SqlParser$result = case391(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // opt_wild_where ::= KW_WHERE expr 
            {
               CUP$SqlParser$result = case390(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // opt_wild_where ::= KW_LIKE STRING_LITERAL 
            {
               CUP$SqlParser$result = case389(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // opt_wild_where ::= 
            {
               CUP$SqlParser$result = case388(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // opt_full ::= KW_FULL 
            {
               CUP$SqlParser$result = case387(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // opt_full ::= 
            {
               CUP$SqlParser$result = case386(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // from_or_in ::= KW_IN 
            {
               CUP$SqlParser$result = case385(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // from_or_in ::= KW_FROM 
            {
               CUP$SqlParser$result = case384(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // procedure_or_function ::= KW_FUNCTION 
            {
               CUP$SqlParser$result = case383(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // procedure_or_function ::= KW_PROCEDURE 
            {
               CUP$SqlParser$result = case382(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // opt_storage ::= KW_STORAGE 
            {
               CUP$SqlParser$result = case381(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // opt_storage ::= 
            {
               CUP$SqlParser$result = case380(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // collation_name_or_default ::= KW_DEFAULT 
            {
               CUP$SqlParser$result = case379(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // collation_name_or_default ::= ident_or_text 
            {
               CUP$SqlParser$result = case378(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // opt_collate ::= KW_COLLATE collation_name_or_default 
            {
               CUP$SqlParser$result = case377(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // opt_collate ::= 
            {
               CUP$SqlParser$result = case376(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // opt_charset_name ::= charset old_or_new_charset_name_or_default 
            {
               CUP$SqlParser$result = case375(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // opt_charset_name ::= 
            {
               CUP$SqlParser$result = case374(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // old_or_new_charset_name_or_default ::= KW_DEFAULT 
            {
               CUP$SqlParser$result = case373(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // old_or_new_charset_name_or_default ::= ident_or_text 
            {
               CUP$SqlParser$result = case372(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // charset_name_or_default ::= KW_DEFAULT 
            {
               CUP$SqlParser$result = case371(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // charset_name_or_default ::= ident_or_text 
            {
               CUP$SqlParser$result = case370(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // charset ::= KW_CHARSET 
            {
               CUP$SqlParser$result = case369(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // charset ::= KW_CHAR KW_SET 
            {
               CUP$SqlParser$result = case368(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // opt_db ::= from_or_in ident 
            {
               CUP$SqlParser$result = case367(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // opt_db ::= 
            {
               CUP$SqlParser$result = case366(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // keys_or_index ::= KW_INDEXES 
            {
               CUP$SqlParser$result = case365(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // keys_or_index ::= KW_INDEX 
            {
               CUP$SqlParser$result = case364(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // keys_or_index ::= KW_KEYS 
            {
               CUP$SqlParser$result = case363(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // keys_or_index ::= KW_KEY 
            {
               CUP$SqlParser$result = case362(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // opt_tmp ::= KW_TEMPORARY 
            {
               CUP$SqlParser$result = case361(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // opt_tmp ::= 
            {
               CUP$SqlParser$result = case360(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // show_param ::= KW_TRANSACTION opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case359(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // show_param ::= keys_or_index from_or_in table_name opt_db 
            {
               CUP$SqlParser$result = case358(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // show_param ::= KW_FILE opt_db 
            {
               CUP$SqlParser$result = case357(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // show_param ::= opt_full opt_builtin KW_FUNCTIONS opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case356(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // show_param ::= KW_ROLES 
            {
               CUP$SqlParser$result = case355(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // show_param ::= KW_GRANTS KW_FOR user_identity 
            {
               CUP$SqlParser$result = case354(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // show_param ::= KW_GRANTS 
            {
               CUP$SqlParser$result = case353(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // show_param ::= KW_ALL KW_GRANTS 
            {
               CUP$SqlParser$result = case352(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // show_param ::= KW_SNAPSHOT KW_ON ident opt_wild_where 
            {
               CUP$SqlParser$result = case351(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // show_param ::= KW_REPOSITORIES 
            {
               CUP$SqlParser$result = case350(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // show_param ::= KW_USER 
            {
               CUP$SqlParser$result = case349(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // show_param ::= KW_FRONTENDS 
            {
               CUP$SqlParser$result = case348(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // show_param ::= KW_BACKENDS 
            {
               CUP$SqlParser$result = case347(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // show_param ::= KW_RESOURCES 
            {
               CUP$SqlParser$result = case346(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // show_param ::= KW_BROKER 
            {
               CUP$SqlParser$result = case345(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // show_param ::= KW_RESTORE opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case344(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // show_param ::= KW_BACKUP opt_db 
            {
               CUP$SqlParser$result = case343(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // show_param ::= KW_PROPERTY opt_user opt_wild_where 
            {
               CUP$SqlParser$result = case342(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // show_param ::= KW_TABLET KW_FROM table_name opt_partition_names opt_wild_where order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case341(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // show_param ::= KW_TABLET INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case340(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // show_param ::= opt_tmp KW_PARTITIONS KW_FROM table_name opt_wild_where order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case339(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // show_param ::= KW_DATA KW_FROM table_name 
            {
               CUP$SqlParser$result = case338(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // show_param ::= KW_DATA 
            {
               CUP$SqlParser$result = case337(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // show_param ::= KW_ALTER KW_TABLE opt_alter_type opt_db opt_wild_where order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case336(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // show_param ::= KW_DELETE opt_db 
            {
               CUP$SqlParser$result = case335(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // show_param ::= KW_EXPORT opt_db opt_wild_where order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case334(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // show_param ::= KW_LOAD opt_db opt_wild_where order_by_clause limit_clause 
            {
               CUP$SqlParser$result = case333(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // show_param ::= KW_LOAD KW_WARNINGS KW_ON STRING_LITERAL 
            {
               CUP$SqlParser$result = case332(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // show_param ::= KW_LOAD KW_WARNINGS opt_db opt_wild_where limit_clause 
            {
               CUP$SqlParser$result = case331(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // show_param ::= KW_ERRORS limit_clause 
            {
               CUP$SqlParser$result = case330(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // show_param ::= KW_WARNINGS limit_clause 
            {
               CUP$SqlParser$result = case329(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // show_param ::= KW_COUNT LPAREN STAR RPAREN KW_ERRORS 
            {
               CUP$SqlParser$result = case328(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // show_param ::= KW_COUNT LPAREN STAR RPAREN KW_WARNINGS 
            {
               CUP$SqlParser$result = case327(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // show_param ::= KW_PROC STRING_LITERAL 
            {
               CUP$SqlParser$result = case326(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // show_param ::= charset opt_wild_where 
            {
               CUP$SqlParser$result = case325(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // show_param ::= KW_COLLATION opt_wild_where 
            {
               CUP$SqlParser$result = case324(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // show_param ::= opt_full KW_COLUMNS from_or_in table_name opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case323(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // show_param ::= KW_DYNAMIC KW_PARTITION KW_TABLES opt_db 
            {
               CUP$SqlParser$result = case322(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // show_param ::= KW_SCHEMAS opt_wild_where 
            {
               CUP$SqlParser$result = case321(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // show_param ::= KW_DATABASES opt_wild_where 
            {
               CUP$SqlParser$result = case320(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // show_param ::= KW_MIGRATIONS 
            {
               CUP$SqlParser$result = case319(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // show_param ::= KW_CLUSTERS 
            {
               CUP$SqlParser$result = case318(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // show_param ::= KW_CREATE KW_SCHEMA ident 
            {
               CUP$SqlParser$result = case317(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // show_param ::= KW_CREATE KW_DATABASE ident 
            {
               CUP$SqlParser$result = case316(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // show_param ::= KW_CREATE KW_VIEW table_name 
            {
               CUP$SqlParser$result = case315(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // show_param ::= KW_CREATE KW_TABLE table_name 
            {
               CUP$SqlParser$result = case314(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // show_param ::= KW_AUTHORS 
            {
               CUP$SqlParser$result = case313(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // show_param ::= opt_storage KW_ENGINES 
            {
               CUP$SqlParser$result = case312(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // show_param ::= KW_PLUGINS 
            {
               CUP$SqlParser$result = case311(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // show_param ::= KW_EVENTS opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case310(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // show_param ::= opt_full KW_TRIGGERS opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case309(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // show_param ::= opt_var_type KW_STATUS opt_wild_where 
            {
               CUP$SqlParser$result = case308(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // show_param ::= procedure_or_function KW_STATUS opt_wild_where 
            {
               CUP$SqlParser$result = case307(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // show_param ::= opt_full KW_PROCESSLIST 
            {
               CUP$SqlParser$result = case306(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // show_param ::= opt_full KW_TABLES opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case305(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // show_param ::= KW_TABLE KW_STATUS opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case304(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // show_param ::= KW_OPEN KW_TABLES opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case303(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // show_param ::= opt_var_type KW_VARIABLES opt_wild_where 
            {
               CUP$SqlParser$result = case302(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // show_param ::= KW_WHITELIST 
            {
               CUP$SqlParser$result = case301(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // show_stmt ::= KW_SHOW show_param 
            {
               CUP$SqlParser$result = case300(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // opt_external ::= KW_EXTERNAL 
            {
               CUP$SqlParser$result = case299(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // opt_external ::= 
            {
               CUP$SqlParser$result = case298(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // opt_if_not_exists ::= KW_IF KW_NOT KW_EXISTS 
            {
               CUP$SqlParser$result = case297(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // opt_if_not_exists ::= 
            {
               CUP$SqlParser$result = case296(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // opt_if_exists ::= KW_IF KW_EXISTS 
            {
               CUP$SqlParser$result = case295(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // opt_if_exists ::= 
            {
               CUP$SqlParser$result = case294(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // opt_index_type ::= KW_USING KW_BITMAP 
            {
               CUP$SqlParser$result = case293(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // opt_index_type ::= 
            {
               CUP$SqlParser$result = case292(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // opt_comment ::= KW_COMMENT STRING_LITERAL 
            {
               CUP$SqlParser$result = case291(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // opt_comment ::= 
            {
               CUP$SqlParser$result = case290(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // opt_is_allow_null ::= KW_NOT KW_NULL 
            {
               CUP$SqlParser$result = case289(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // opt_is_allow_null ::= KW_NULL 
            {
               CUP$SqlParser$result = case288(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // opt_is_allow_null ::= 
            {
               CUP$SqlParser$result = case287(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // index_definition ::= KW_INDEX ident LPAREN ident_list RPAREN opt_index_type opt_comment 
            {
               CUP$SqlParser$result = case286(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // column_definition ::= ident type_def opt_is_key opt_agg_type opt_is_allow_null opt_default_value opt_comment 
            {
               CUP$SqlParser$result = case285(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // opt_is_key ::= KW_KEY 
            {
               CUP$SqlParser$result = case284(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // opt_is_key ::= 
            {
               CUP$SqlParser$result = case283(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // opt_default_value ::= KW_DEFAULT KW_NULL 
            {
               CUP$SqlParser$result = case282(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // opt_default_value ::= KW_DEFAULT STRING_LITERAL 
            {
               CUP$SqlParser$result = case281(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // opt_default_value ::= 
            {
               CUP$SqlParser$result = case280(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // index_definition_list ::= index_definition_list COMMA index_definition 
            {
               CUP$SqlParser$result = case279(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // index_definition_list ::= index_definition 
            {
               CUP$SqlParser$result = case278(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // column_definition_list ::= column_definition_list COMMA column_definition 
            {
               CUP$SqlParser$result = case277(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // column_definition_list ::= column_definition 
            {
               CUP$SqlParser$result = case276(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // opt_ext_properties ::= KW_BROKER KW_PROPERTIES LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case275(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // opt_ext_properties ::= 
            {
               CUP$SqlParser$result = case274(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // opt_properties ::= KW_PROPERTIES LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case273(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // opt_properties ::= 
            {
               CUP$SqlParser$result = case272(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // key_value_map ::= key_value_map COMMA STRING_LITERAL EQUAL STRING_LITERAL 
            {
               CUP$SqlParser$result = case271(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // key_value_map ::= STRING_LITERAL EQUAL STRING_LITERAL 
            {
               CUP$SqlParser$result = case270(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // opt_key_value_map ::= LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case269(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // opt_key_value_map ::= 
            {
               CUP$SqlParser$result = case268(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // opt_engine ::= KW_ENGINE EQUAL ident 
            {
               CUP$SqlParser$result = case267(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // opt_engine ::= 
            {
               CUP$SqlParser$result = case266(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // fixed_partition_key_desc ::= LBRACKET LPAREN partition_key_list RPAREN COMMA LPAREN partition_key_list RPAREN RPAREN 
            {
               CUP$SqlParser$result = case265(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // partition_key_list ::= KW_MAX_VALUE 
            {
               CUP$SqlParser$result = case264(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // partition_key_list ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case263(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // partition_key_list ::= partition_key_list COMMA KW_MAX_VALUE 
            {
               CUP$SqlParser$result = case262(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // partition_key_list ::= partition_key_list COMMA STRING_LITERAL 
            {
               CUP$SqlParser$result = case261(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // partition_key_list ::= 
            {
               CUP$SqlParser$result = case260(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // partition_key_desc ::= LPAREN partition_key_list RPAREN 
            {
               CUP$SqlParser$result = case259(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // partition_key_desc ::= KW_MAX_VALUE 
            {
               CUP$SqlParser$result = case258(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // single_range_partition_desc ::= KW_PARTITION opt_if_not_exists ident KW_VALUES fixed_partition_key_desc opt_key_value_map 
            {
               CUP$SqlParser$result = case257(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // single_range_partition_desc ::= KW_PARTITION opt_if_not_exists ident KW_VALUES KW_LESS KW_THAN partition_key_desc opt_key_value_map 
            {
               CUP$SqlParser$result = case256(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // single_range_partition_desc_list ::= single_range_partition_desc 
            {
               CUP$SqlParser$result = case255(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // single_range_partition_desc_list ::= single_range_partition_desc_list COMMA single_range_partition_desc 
            {
               CUP$SqlParser$result = case254(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // opt_single_range_partition_desc_list ::= single_range_partition_desc_list 
            {
               CUP$SqlParser$result = case253(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // opt_single_range_partition_desc_list ::= 
            {
               CUP$SqlParser$result = case252(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // opt_keys ::= KW_AGGREGATE KW_KEY LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case251(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // opt_keys ::= KW_UNIQUE KW_KEY LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case250(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // opt_keys ::= KW_DUPLICATE KW_KEY LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case249(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // opt_keys ::= KW_PRIMARY KW_KEY LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case248(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // opt_keys ::= 
            {
               CUP$SqlParser$result = case247(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // opt_distribution_number ::= KW_BUCKETS INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case246(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // opt_distribution_number ::= 
            {
               CUP$SqlParser$result = case245(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // opt_rollup ::= KW_ROLLUP LPAREN add_rollup_clause_list RPAREN 
            {
               CUP$SqlParser$result = case244(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // opt_rollup ::= 
            {
               CUP$SqlParser$result = case243(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // opt_distribution ::= KW_DISTRIBUTED KW_BY KW_RANDOM opt_distribution_number 
            {
               CUP$SqlParser$result = case242(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // opt_distribution ::= KW_DISTRIBUTED KW_BY KW_HASH LPAREN ident_list RPAREN opt_distribution_number 
            {
               CUP$SqlParser$result = case241(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // opt_distribution ::= 
            {
               CUP$SqlParser$result = case240(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // opt_partition ::= KW_PARTITION KW_BY KW_RANGE LPAREN ident_list RPAREN LPAREN opt_single_range_partition_desc_list RPAREN 
            {
               CUP$SqlParser$result = case239(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // opt_partition ::= 
            {
               CUP$SqlParser$result = case238(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // opt_agg_type ::= KW_BITMAP_UNION 
            {
               CUP$SqlParser$result = case237(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // opt_agg_type ::= KW_HLL_UNION 
            {
               CUP$SqlParser$result = case236(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // opt_agg_type ::= KW_REPLACE_IF_NOT_NULL 
            {
               CUP$SqlParser$result = case235(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // opt_agg_type ::= KW_REPLACE 
            {
               CUP$SqlParser$result = case234(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // opt_agg_type ::= KW_MIN 
            {
               CUP$SqlParser$result = case233(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // opt_agg_type ::= KW_MAX 
            {
               CUP$SqlParser$result = case232(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // opt_agg_type ::= KW_SUM 
            {
               CUP$SqlParser$result = case231(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // opt_agg_type ::= 
            {
               CUP$SqlParser$result = case230(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // recover_stmt ::= KW_RECOVER KW_PARTITION ident KW_FROM table_name 
            {
               CUP$SqlParser$result = case229(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // recover_stmt ::= KW_RECOVER KW_TABLE table_name 
            {
               CUP$SqlParser$result = case228(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // recover_stmt ::= KW_RECOVER KW_DATABASE ident 
            {
               CUP$SqlParser$result = case227(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // drop_stmt ::= KW_DROP KW_RESOURCE ident_or_text 
            {
               CUP$SqlParser$result = case226(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // drop_stmt ::= KW_DROP KW_MATERIALIZED KW_VIEW opt_if_exists ident KW_ON table_name 
            {
               CUP$SqlParser$result = case225(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // drop_stmt ::= KW_DROP KW_INDEX ident KW_ON table_name 
            {
               CUP$SqlParser$result = case224(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // drop_stmt ::= KW_DROP KW_FILE STRING_LITERAL opt_db KW_PROPERTIES LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case223(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // drop_stmt ::= KW_DROP KW_ROLE ident 
            {
               CUP$SqlParser$result = case222(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // drop_stmt ::= KW_DROP KW_REPOSITORY ident 
            {
               CUP$SqlParser$result = case221(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // drop_stmt ::= KW_DROP KW_VIEW opt_if_exists table_name 
            {
               CUP$SqlParser$result = case220(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // drop_stmt ::= KW_DROP KW_USER user_identity 
            {
               CUP$SqlParser$result = case219(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // drop_stmt ::= KW_DROP KW_TABLE opt_if_exists table_name 
            {
               CUP$SqlParser$result = case218(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // drop_stmt ::= KW_DROP KW_FUNCTION function_name LPAREN func_args_def RPAREN 
            {
               CUP$SqlParser$result = case217(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // drop_stmt ::= KW_DROP KW_CLUSTER opt_if_exists ident 
            {
               CUP$SqlParser$result = case216(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // drop_stmt ::= KW_DROP KW_SCHEMA opt_if_exists ident 
            {
               CUP$SqlParser$result = case215(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // drop_stmt ::= KW_DROP KW_DATABASE opt_if_exists ident 
            {
               CUP$SqlParser$result = case214(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // revoke_stmt ::= KW_REVOKE privilege_list KW_ON KW_RESOURCE resource_pattern KW_FROM KW_ROLE STRING_LITERAL 
            {
               CUP$SqlParser$result = case213(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // revoke_stmt ::= KW_REVOKE privilege_list KW_ON KW_RESOURCE resource_pattern KW_FROM user_identity 
            {
               CUP$SqlParser$result = case212(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // revoke_stmt ::= KW_REVOKE privilege_list KW_ON tbl_pattern KW_FROM KW_ROLE STRING_LITERAL 
            {
               CUP$SqlParser$result = case211(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // revoke_stmt ::= KW_REVOKE privilege_list KW_ON tbl_pattern KW_FROM user_identity 
            {
               CUP$SqlParser$result = case210(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // ident_or_star ::= ident 
            {
               CUP$SqlParser$result = case209(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // ident_or_star ::= STAR 
            {
               CUP$SqlParser$result = case208(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // resource_pattern ::= STRING_LITERAL 
            {
               CUP$SqlParser$result = case207(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // resource_pattern ::= ident_or_star 
            {
               CUP$SqlParser$result = case206(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // tbl_pattern ::= ident_or_star DOT ident_or_star 
            {
               CUP$SqlParser$result = case205(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // tbl_pattern ::= ident_or_star 
            {
               CUP$SqlParser$result = case204(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // grant_stmt ::= KW_GRANT privilege_list KW_ON KW_RESOURCE resource_pattern KW_TO KW_ROLE STRING_LITERAL 
            {
               CUP$SqlParser$result = case203(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // grant_stmt ::= KW_GRANT privilege_list KW_ON KW_RESOURCE resource_pattern KW_TO user_identity 
            {
               CUP$SqlParser$result = case202(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // grant_stmt ::= KW_GRANT privilege_list KW_ON tbl_pattern KW_TO KW_ROLE STRING_LITERAL 
            {
               CUP$SqlParser$result = case201(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // grant_stmt ::= KW_GRANT privilege_list KW_ON tbl_pattern KW_TO user_identity 
            {
               CUP$SqlParser$result = case200(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // show_routine_load_task_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD KW_TASK opt_db opt_wild_where 
            {
               CUP$SqlParser$result = case199(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // show_routine_load_stmt ::= KW_SHOW KW_ALL KW_ROUTINE KW_LOAD 
            {
               CUP$SqlParser$result = case198(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // show_routine_load_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD 
            {
               CUP$SqlParser$result = case197(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // show_routine_load_stmt ::= KW_SHOW KW_ALL KW_ROUTINE KW_LOAD KW_FOR job_label 
            {
               CUP$SqlParser$result = case196(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // show_routine_load_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD KW_FOR job_label 
            {
               CUP$SqlParser$result = case195(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // stop_routine_load_stmt ::= KW_STOP KW_ROUTINE KW_LOAD KW_FOR job_label 
            {
               CUP$SqlParser$result = case194(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // resume_routine_load_stmt ::= KW_RESUME KW_ROUTINE KW_LOAD KW_FOR job_label 
            {
               CUP$SqlParser$result = case193(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // pause_routine_load_stmt ::= KW_PAUSE KW_ROUTINE KW_LOAD KW_FOR job_label 
            {
               CUP$SqlParser$result = case192(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // load_property ::= partition_names 
            {
               CUP$SqlParser$result = case191(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // load_property ::= import_where_stmt 
            {
               CUP$SqlParser$result = case190(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // load_property ::= import_columns_stmt 
            {
               CUP$SqlParser$result = case189(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // load_property ::= column_separator 
            {
               CUP$SqlParser$result = case188(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // opt_load_property_list ::= opt_load_property_list COMMA load_property 
            {
               CUP$SqlParser$result = case187(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // opt_load_property_list ::= load_property 
            {
               CUP$SqlParser$result = case186(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // opt_load_property_list ::= 
            {
               CUP$SqlParser$result = case185(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // create_routine_load_stmt ::= KW_CREATE KW_ROUTINE KW_LOAD job_label KW_ON ident opt_load_property_list opt_properties KW_FROM ident LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case184(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // resource_desc ::= KW_WITH KW_RESOURCE ident_or_text LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case183(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // resource_desc ::= KW_WITH KW_RESOURCE ident_or_text 
            {
               CUP$SqlParser$result = case182(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // opt_broker ::= KW_WITH KW_BROKER ident_or_text LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case181(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // opt_broker ::= KW_WITH KW_BROKER ident_or_text 
            {
               CUP$SqlParser$result = case180(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // opt_broker ::= 
            {
               CUP$SqlParser$result = case179(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // opt_system ::= KW_BY ident_or_text 
            {
               CUP$SqlParser$result = case178(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // opt_system ::= 
            {
               CUP$SqlParser$result = case177(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // opt_col_mapping_list ::= KW_SET LPAREN expr_list RPAREN 
            {
               CUP$SqlParser$result = case176(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // opt_col_mapping_list ::= 
            {
               CUP$SqlParser$result = case175(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // col_list ::= KW_COLUMNS LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case174(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // col_with_comment ::= ident opt_comment 
            {
               CUP$SqlParser$result = case173(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // col_with_comment_list ::= col_with_comment_list COMMA col_with_comment 
            {
               CUP$SqlParser$result = case172(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // col_with_comment_list ::= col_with_comment 
            {
               CUP$SqlParser$result = case171(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // opt_col_with_comment_list ::= LPAREN col_with_comment_list RPAREN 
            {
               CUP$SqlParser$result = case170(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // opt_col_with_comment_list ::= 
            {
               CUP$SqlParser$result = case169(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // opt_col_list ::= LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case168(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // opt_col_list ::= 
            {
               CUP$SqlParser$result = case167(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // opt_columns_from_path ::= KW_COLUMNS KW_FROM KW_PATH KW_AS LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case166(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // opt_columns_from_path ::= 
            {
               CUP$SqlParser$result = case165(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // opt_file_format ::= KW_FORMAT KW_AS ident_or_text 
            {
               CUP$SqlParser$result = case164(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // opt_file_format ::= 
            {
               CUP$SqlParser$result = case163(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // column_separator ::= KW_COLUMNS KW_TERMINATED KW_BY STRING_LITERAL 
            {
               CUP$SqlParser$result = case162(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // opt_field_term ::= KW_COLUMNS KW_TERMINATED KW_BY STRING_LITERAL 
            {
               CUP$SqlParser$result = case161(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // opt_field_term ::= 
            {
               CUP$SqlParser$result = case160(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // opt_negative ::= KW_NEGATIVE 
            {
               CUP$SqlParser$result = case159(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // opt_negative ::= 
            {
               CUP$SqlParser$result = case158(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // data_desc ::= KW_DATA KW_FROM KW_TABLE ident opt_negative KW_INTO KW_TABLE ident opt_partition_names opt_col_mapping_list where_clause 
            {
               CUP$SqlParser$result = case157(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // data_desc ::= KW_DATA KW_INFILE LPAREN string_list RPAREN opt_negative KW_INTO KW_TABLE ident opt_partition_names opt_field_term opt_file_format opt_col_list opt_columns_from_path opt_col_mapping_list where_clause 
            {
               CUP$SqlParser$result = case156(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // data_desc_list ::= data_desc_list COMMA data_desc 
            {
               CUP$SqlParser$result = case155(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // data_desc_list ::= data_desc 
            {
               CUP$SqlParser$result = case154(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // job_label ::= ident DOT ident 
            {
               CUP$SqlParser$result = case153(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // job_label ::= ident 
            {
               CUP$SqlParser$result = case152(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // load_stmt ::= KW_LOAD KW_LABEL job_label LPAREN data_desc_list RPAREN resource_desc opt_properties 
            {
               CUP$SqlParser$result = case151(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // load_stmt ::= KW_LOAD KW_LABEL job_label LPAREN data_desc_list RPAREN opt_broker opt_system opt_properties 
            {
               CUP$SqlParser$result = case150(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // export_stmt ::= KW_EXPORT KW_TABLE base_table_ref KW_TO STRING_LITERAL opt_properties opt_broker 
            {
               CUP$SqlParser$result = case149(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // help_stmt ::= KW_HELP ident_or_text 
            {
               CUP$SqlParser$result = case148(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // user_identity ::= ident_or_text AT LBRACKET ident_or_text RBRACKET 
            {
               CUP$SqlParser$result = case147(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // user_identity ::= ident_or_text AT ident_or_text 
            {
               CUP$SqlParser$result = case146(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // user_identity ::= ident_or_text 
            {
               CUP$SqlParser$result = case145(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // user ::= ident_or_text 
            {
               CUP$SqlParser$result = case144(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // opt_user_role ::= KW_DEFAULT KW_ROLE STRING_LITERAL 
            {
               CUP$SqlParser$result = case143(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // opt_user_role ::= KW_SUPERUSER 
            {
               CUP$SqlParser$result = case142(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // opt_user_role ::= 
            {
               CUP$SqlParser$result = case141(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // grant_user ::= user_identity KW_IDENTIFIED KW_BY KW_PASSWORD STRING_LITERAL 
            {
               CUP$SqlParser$result = case140(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // grant_user ::= user_identity KW_IDENTIFIED KW_BY STRING_LITERAL 
            {
               CUP$SqlParser$result = case139(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // grant_user ::= user_identity 
            {
               CUP$SqlParser$result = case138(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // opt_read_only ::= KW_READ KW_ONLY 
            {
               CUP$SqlParser$result = case137(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // opt_read_only ::= 
            {
               CUP$SqlParser$result = case136(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // opt_aggregate ::= KW_AGGREGATE 
            {
               CUP$SqlParser$result = case135(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // opt_aggregate ::= 
            {
               CUP$SqlParser$result = case134(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // create_stmt ::= KW_CREATE opt_external KW_RESOURCE ident_or_text opt_properties 
            {
               CUP$SqlParser$result = case133(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // create_stmt ::= KW_CREATE KW_INDEX ident KW_ON table_name LPAREN ident_list RPAREN opt_index_type opt_comment 
            {
               CUP$SqlParser$result = case132(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // create_stmt ::= KW_CREATE KW_MATERIALIZED KW_VIEW ident KW_AS select_stmt opt_properties 
            {
               CUP$SqlParser$result = case131(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // create_stmt ::= KW_CREATE KW_FILE STRING_LITERAL opt_db KW_PROPERTIES LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case130(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // create_stmt ::= KW_CREATE KW_ROLE ident 
            {
               CUP$SqlParser$result = case129(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // create_stmt ::= KW_CREATE opt_read_only KW_REPOSITORY ident KW_WITH KW_BROKER ident KW_ON KW_LOCATION STRING_LITERAL opt_properties 
            {
               CUP$SqlParser$result = case128(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // create_stmt ::= KW_CREATE KW_CLUSTER ident opt_properties KW_IDENTIFIED KW_BY STRING_LITERAL 
            {
               CUP$SqlParser$result = case127(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // create_stmt ::= KW_CREATE KW_VIEW opt_if_not_exists table_name opt_col_with_comment_list opt_comment KW_AS query_stmt 
            {
               CUP$SqlParser$result = case126(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // create_stmt ::= KW_CREATE KW_USER opt_if_not_exists grant_user opt_user_role 
            {
               CUP$SqlParser$result = case125(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // create_stmt ::= KW_CREATE opt_external KW_TABLE opt_if_not_exists table_name LPAREN column_definition_list COMMA index_definition_list RPAREN opt_engine opt_keys opt_comment opt_partition opt_distribution opt_rollup opt_properties opt_ext_properties 
            {
               CUP$SqlParser$result = case124(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // create_stmt ::= KW_CREATE opt_external KW_TABLE opt_if_not_exists table_name LPAREN column_definition_list RPAREN opt_engine opt_keys opt_comment opt_partition opt_distribution opt_rollup opt_properties opt_ext_properties 
            {
               CUP$SqlParser$result = case123(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // create_stmt ::= KW_CREATE opt_aggregate KW_FUNCTION function_name LPAREN func_args_def RPAREN KW_RETURNS type_def opt_intermediate_type opt_properties 
            {
               CUP$SqlParser$result = case122(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // create_stmt ::= KW_CREATE KW_SCHEMA opt_if_not_exists ident 
            {
               CUP$SqlParser$result = case121(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // create_stmt ::= KW_CREATE KW_DATABASE opt_if_not_exists ident 
            {
               CUP$SqlParser$result = case120(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // opt_intermediate_type ::= KW_INTERMEDIATE type_def 
            {
               CUP$SqlParser$result = case119(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // opt_intermediate_type ::= 
            {
               CUP$SqlParser$result = case118(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // sync_stmt ::= KW_SYNC 
            {
               CUP$SqlParser$result = case117(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // alter_cluster_clause ::= KW_MODIFY opt_properties 
            {
               CUP$SqlParser$result = case116(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // alter_system_clause ::= KW_SET KW_LOAD KW_ERRORS KW_HUB opt_properties 
            {
               CUP$SqlParser$result = case115(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // alter_system_clause ::= KW_DROP KW_ALL KW_BROKER ident_or_text 
            {
               CUP$SqlParser$result = case114(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // alter_system_clause ::= KW_DROP KW_BROKER ident_or_text string_list 
            {
               CUP$SqlParser$result = case113(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // alter_system_clause ::= KW_ADD KW_BROKER ident_or_text string_list 
            {
               CUP$SqlParser$result = case112(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // alter_system_clause ::= KW_DROP KW_FOLLOWER STRING_LITERAL 
            {
               CUP$SqlParser$result = case111(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // alter_system_clause ::= KW_ADD KW_FOLLOWER STRING_LITERAL 
            {
               CUP$SqlParser$result = case110(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // alter_system_clause ::= KW_DROP KW_OBSERVER STRING_LITERAL 
            {
               CUP$SqlParser$result = case109(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // alter_system_clause ::= KW_ADD KW_OBSERVER STRING_LITERAL 
            {
               CUP$SqlParser$result = case108(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // alter_system_clause ::= KW_DECOMMISSION KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case107(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // alter_system_clause ::= KW_DROPP KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case106(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // alter_system_clause ::= KW_DROP KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case105(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // alter_system_clause ::= KW_ADD KW_BACKEND KW_TO ident string_list 
            {
               CUP$SqlParser$result = case104(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // alter_system_clause ::= KW_ADD KW_FREE KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case103(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // alter_system_clause ::= KW_ADD KW_BACKEND string_list 
            {
               CUP$SqlParser$result = case102(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // alter_table_clause ::= KW_DROP KW_INDEX ident 
            {
               CUP$SqlParser$result = case101(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // alter_table_clause ::= KW_ADD index_definition 
            {
               CUP$SqlParser$result = case100(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // alter_table_clause ::= KW_RENAME KW_COLUMN ident ident 
            {
               CUP$SqlParser$result = case99(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // alter_table_clause ::= KW_RENAME KW_PARTITION ident ident 
            {
               CUP$SqlParser$result = case98(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // alter_table_clause ::= KW_RENAME KW_ROLLUP ident ident 
            {
               CUP$SqlParser$result = case97(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // alter_table_clause ::= KW_RENAME ident 
            {
               CUP$SqlParser$result = case96(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // alter_table_clause ::= KW_REPLACE opt_partition_names KW_WITH opt_partition_names opt_properties 
            {
               CUP$SqlParser$result = case95(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // alter_table_clause ::= KW_MODIFY KW_PARTITION ident KW_SET LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case94(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // alter_table_clause ::= KW_DROP opt_tmp KW_PARTITION opt_if_exists ident 
            {
               CUP$SqlParser$result = case93(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // alter_table_clause ::= KW_ADD opt_tmp single_range_partition_desc opt_distribution opt_properties 
            {
               CUP$SqlParser$result = case92(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // alter_table_clause ::= KW_SET LPAREN key_value_map RPAREN 
            {
               CUP$SqlParser$result = case91(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // alter_table_clause ::= KW_ORDER KW_BY LPAREN ident_list RPAREN opt_from_rollup opt_properties 
            {
               CUP$SqlParser$result = case90(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // alter_table_clause ::= KW_MODIFY KW_COLUMN column_definition opt_col_pos opt_from_rollup opt_properties 
            {
               CUP$SqlParser$result = case89(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // alter_table_clause ::= KW_DROP KW_COLUMN ident opt_from_rollup opt_properties 
            {
               CUP$SqlParser$result = case88(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // alter_table_clause ::= KW_ADD KW_COLUMN LPAREN column_definition_list RPAREN opt_to_rollup opt_properties 
            {
               CUP$SqlParser$result = case87(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // alter_table_clause ::= KW_ADD KW_COLUMN column_definition opt_col_pos opt_to_rollup opt_properties 
            {
               CUP$SqlParser$result = case86(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // opt_dup_keys ::= KW_DUPLICATE KW_KEY LPAREN ident_list RPAREN 
            {
               CUP$SqlParser$result = case85(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // opt_dup_keys ::= 
            {
               CUP$SqlParser$result = case84(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // opt_col_pos ::= KW_AFTER ident 
            {
               CUP$SqlParser$result = case83(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // opt_col_pos ::= KW_FIRST 
            {
               CUP$SqlParser$result = case82(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // opt_col_pos ::= 
            {
               CUP$SqlParser$result = case81(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // opt_from_rollup ::= KW_FROM ident 
            {
               CUP$SqlParser$result = case80(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // opt_from_rollup ::= 
            {
               CUP$SqlParser$result = case79(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // opt_to_rollup ::= KW_IN ident 
            {
               CUP$SqlParser$result = case78(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // opt_to_rollup ::= KW_TO ident 
            {
               CUP$SqlParser$result = case77(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // opt_to_rollup ::= 
            {
               CUP$SqlParser$result = case76(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // alter_table_clause_list ::= alter_table_clause_list COMMA alter_table_clause 
            {
               CUP$SqlParser$result = case75(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // alter_table_clause_list ::= alter_table_clause 
            {
               CUP$SqlParser$result = case74(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // drop_rollup_clause_list ::= drop_rollup_clause_list COMMA drop_rollup_clause 
            {
               CUP$SqlParser$result = case73(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // drop_rollup_clause_list ::= drop_rollup_clause 
            {
               CUP$SqlParser$result = case72(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // drop_rollup_clause ::= ident opt_properties 
            {
               CUP$SqlParser$result = case71(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // add_rollup_clause_list ::= add_rollup_clause_list COMMA add_rollup_clause 
            {
               CUP$SqlParser$result = case70(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // add_rollup_clause_list ::= add_rollup_clause 
            {
               CUP$SqlParser$result = case69(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // add_rollup_clause ::= ident LPAREN ident_list RPAREN opt_dup_keys opt_from_rollup opt_properties 
            {
               CUP$SqlParser$result = case68(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // opt_user ::= KW_FOR user 
            {
               CUP$SqlParser$result = case67(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // opt_user ::= 
            {
               CUP$SqlParser$result = case66(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // quantity ::= ident 
            {
               CUP$SqlParser$result = case65(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // quantity ::= INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case64(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // alter_stmt ::= KW_ALTER KW_DATABASE ident KW_RENAME ident 
            {
               CUP$SqlParser$result = case63(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // alter_stmt ::= KW_ALTER KW_DATABASE ident KW_SET KW_REPLICA KW_QUOTA INTEGER_LITERAL 
            {
               CUP$SqlParser$result = case62(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // alter_stmt ::= KW_ALTER KW_DATABASE ident KW_SET KW_DATA KW_QUOTA quantity 
            {
               CUP$SqlParser$result = case61(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // alter_stmt ::= KW_ALTER KW_CLUSTER ident opt_properties 
            {
               CUP$SqlParser$result = case60(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // alter_stmt ::= KW_ALTER KW_SYSTEM alter_system_clause 
            {
               CUP$SqlParser$result = case59(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // alter_stmt ::= KW_ALTER KW_VIEW table_name opt_col_with_comment_list KW_AS query_stmt 
            {
               CUP$SqlParser$result = case58(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // alter_stmt ::= KW_ALTER KW_TABLE table_name KW_DROP KW_ROLLUP drop_rollup_clause_list 
            {
               CUP$SqlParser$result = case57(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // alter_stmt ::= KW_ALTER KW_TABLE table_name KW_ADD KW_ROLLUP add_rollup_clause_list 
            {
               CUP$SqlParser$result = case56(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // alter_stmt ::= KW_ALTER KW_TABLE table_name alter_table_clause_list 
            {
               CUP$SqlParser$result = case55(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // migrate_stmt ::= KW_MIGRATE KW_DATABASE cluster_name des_cluster_name 
            {
               CUP$SqlParser$result = case54(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // link_stmt ::= KW_LINK KW_DATABASE cluster_name des_cluster_name 
            {
               CUP$SqlParser$result = case53(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // uninstall_plugin_stmt ::= KW_UNINSTALL KW_PLUGIN ident_or_text 
            {
               CUP$SqlParser$result = case52(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // install_plugin_stmt ::= KW_INSTALL KW_PLUGIN KW_FROM ident_or_text 
            {
               CUP$SqlParser$result = case51(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // des_cluster_name ::= ident DOT ident 
            {
               CUP$SqlParser$result = case50(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // des_cluster_name ::= ident 
            {
               CUP$SqlParser$result = case49(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // cluster_name ::= ident DOT ident 
            {
               CUP$SqlParser$result = case48(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // cluster_name ::= ident 
            {
               CUP$SqlParser$result = case47(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // stmt ::= 
            {
               CUP$SqlParser$result = case46(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // stmt ::= uninstall_plugin_stmt 
            {
               CUP$SqlParser$result = case45(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // stmt ::= install_plugin_stmt 
            {
               CUP$SqlParser$result = case44(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // stmt ::= truncate_stmt 
            {
               CUP$SqlParser$result = case43(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // stmt ::= admin_stmt 
            {
               CUP$SqlParser$result = case42(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // stmt ::= export_stmt 
            {
               CUP$SqlParser$result = case41(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // stmt ::= unsupported_stmt 
            {
               CUP$SqlParser$result = case40(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // stmt ::= restore_stmt 
            {
               CUP$SqlParser$result = case39(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // stmt ::= backup_stmt 
            {
               CUP$SqlParser$result = case38(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // stmt ::= insert_stmt 
            {
               CUP$SqlParser$result = case37(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // stmt ::= sync_stmt 
            {
               CUP$SqlParser$result = case36(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // stmt ::= delete_stmt 
            {
               CUP$SqlParser$result = case35(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // stmt ::= cancel_stmt 
            {
               CUP$SqlParser$result = case34(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // stmt ::= show_routine_load_task_stmt 
            {
               CUP$SqlParser$result = case33(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // stmt ::= show_routine_load_stmt 
            {
               CUP$SqlParser$result = case32(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // stmt ::= stop_routine_load_stmt 
            {
               CUP$SqlParser$result = case31(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // stmt ::= resume_routine_load_stmt 
            {
               CUP$SqlParser$result = case30(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // stmt ::= pause_routine_load_stmt 
            {
               CUP$SqlParser$result = case29(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // stmt ::= create_routine_load_stmt 
            {
               CUP$SqlParser$result = case28(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // stmt ::= load_stmt 
            {
               CUP$SqlParser$result = case27(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // stmt ::= help_stmt 
            {
               CUP$SqlParser$result = case26(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // stmt ::= revoke_stmt 
            {
               CUP$SqlParser$result = case25(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // stmt ::= grant_stmt 
            {
               CUP$SqlParser$result = case24(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // stmt ::= show_stmt 
            {
               CUP$SqlParser$result = case23(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // stmt ::= describe_stmt 
            {
               CUP$SqlParser$result = case22(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // stmt ::= kill_stmt 
            {
               CUP$SqlParser$result = case21(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // stmt ::= set_stmt 
            {
               CUP$SqlParser$result = case20(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // stmt ::= use_stmt 
            {
               CUP$SqlParser$result = case19(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // stmt ::= recover_stmt 
            {
               CUP$SqlParser$result = case18(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // stmt ::= drop_stmt 
            {
               CUP$SqlParser$result = case17(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // stmt ::= query_stmt 
            {
               CUP$SqlParser$result = case16(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // stmt ::= enter_stmt 
            {
               CUP$SqlParser$result = case15(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // stmt ::= migrate_stmt 
            {
               CUP$SqlParser$result = case14(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // stmt ::= link_stmt 
            {
               CUP$SqlParser$result = case13(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // stmt ::= create_stmt 
            {
               CUP$SqlParser$result = case12(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // stmt ::= alter_stmt 
            {
               CUP$SqlParser$result = case11(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // import_where_stmt ::= KW_WHERE expr 
            {
               CUP$SqlParser$result = case10(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // import_column_desc ::= ident EQUAL expr 
            {
               CUP$SqlParser$result = case9(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // import_column_desc ::= ident 
            {
               CUP$SqlParser$result = case8(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // import_column_descs ::= import_column_descs COMMA import_column_desc 
            {
               CUP$SqlParser$result = case7(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // import_column_descs ::= import_column_desc 
            {
               CUP$SqlParser$result = case6(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // import_columns_stmt ::= KW_COLUMNS LPAREN import_column_descs RPAREN 
            {
               CUP$SqlParser$result = case5(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // stmts ::= import_where_stmt 
            {
               CUP$SqlParser$result = case4(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // stmts ::= import_columns_stmt 
            {
               CUP$SqlParser$result = case3(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // stmts ::= stmts SEMICOLON stmt 
            {
               CUP$SqlParser$result = case2(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // stmts ::= stmt 
            {
               CUP$SqlParser$result = case1(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          return CUP$SqlParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= stmts EOF 
            {
               CUP$SqlParser$result = case0(
                 CUP$SqlParser$act_num,
                 CUP$SqlParser$parser,
                 CUP$SqlParser$stack,
                 CUP$SqlParser$top);
            }
          /* ACCEPT */
          CUP$SqlParser$parser.done_parsing();
          return CUP$SqlParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }/*1*/
    //time_unit ::= KW_SECOND 
    java_cup.runtime.Symbol case956(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_MINUTE 
    java_cup.runtime.Symbol case955(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_HOUR 
    java_cup.runtime.Symbol case954(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_DAY 
    java_cup.runtime.Symbol case953(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_WEEK 
    java_cup.runtime.Symbol case952(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_MONTH 
    java_cup.runtime.Symbol case951(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //time_unit ::= KW_YEAR 
    java_cup.runtime.Symbol case950(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("time_unit",244, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_or_text ::= STRING_LITERAL 
    java_cup.runtime.Symbol case949(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int textleft = CUP$SqlParser$stack.peek().left;
		int textright = CUP$SqlParser$stack.peek().right;
		String text = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = text;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_or_text",234, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_or_text ::= ident 
    java_cup.runtime.Symbol case948(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_or_text",234, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident ::= keyword 
    java_cup.runtime.Symbol case947(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident",233, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident ::= IDENT 
    java_cup.runtime.Symbol case946(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident",233, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= time_unit 
    java_cup.runtime.Symbol case945(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DYNAMIC 
    java_cup.runtime.Symbol case944(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_GROUPING 
    java_cup.runtime.Symbol case943(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_STOP 
    java_cup.runtime.Symbol case942(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RESUME 
    java_cup.runtime.Symbol case941(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PAUSE 
    java_cup.runtime.Symbol case940(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ROUTINE 
    java_cup.runtime.Symbol case939(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TASK 
    java_cup.runtime.Symbol case938(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_FREE 
    java_cup.runtime.Symbol case937(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MAX 
    java_cup.runtime.Symbol case936(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MIN 
    java_cup.runtime.Symbol case935(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SUM 
    java_cup.runtime.Symbol case934(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COUNT 
    java_cup.runtime.Symbol case933(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MIGRATIONS 
    java_cup.runtime.Symbol case932(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MIGRATE 
    java_cup.runtime.Symbol case931(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LINK 
    java_cup.runtime.Symbol case930(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CLUSTERS 
    java_cup.runtime.Symbol case929(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CLUSTER 
    java_cup.runtime.Symbol case928(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_WORK 
    java_cup.runtime.Symbol case927(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_WARNINGS 
    java_cup.runtime.Symbol case926(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MATERIALIZED 
    java_cup.runtime.Symbol case925(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_VIEW 
    java_cup.runtime.Symbol case924(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_VALUE 
    java_cup.runtime.Symbol case923(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_VARIABLES 
    java_cup.runtime.Symbol case922(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_USER 
    java_cup.runtime.Symbol case921(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_UNCOMMITTED 
    java_cup.runtime.Symbol case920(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TYPES 
    java_cup.runtime.Symbol case919(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TYPE 
    java_cup.runtime.Symbol case918(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TRUNCATE 
    java_cup.runtime.Symbol case917(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TRIGGERS 
    java_cup.runtime.Symbol case916(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TRANSACTION 
    java_cup.runtime.Symbol case915(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TIMESTAMP 
    java_cup.runtime.Symbol case914(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_THAN 
    java_cup.runtime.Symbol case913(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TEMPORARY 
    java_cup.runtime.Symbol case912(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_TABLES 
    java_cup.runtime.Symbol case911(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_STRING 
    java_cup.runtime.Symbol case910(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_STORAGE 
    java_cup.runtime.Symbol case909(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_STATUS 
    java_cup.runtime.Symbol case908(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_START 
    java_cup.runtime.Symbol case907(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SPLIT 
    java_cup.runtime.Symbol case906(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SONAME 
    java_cup.runtime.Symbol case905(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SNAPSHOT 
    java_cup.runtime.Symbol case904(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SESSION 
    java_cup.runtime.Symbol case903(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SERIALIZABLE 
    java_cup.runtime.Symbol case902(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_SCHEMA 
    java_cup.runtime.Symbol case901(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ROLLUP 
    java_cup.runtime.Symbol case900(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ROLLBACK 
    java_cup.runtime.Symbol case899(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RETURNS 
    java_cup.runtime.Symbol case898(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RESTORE 
    java_cup.runtime.Symbol case897(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RESOURCES 
    java_cup.runtime.Symbol case896(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RESOURCE 
    java_cup.runtime.Symbol case895(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_REPOSITORIES 
    java_cup.runtime.Symbol case894(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_REPOSITORY 
    java_cup.runtime.Symbol case893(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_REPLACE_IF_NOT_NULL 
    java_cup.runtime.Symbol case892(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_REPEATABLE 
    java_cup.runtime.Symbol case891(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RECOVER 
    java_cup.runtime.Symbol case890(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_RANDOM 
    java_cup.runtime.Symbol case889(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_QUOTA 
    java_cup.runtime.Symbol case888(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_QUERY 
    java_cup.runtime.Symbol case887(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PROPERTY 
    java_cup.runtime.Symbol case886(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PROPERTIES 
    java_cup.runtime.Symbol case885(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PROCESSLIST 
    java_cup.runtime.Symbol case884(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PROC 
    java_cup.runtime.Symbol case883(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PLUGINS 
    java_cup.runtime.Symbol case882(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PLUGIN 
    java_cup.runtime.Symbol case881(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PASSWORD 
    java_cup.runtime.Symbol case880(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PARTITIONS 
    java_cup.runtime.Symbol case879(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_OPEN 
    java_cup.runtime.Symbol case878(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ONLY 
    java_cup.runtime.Symbol case877(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_OFFSET 
    java_cup.runtime.Symbol case876(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_NULLS 
    java_cup.runtime.Symbol case875(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_NO 
    java_cup.runtime.Symbol case874(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_NEGATIVE 
    java_cup.runtime.Symbol case873(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_NAMES 
    java_cup.runtime.Symbol case872(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_NAME 
    java_cup.runtime.Symbol case871(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MODIFY 
    java_cup.runtime.Symbol case870(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_MERGE 
    java_cup.runtime.Symbol case869(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LOCATION 
    java_cup.runtime.Symbol case868(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LOCAL 
    java_cup.runtime.Symbol case867(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LEVEL 
    java_cup.runtime.Symbol case866(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LESS 
    java_cup.runtime.Symbol case865(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LAST 
    java_cup.runtime.Symbol case864(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_LABEL 
    java_cup.runtime.Symbol case863(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ISOLATION 
    java_cup.runtime.Symbol case862(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ISNULL 
    java_cup.runtime.Symbol case861(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_INDEXES 
    java_cup.runtime.Symbol case860(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_IDENTIFIED 
    java_cup.runtime.Symbol case859(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_HUB 
    java_cup.runtime.Symbol case858(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_HELP 
    java_cup.runtime.Symbol case857(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_HASH 
    java_cup.runtime.Symbol case856(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_GLOBAL 
    java_cup.runtime.Symbol case855(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_EXTERNAL 
    java_cup.runtime.Symbol case854(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_EVENTS 
    java_cup.runtime.Symbol case853(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ERRORS 
    java_cup.runtime.Symbol case852(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ENGINES 
    java_cup.runtime.Symbol case851(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_ENGINE 
    java_cup.runtime.Symbol case850(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_END 
    java_cup.runtime.Symbol case849(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_FUNCTION 
    java_cup.runtime.Symbol case848(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_PATH 
    java_cup.runtime.Symbol case847(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_HLL_UNION 
    java_cup.runtime.Symbol case846(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_FORMAT 
    java_cup.runtime.Symbol case845(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_FIRST 
    java_cup.runtime.Symbol case844(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_FILE 
    java_cup.runtime.Symbol case843(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BUCKETS 
    java_cup.runtime.Symbol case842(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DISTINCTPCSA 
    java_cup.runtime.Symbol case841(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DISTINCTPC 
    java_cup.runtime.Symbol case840(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DATETIME 
    java_cup.runtime.Symbol case839(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DATE 
    java_cup.runtime.Symbol case838(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_DATA 
    java_cup.runtime.Symbol case837(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CONNECTION_ID 
    java_cup.runtime.Symbol case836(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CONNECTION 
    java_cup.runtime.Symbol case835(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CONFIG 
    java_cup.runtime.Symbol case834(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COMMIT 
    java_cup.runtime.Symbol case833(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COLLATION 
    java_cup.runtime.Symbol case832(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CONSISTENT 
    java_cup.runtime.Symbol case831(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COMMITTED 
    java_cup.runtime.Symbol case830(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COMMENT 
    java_cup.runtime.Symbol case829(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_COLUMNS 
    java_cup.runtime.Symbol case828(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CHECK 
    java_cup.runtime.Symbol case827(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CHARSET 
    java_cup.runtime.Symbol case826(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_CHAIN 
    java_cup.runtime.Symbol case825(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BUILTIN 
    java_cup.runtime.Symbol case824(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BACKENDS 
    java_cup.runtime.Symbol case823(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BROKER 
    java_cup.runtime.Symbol case822(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BOOLEAN 
    java_cup.runtime.Symbol case821(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BITMAP_UNION 
    java_cup.runtime.Symbol case820(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BITMAP 
    java_cup.runtime.Symbol case819(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BEGIN 
    java_cup.runtime.Symbol case818(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_BACKUP 
    java_cup.runtime.Symbol case817(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_AUTHORS 
    java_cup.runtime.Symbol case816(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_AGGREGATE 
    java_cup.runtime.Symbol case815(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keyword ::= KW_AFTER 
    java_cup.runtime.Symbol case814(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keyword",232, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_func_name_keyword ::= KW_RIGHT 
    java_cup.runtime.Symbol case813(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_func_name_keyword",241, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_func_name_keyword ::= KW_LEFT 
    java_cup.runtime.Symbol case812(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_func_name_keyword",241, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_release ::= KW_NO KW_RELEASE 
    java_cup.runtime.Symbol case811(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_release",42, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_release ::= KW_RELEASE 
    java_cup.runtime.Symbol case810(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_release",42, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_release ::= 
    java_cup.runtime.Symbol case809(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_release",42, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_chain ::= KW_AND KW_CHAIN 
    java_cup.runtime.Symbol case808(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_chain",41, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_chain ::= KW_AND KW_NO KW_CHAIN 
    java_cup.runtime.Symbol case807(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_chain",41, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_chain ::= 
    java_cup.runtime.Symbol case806(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_chain",41, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_work ::= KW_WORK 
    java_cup.runtime.Symbol case805(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_work",40, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_work ::= 
    java_cup.runtime.Symbol case804(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_work",40, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_consistent_snapshot ::= KW_WITH KW_CONSISTENT KW_SNAPSHOT 
    java_cup.runtime.Symbol case803(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_consistent_snapshot",39, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_consistent_snapshot ::= 
    java_cup.runtime.Symbol case802(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_consistent_snapshot",39, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //unsupported_stmt ::= KW_ROLLBACK opt_work opt_chain opt_release 
    java_cup.runtime.Symbol case801(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new UnsupportedStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("unsupported_stmt",29, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //unsupported_stmt ::= KW_COMMIT opt_work opt_chain opt_release 
    java_cup.runtime.Symbol case800(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new UnsupportedStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("unsupported_stmt",29, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //unsupported_stmt ::= KW_BEGIN opt_work 
    java_cup.runtime.Symbol case799(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int workleft = CUP$SqlParser$stack.peek().left;
		int workright = CUP$SqlParser$stack.peek().right;
		Object work = (Object) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UnsupportedStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("unsupported_stmt",29, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //unsupported_stmt ::= KW_START KW_TRANSACTION opt_with_consistent_snapshot 
    java_cup.runtime.Symbol case798(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int vleft = CUP$SqlParser$stack.peek().left;
		int vright = CUP$SqlParser$stack.peek().right;
		Object v = (Object) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UnsupportedStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("unsupported_stmt",29, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //truncate_stmt ::= KW_TRUNCATE KW_TABLE base_table_ref 
    java_cup.runtime.Symbol case797(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblRefleft = CUP$SqlParser$stack.peek().left;
		int tblRefright = CUP$SqlParser$stack.peek().right;
		TableRef tblRef = (TableRef) CUP$SqlParser$stack.peek().value;
		
        RESULT = new TruncateTableStmt(tblRef);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("truncate_stmt",32, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_CHECK KW_TABLET LPAREN integer_list RPAREN opt_properties 
    java_cup.runtime.Symbol case796(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tabletIdsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tabletIdsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<Long> tabletIds = (List<Long>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AdminCheckTabletsStmt(tabletIds, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_SHOW KW_FRONTEND KW_CONFIG 
    java_cup.runtime.Symbol case795(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new AdminShowConfigStmt(AdminSetConfigStmt.ConfigType.FRONTEND);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_SET KW_FRONTEND KW_CONFIG opt_key_value_map 
    java_cup.runtime.Symbol case794(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int configsleft = CUP$SqlParser$stack.peek().left;
		int configsright = CUP$SqlParser$stack.peek().right;
		Map<String,String> configs = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AdminSetConfigStmt(AdminSetConfigStmt.ConfigType.FRONTEND, configs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_CANCEL KW_REPAIR KW_TABLE base_table_ref 
    java_cup.runtime.Symbol case793(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int table_refleft = CUP$SqlParser$stack.peek().left;
		int table_refright = CUP$SqlParser$stack.peek().right;
		TableRef table_ref = (TableRef) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AdminCancelRepairTableStmt(table_ref);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_REPAIR KW_TABLE base_table_ref 
    java_cup.runtime.Symbol case792(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int table_refleft = CUP$SqlParser$stack.peek().left;
		int table_refright = CUP$SqlParser$stack.peek().right;
		TableRef table_ref = (TableRef) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AdminRepairTableStmt(table_ref);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_SET KW_REPLICA KW_STATUS KW_PROPERTIES LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case791(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int propleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> prop = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new AdminSetReplicaStatusStmt(prop);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_SHOW KW_REPLICA KW_DISTRIBUTION KW_FROM base_table_ref 
    java_cup.runtime.Symbol case790(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int table_refleft = CUP$SqlParser$stack.peek().left;
		int table_refright = CUP$SqlParser$stack.peek().right;
		TableRef table_ref = (TableRef) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AdminShowReplicaDistributionStmt(table_ref);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //admin_stmt ::= KW_ADMIN KW_SHOW KW_REPLICA KW_STATUS KW_FROM base_table_ref opt_wild_where 
    java_cup.runtime.Symbol case789(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int table_refleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int table_refright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableRef table_ref = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new AdminShowReplicaStatusStmt(table_ref, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("admin_stmt",31, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //integer_list ::= INTEGER_LITERAL 
    java_cup.runtime.Symbol case788(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Long> RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		Long item = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(item);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("integer_list",185, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //integer_list ::= integer_list COMMA INTEGER_LITERAL 
    java_cup.runtime.Symbol case787(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Long> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<Long> l = (List<Long>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		Long item = (Long) CUP$SqlParser$stack.peek().value;
		
        l.add(item);
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("integer_list",185, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //string_list ::= STRING_LITERAL 
    java_cup.runtime.Symbol case786(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		String item = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(item);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("string_list",184, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //string_list ::= string_list COMMA STRING_LITERAL 
    java_cup.runtime.Symbol case785(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<String> l = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		String item = (String) CUP$SqlParser$stack.peek().value;
		
        l.add(item);
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("string_list",184, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //privilege_list ::= privilege_type 
    java_cup.runtime.Symbol case784(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AccessPrivilege> RESULT =null;/*3*/
		int privleft = CUP$SqlParser$stack.peek().left;
		int privright = CUP$SqlParser$stack.peek().right;
		AccessPrivilege priv = (AccessPrivilege) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(priv);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("privilege_list",183, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //privilege_list ::= privilege_list COMMA privilege_type 
    java_cup.runtime.Symbol case783(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AccessPrivilege> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AccessPrivilege> l = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int privleft = CUP$SqlParser$stack.peek().left;
		int privright = CUP$SqlParser$stack.peek().right;
		AccessPrivilege priv = (AccessPrivilege) CUP$SqlParser$stack.peek().value;
		
        l.add(priv);
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("privilege_list",183, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //privilege_type ::= KW_ALL 
    java_cup.runtime.Symbol case782(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AccessPrivilege RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = AccessPrivilege.ALL;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("privilege_type",187, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //privilege_type ::= ident 
    java_cup.runtime.Symbol case781(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AccessPrivilege RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		String name = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = AccessPrivilege.fromName(name);
        if (RESULT == null) {
            throw new AnalysisException("Unknown privilege type " + name);
        }
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("privilege_type",187, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_ref ::= ident DOT ident DOT ident 
    java_cup.runtime.Symbol case780(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SlotRef RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String tbl = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		String col = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new SlotRef(new TableName(db, tbl), col); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_ref",133, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_ref ::= ident DOT ident 
    java_cup.runtime.Symbol case779(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SlotRef RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String tbl = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		String col = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new SlotRef(new TableName(null, tbl), col); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_ref",133, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_ref ::= ident 
    java_cup.runtime.Symbol case778(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SlotRef RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		String col = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new SlotRef(null, col); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_ref",133, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //compound_predicate ::= NOT expr 
    java_cup.runtime.Symbol case777(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.NOT, e, null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("compound_predicate",105, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //compound_predicate ::= KW_NOT expr 
    java_cup.runtime.Symbol case776(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.NOT, e, null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("compound_predicate",105, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //compound_predicate ::= expr KW_OR expr 
    java_cup.runtime.Symbol case775(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.OR, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("compound_predicate",105, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //compound_predicate ::= expr KW_AND expr 
    java_cup.runtime.Symbol case774(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.AND, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("compound_predicate",105, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //subquery ::= LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case773(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Subquery RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new Subquery(query); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("subquery",142, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //subquery ::= LPAREN subquery RPAREN 
    java_cup.runtime.Symbol case772(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Subquery RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Subquery query = (Subquery) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = query; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("subquery",142, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //in_predicate ::= expr KW_NOT KW_IN subquery 
    java_cup.runtime.Symbol case771(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int sleft = CUP$SqlParser$stack.peek().left;
		int sright = CUP$SqlParser$stack.peek().right;
		Subquery s = (Subquery) CUP$SqlParser$stack.peek().value;
		 RESULT = new InPredicate(e, s, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("in_predicate",106, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //in_predicate ::= expr KW_IN subquery 
    java_cup.runtime.Symbol case770(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int sleft = CUP$SqlParser$stack.peek().left;
		int sright = CUP$SqlParser$stack.peek().right;
		Subquery s = (Subquery) CUP$SqlParser$stack.peek().value;
		 RESULT = new InPredicate(e, s, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("in_predicate",106, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //in_predicate ::= expr KW_NOT KW_IN LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case769(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new InPredicate(e, l, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("in_predicate",106, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //in_predicate ::= expr KW_IN LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case768(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new InPredicate(e, l, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("in_predicate",106, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //between_predicate ::= expr KW_NOT KW_BETWEEN predicate KW_AND expr 
    java_cup.runtime.Symbol case767(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int e2left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e2right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Predicate e2 = (Predicate) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e3left = CUP$SqlParser$stack.peek().left;
		int e3right = CUP$SqlParser$stack.peek().right;
		Expr e3 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BetweenPredicate(e1, e2, e3, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("between_predicate",103, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //between_predicate ::= expr KW_NOT KW_BETWEEN non_pred_expr KW_AND expr 
    java_cup.runtime.Symbol case766(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int e2left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e2right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e2 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e3left = CUP$SqlParser$stack.peek().left;
		int e3right = CUP$SqlParser$stack.peek().right;
		Expr e3 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BetweenPredicate(e1, e2, e3, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("between_predicate",103, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //between_predicate ::= expr KW_BETWEEN predicate KW_AND expr 
    java_cup.runtime.Symbol case765(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int e2left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e2right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Predicate e2 = (Predicate) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e3left = CUP$SqlParser$stack.peek().left;
		int e3right = CUP$SqlParser$stack.peek().right;
		Expr e3 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BetweenPredicate(e1, e2, e3, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("between_predicate",103, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //between_predicate ::= expr KW_BETWEEN non_pred_expr KW_AND expr 
    java_cup.runtime.Symbol case764(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int e2left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e2right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e2 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e3left = CUP$SqlParser$stack.peek().left;
		int e3right = CUP$SqlParser$stack.peek().right;
		Expr e3 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BetweenPredicate(e1, e2, e3, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("between_predicate",103, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //like_predicate ::= expr KW_NOT KW_REGEXP expr 
    java_cup.runtime.Symbol case763(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.NOT,
    new LikePredicate(LikePredicate.Operator.REGEXP, e1, e2), null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("like_predicate",107, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //like_predicate ::= expr KW_NOT KW_LIKE expr 
    java_cup.runtime.Symbol case762(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new CompoundPredicate(CompoundPredicate.Operator.NOT,
    new LikePredicate(LikePredicate.Operator.LIKE, e1, e2), null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("like_predicate",107, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //like_predicate ::= expr KW_REGEXP expr 
    java_cup.runtime.Symbol case761(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new LikePredicate(LikePredicate.Operator.REGEXP, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("like_predicate",107, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //like_predicate ::= expr KW_LIKE expr 
    java_cup.runtime.Symbol case760(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new LikePredicate(LikePredicate.Operator.LIKE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("like_predicate",107, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr LESSTHAN EQUAL GREATERTHAN expr 
    java_cup.runtime.Symbol case759(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.EQ_FOR_NULL, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr GREATERTHAN expr 
    java_cup.runtime.Symbol case758(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.GT, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr LESSTHAN expr 
    java_cup.runtime.Symbol case757(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.LT, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr GREATERTHAN EQUAL expr 
    java_cup.runtime.Symbol case756(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.GE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr LESSTHAN EQUAL expr 
    java_cup.runtime.Symbol case755(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.LE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr LESSTHAN GREATERTHAN expr 
    java_cup.runtime.Symbol case754(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.NE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr NOT EQUAL expr 
    java_cup.runtime.Symbol case753(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.NE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //comparison_predicate ::= expr EQUAL expr 
    java_cup.runtime.Symbol case752(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Object op = (Object) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new BinaryPredicate(BinaryPredicate.Operator.EQ, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("comparison_predicate",104, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= LPAREN predicate RPAREN 
    java_cup.runtime.Symbol case751(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int pright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Predicate p = (Predicate) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    p.setPrintSqlInParens(true);
    RESULT = p;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= like_predicate 
    java_cup.runtime.Symbol case750(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= exists_predicate 
    java_cup.runtime.Symbol case749(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= in_predicate 
    java_cup.runtime.Symbol case748(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= compound_predicate 
    java_cup.runtime.Symbol case747(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= comparison_predicate 
    java_cup.runtime.Symbol case746(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= between_predicate 
    java_cup.runtime.Symbol case745(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= expr KW_IS KW_NOT KW_NULL 
    java_cup.runtime.Symbol case744(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		 RESULT = new IsNullPredicate(e, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= KW_ISNULL LPAREN expr RPAREN 
    java_cup.runtime.Symbol case743(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new IsNullPredicate(e, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //predicate ::= expr KW_IS KW_NULL 
    java_cup.runtime.Symbol case742(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		 RESULT = new IsNullPredicate(e, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("predicate",102, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_params ::= KW_DISTINCT expr_list 
    java_cup.runtime.Symbol case741(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionParams RESULT =null;/*3*/
		int distinctleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int distinctright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String distinct = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int exprsleft = CUP$SqlParser$stack.peek().left;
		int exprsright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		 RESULT = new FunctionParams(true, exprs); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_params",128, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_params ::= KW_ALL expr_list 
    java_cup.runtime.Symbol case740(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionParams RESULT =null;/*3*/
		int exprsleft = CUP$SqlParser$stack.peek().left;
		int exprsright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		 RESULT = new FunctionParams(false, exprs); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_params",128, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_params ::= expr_list 
    java_cup.runtime.Symbol case739(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionParams RESULT =null;/*3*/
		int exprsleft = CUP$SqlParser$stack.peek().left;
		int exprsright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		 RESULT = new FunctionParams(false, exprs); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_params",128, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_params ::= KW_ALL STAR 
    java_cup.runtime.Symbol case738(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionParams RESULT =null;/*3*/
		 RESULT = FunctionParams.createStarParam(); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_params",128, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_params ::= STAR 
    java_cup.runtime.Symbol case737(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionParams RESULT =null;/*3*/
		 RESULT = FunctionParams.createStarParam(); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_params",128, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= NUMERIC_OVERFLOW 
    java_cup.runtime.Symbol case736(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
    // similar to the unmatched string literal case
    // we must terminate parsing at this point
    // and generate a corresponding symbol to be reported
    parser.parseError("literal", SqlParserSymbols.NUMERIC_OVERFLOW);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= UNMATCHED_STRING_LITERAL expr 
    java_cup.runtime.Symbol case735(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String l = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    // we have an unmatched string literal.
    // to correctly report the root cause of this syntax error
    // we must force parsing to fail at this point,
    // and generate an unmatched string literal symbol
    // to be passed as the last seen token in the
    // error handling routine (otherwise some other token could be reported)
    parser.parseError("literal", SqlParserSymbols.UNMATCHED_STRING_LITERAL);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= KW_NULL 
    java_cup.runtime.Symbol case734(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		 RESULT = new NullLiteral(); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= KW_FALSE 
    java_cup.runtime.Symbol case733(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		 RESULT = new BoolLiteral(false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= KW_TRUE 
    java_cup.runtime.Symbol case732(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		 RESULT = new BoolLiteral(true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= STRING_LITERAL 
    java_cup.runtime.Symbol case731(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new StringLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= DECIMAL_LITERAL 
    java_cup.runtime.Symbol case730(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		BigDecimal l = (BigDecimal) CUP$SqlParser$stack.peek().value;
		 RESULT = new DecimalLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= FLOATINGPOINT_LITERAL 
    java_cup.runtime.Symbol case729(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		Double l = (Double) CUP$SqlParser$stack.peek().value;
		 RESULT = new FloatLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= LARGE_INTEGER_LITERAL 
    java_cup.runtime.Symbol case728(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new LargeIntLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //literal ::= INTEGER_LITERAL 
    java_cup.runtime.Symbol case727(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LiteralExpr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		Long l = (Long) CUP$SqlParser$stack.peek().value;
		 RESULT = new IntLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("literal",125, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //timestamp_arithmetic_expr ::= function_name LPAREN time_unit COMMA expr COMMA expr RPAREN 
    java_cup.runtime.Symbol case726(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int functionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int functionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		FunctionName functionName = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int uleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int uright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String u = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int e2left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int e2right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr e2 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = new TimestampArithmeticExpr(functionName.getFunction(), e2, e1, u);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("timestamp_arithmetic_expr",82, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //timestamp_arithmetic_expr ::= function_name LPAREN expr_list COMMA KW_INTERVAL expr ident RPAREN 
    java_cup.runtime.Symbol case725(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int functionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int functionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		FunctionName functionName = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int vleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int vright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr v = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int uleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int uright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String u = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    if (l.size() > 1) {
      // Report parsing failure on keyword interval.
      parser.parseError("interval", SqlParserSymbols.KW_INTERVAL);
    }
    if (functionName.getDb() != null) {
      // This function should not fully qualified
      throw new Exception("interval should not be qualified by database name");
    }

    RESULT = new TimestampArithmeticExpr(functionName.getFunction(), l.get(0), v, u);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("timestamp_arithmetic_expr",82, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //timestamp_arithmetic_expr ::= expr SUBTRACT KW_INTERVAL expr ident 
    java_cup.runtime.Symbol case724(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int tright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr t = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int vleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int vright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr v = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int uleft = CUP$SqlParser$stack.peek().left;
		int uright = CUP$SqlParser$stack.peek().right;
		String u = (String) CUP$SqlParser$stack.peek().value;
		
    RESULT =
        new TimestampArithmeticExpr(ArithmeticExpr.Operator.SUBTRACT, t, v, u, false);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("timestamp_arithmetic_expr",82, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //timestamp_arithmetic_expr ::= expr ADD KW_INTERVAL expr ident 
    java_cup.runtime.Symbol case723(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int tright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr t = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int vleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int vright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr v = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int uleft = CUP$SqlParser$stack.peek().left;
		int uright = CUP$SqlParser$stack.peek().right;
		String u = (String) CUP$SqlParser$stack.peek().value;
		
    RESULT = new TimestampArithmeticExpr(ArithmeticExpr.Operator.ADD, t, v, u, false);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("timestamp_arithmetic_expr",82, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //timestamp_arithmetic_expr ::= KW_INTERVAL expr ident ADD expr 
    java_cup.runtime.Symbol case722(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int vleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int vright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr v = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int uleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int uright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String u = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tleft = CUP$SqlParser$stack.peek().left;
		int tright = CUP$SqlParser$stack.peek().right;
		Expr t = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new TimestampArithmeticExpr(ArithmeticExpr.Operator.ADD, t, v, u, true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("timestamp_arithmetic_expr",82, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= BITNOT expr 
    java_cup.runtime.Symbol case721(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.BITNOT, e, null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr BITXOR expr 
    java_cup.runtime.Symbol case720(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.BITXOR, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr BITOR expr 
    java_cup.runtime.Symbol case719(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.BITOR, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr BITAND expr 
    java_cup.runtime.Symbol case718(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.BITAND, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr SUBTRACT expr 
    java_cup.runtime.Symbol case717(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.SUBTRACT, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr ADD expr 
    java_cup.runtime.Symbol case716(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.ADD, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr KW_DIV expr 
    java_cup.runtime.Symbol case715(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.INT_DIVIDE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr MOD expr 
    java_cup.runtime.Symbol case714(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.MOD, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr DIVIDE expr 
    java_cup.runtime.Symbol case713(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.DIVIDE, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //arithmetic_expr ::= expr STAR expr 
    java_cup.runtime.Symbol case712(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.MULTIPLY, e1, e2); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("arithmetic_expr",81, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_boundary ::= expr KW_FOLLOWING 
    java_cup.runtime.Symbol case711(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Boundary RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new AnalyticWindow.Boundary(AnalyticWindow.BoundaryType.FOLLOWING, e); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_boundary",132, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_boundary ::= expr KW_PRECEDING 
    java_cup.runtime.Symbol case710(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Boundary RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new AnalyticWindow.Boundary(AnalyticWindow.BoundaryType.PRECEDING, e); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_boundary",132, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_boundary ::= KW_CURRENT KW_ROW 
    java_cup.runtime.Symbol case709(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Boundary RESULT =null;/*3*/
		
    RESULT = new AnalyticWindow.Boundary(AnalyticWindow.BoundaryType.CURRENT_ROW, null);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_boundary",132, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_boundary ::= KW_UNBOUNDED KW_FOLLOWING 
    java_cup.runtime.Symbol case708(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Boundary RESULT =null;/*3*/
		
    RESULT = new AnalyticWindow.Boundary(
        AnalyticWindow.BoundaryType.UNBOUNDED_FOLLOWING, null);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_boundary",132, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_boundary ::= KW_UNBOUNDED KW_PRECEDING 
    java_cup.runtime.Symbol case707(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Boundary RESULT =null;/*3*/
		
    RESULT = new AnalyticWindow.Boundary(
        AnalyticWindow.BoundaryType.UNBOUNDED_PRECEDING, null);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_boundary",132, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_type ::= KW_RANGE 
    java_cup.runtime.Symbol case706(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Type RESULT =null;/*3*/
		 RESULT = AnalyticWindow.Type.RANGE; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_type",131, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //window_type ::= KW_ROWS 
    java_cup.runtime.Symbol case705(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow.Type RESULT =null;/*3*/
		 RESULT = AnalyticWindow.Type.ROWS; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("window_type",131, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_window_clause ::= 
    java_cup.runtime.Symbol case704(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_window_clause",130, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_window_clause ::= window_type KW_BETWEEN window_boundary KW_AND window_boundary 
    java_cup.runtime.Symbol case703(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int tright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		AnalyticWindow.Type t = (AnalyticWindow.Type) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		AnalyticWindow.Boundary l = (AnalyticWindow.Boundary) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int rleft = CUP$SqlParser$stack.peek().left;
		int rright = CUP$SqlParser$stack.peek().right;
		AnalyticWindow.Boundary r = (AnalyticWindow.Boundary) CUP$SqlParser$stack.peek().value;
		 RESULT = new AnalyticWindow(t, l, r); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_window_clause",130, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_window_clause ::= window_type window_boundary 
    java_cup.runtime.Symbol case702(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AnalyticWindow RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		AnalyticWindow.Type t = (AnalyticWindow.Type) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int bleft = CUP$SqlParser$stack.peek().left;
		int bright = CUP$SqlParser$stack.peek().right;
		AnalyticWindow.Boundary b = (AnalyticWindow.Boundary) CUP$SqlParser$stack.peek().value;
		 RESULT = new AnalyticWindow(t, b); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_window_clause",130, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition_by_clause ::= 
    java_cup.runtime.Symbol case701(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition_by_clause",109, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition_by_clause ::= KW_PARTITION KW_BY expr_list 
    java_cup.runtime.Symbol case700(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		 RESULT = l; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition_by_clause",109, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //analytic_expr ::= function_call_expr KW_OVER LPAREN opt_partition_by_clause order_by_clause opt_window_clause RPAREN 
    java_cup.runtime.Symbol case699(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int pleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int pright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<Expr> p = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int oleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int oright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<OrderByElement> o = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int wleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int wright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		AnalyticWindow w = (AnalyticWindow) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    // Handle cases where function_call_expr resulted in a plain Expr
    if (!(e instanceof FunctionCallExpr)) {
      parser.parseError("over", SqlParserSymbols.KW_OVER);
    }
    FunctionCallExpr f = (FunctionCallExpr)e;
    f.setIsAnalyticFnCall(true);
    RESULT = new AnalyticExpr(f, p, o, w);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("analytic_expr",124, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //func_arg_list ::= func_arg_list COMMA expr 
    java_cup.runtime.Symbol case698(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<Expr> list = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		Expr item = (Expr) CUP$SqlParser$stack.peek().value;
		
    list.add(item);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("func_arg_list",89, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //func_arg_list ::= expr 
    java_cup.runtime.Symbol case697(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		Expr item = (Expr) CUP$SqlParser$stack.peek().value;
		
    ArrayList<Expr> list = new ArrayList<Expr>();
    list.add(item);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("func_arg_list",89, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_pipe_list ::= expr_pipe_list KW_PIPE expr 
    java_cup.runtime.Symbol case696(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<Expr> list = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    list.add(e);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_pipe_list",90, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_pipe_list ::= expr KW_PIPE expr 
    java_cup.runtime.Symbol case695(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int e1left = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int e1right = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e1 = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int e2left = CUP$SqlParser$stack.peek().left;
		int e2right = CUP$SqlParser$stack.peek().right;
		Expr e2 = (Expr) CUP$SqlParser$stack.peek().value;
		
    ArrayList<Expr> list = new ArrayList<Expr>();
    list.add(e1);
    list.add(e2);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_pipe_list",90, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_NULL KW_IS KW_NOT KW_NULL 
    java_cup.runtime.Symbol case694(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new BoolLiteral(false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_NULL KW_IS KW_NULL 
    java_cup.runtime.Symbol case693(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new BoolLiteral(true); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= subquery 
    java_cup.runtime.Symbol case692(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int sleft = CUP$SqlParser$stack.peek().left;
		int sright = CUP$SqlParser$stack.peek().right;
		Subquery s = (Subquery) CUP$SqlParser$stack.peek().value;
		 RESULT = s; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_PASSWORD LPAREN STRING_LITERAL RPAREN 
    java_cup.runtime.Symbol case691(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int textleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int textright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String text = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = new StringLiteral(new String(MysqlPassword.makeScrambledPassword(text)));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_CONNECTION_ID LPAREN RPAREN 
    java_cup.runtime.Symbol case690(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new InformationFunction("CONNECTION_ID"); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_CURRENT_USER LPAREN RPAREN 
    java_cup.runtime.Symbol case689(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new InformationFunction("CURRENT_USER"); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_USER LPAREN RPAREN 
    java_cup.runtime.Symbol case688(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new InformationFunction("USER"); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_DATABASE LPAREN RPAREN 
    java_cup.runtime.Symbol case687(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = new InformationFunction("DATABASE"); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_TRIM LPAREN function_params RPAREN 
    java_cup.runtime.Symbol case686(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int idright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String id = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int paramsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int paramsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		FunctionParams params = (FunctionParams) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new FunctionCallExpr(new FunctionName(null, id), params); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= LPAREN non_pred_expr RPAREN 
    java_cup.runtime.Symbol case685(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    e.setPrintSqlInParens(true);
    RESULT = e;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= arithmetic_expr 
    java_cup.runtime.Symbol case684(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= timestamp_arithmetic_expr 
    java_cup.runtime.Symbol case683(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= column_ref 
    java_cup.runtime.Symbol case682(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int cleft = CUP$SqlParser$stack.peek().left;
		int cright = CUP$SqlParser$stack.peek().right;
		SlotRef c = (SlotRef) CUP$SqlParser$stack.peek().value;
		 RESULT = c; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= case_expr 
    java_cup.runtime.Symbol case681(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int cleft = CUP$SqlParser$stack.peek().left;
		int cright = CUP$SqlParser$stack.peek().right;
		CaseExpr c = (CaseExpr) CUP$SqlParser$stack.peek().value;
		 RESULT = c; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= cast_expr 
    java_cup.runtime.Symbol case680(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int cleft = CUP$SqlParser$stack.peek().left;
		int cright = CUP$SqlParser$stack.peek().right;
		Expr c = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = c; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= expr_pipe_list 
    java_cup.runtime.Symbol case679(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int exprsleft = CUP$SqlParser$stack.peek().left;
		int exprsright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
    RESULT = new FunctionCallExpr("concat", exprs);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_IF LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case678(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int exprsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int exprsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new FunctionCallExpr("if", exprs); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= analytic_expr 
    java_cup.runtime.Symbol case677(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_EXTRACT LPAREN function_name KW_FROM func_arg_list RPAREN 
    java_cup.runtime.Symbol case676(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int fn_nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int fn_nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		FunctionName fn_name = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int exprsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int exprsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> exprs = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new FunctionCallExpr(fn_name, exprs); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_TIMESTAMP STRING_LITERAL 
    java_cup.runtime.Symbol case675(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new StringLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= KW_DATE STRING_LITERAL 
    java_cup.runtime.Symbol case674(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new StringLiteral(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= function_call_expr 
    java_cup.runtime.Symbol case673(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= literal 
    java_cup.runtime.Symbol case672(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		LiteralExpr l = (LiteralExpr) CUP$SqlParser$stack.peek().value;
		 RESULT = l; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= AT AT var_ident_type ident 
    java_cup.runtime.Symbol case671(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SetType type = (SetType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
    RESULT = new SysVariableDesc(l, type);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= AT AT ident 
    java_cup.runtime.Symbol case670(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
    RESULT = new SysVariableDesc(l);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //non_pred_expr ::= sign_chain_expr 
    java_cup.runtime.Symbol case669(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("non_pred_expr",80, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //exists_predicate ::= KW_EXISTS subquery 
    java_cup.runtime.Symbol case668(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Predicate RESULT =null;/*3*/
		int sleft = CUP$SqlParser$stack.peek().left;
		int sright = CUP$SqlParser$stack.peek().right;
		Subquery s = (Subquery) CUP$SqlParser$stack.peek().value;
		 RESULT = new ExistsPredicate(s, false); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("exists_predicate",108, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_call_expr ::= function_name LPAREN function_params RPAREN 
    java_cup.runtime.Symbol case667(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int fn_nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int fn_nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		FunctionName fn_name = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int paramsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int paramsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		FunctionParams params = (FunctionParams) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    if ("grouping".equalsIgnoreCase(fn_name.getFunction())) {
      if (params.exprs().size() > 1) {
        throw new AnalysisException("GROUPING requires exactly one column parameter.");
      }
      RESULT = new GroupingFunctionCallExpr(fn_name, params);
    } else if ("grouping_id".equalsIgnoreCase(fn_name.getFunction())) {
      RESULT = new GroupingFunctionCallExpr(fn_name, params);
    } else {
      RESULT = new FunctionCallExpr(fn_name, params);
    }
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_call_expr",129, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_call_expr ::= function_name LPAREN RPAREN 
    java_cup.runtime.Symbol case666(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int fn_nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int fn_nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		FunctionName fn_name = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		 RESULT = new FunctionCallExpr(fn_name, new ArrayList<Expr>()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_call_expr",129, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr ::= predicate 
    java_cup.runtime.Symbol case665(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int pleft = CUP$SqlParser$stack.peek().left;
		int pright = CUP$SqlParser$stack.peek().right;
		Predicate p = (Predicate) CUP$SqlParser$stack.peek().value;
		 RESULT = p; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr",79, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr ::= non_pred_expr 
    java_cup.runtime.Symbol case664(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr",79, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //sign_chain_expr ::= ADD expr 
    java_cup.runtime.Symbol case663(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("sign_chain_expr",147, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //sign_chain_expr ::= SUBTRACT expr 
    java_cup.runtime.Symbol case662(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    // integrate signs into literals
    if (e.isLiteral() && e.getType().isNumericType()) {
      ((LiteralExpr)e).swapSign();
      RESULT = e;
    } else {
      RESULT = new ArithmeticExpr(ArithmeticExpr.Operator.MULTIPLY, new IntLiteral((long)-1), e);
    }
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("sign_chain_expr",147, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_else_clause ::= 
    java_cup.runtime.Symbol case661(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_else_clause",123, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_else_clause ::= KW_ELSE expr 
    java_cup.runtime.Symbol case660(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_else_clause",123, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_when_clause_list ::= case_when_clause_list KW_WHEN expr KW_THEN expr 
    java_cup.runtime.Symbol case659(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<CaseWhenClause> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<CaseWhenClause> list = (ArrayList<CaseWhenClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int whenExprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int whenExprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr whenExpr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int thenExprleft = CUP$SqlParser$stack.peek().left;
		int thenExprright = CUP$SqlParser$stack.peek().right;
		Expr thenExpr = (Expr) CUP$SqlParser$stack.peek().value;
		
    list.add(new CaseWhenClause(whenExpr, thenExpr));
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_when_clause_list",127, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_when_clause_list ::= KW_WHEN expr KW_THEN expr 
    java_cup.runtime.Symbol case658(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<CaseWhenClause> RESULT =null;/*3*/
		int whenExprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int whenExprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr whenExpr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int thenExprleft = CUP$SqlParser$stack.peek().left;
		int thenExprright = CUP$SqlParser$stack.peek().right;
		Expr thenExpr = (Expr) CUP$SqlParser$stack.peek().value;
		
    ArrayList<CaseWhenClause> list = new ArrayList<CaseWhenClause>();
    list.add(new CaseWhenClause(whenExpr, thenExpr));
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_when_clause_list",127, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_expr ::= KW_CASE case_when_clause_list case_else_clause KW_END 
    java_cup.runtime.Symbol case657(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      CaseExpr RESULT =null;/*3*/
		int whenClauseListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int whenClauseListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<CaseWhenClause> whenClauseList = (ArrayList<CaseWhenClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int elseExprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int elseExprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr elseExpr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new CaseExpr(null, whenClauseList, elseExpr); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_expr",126, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //case_expr ::= KW_CASE expr case_when_clause_list case_else_clause KW_END 
    java_cup.runtime.Symbol case656(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      CaseExpr RESULT =null;/*3*/
		int caseExprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int caseExprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr caseExpr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int whenClauseListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int whenClauseListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<CaseWhenClause> whenClauseList = (ArrayList<CaseWhenClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int elseExprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int elseExprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Expr elseExpr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new CaseExpr(caseExpr, whenClauseList, elseExpr); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("case_expr",126, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cast_expr ::= KW_CAST LPAREN expr KW_AS type_def RPAREN 
    java_cup.runtime.Symbol case655(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int targetTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int targetTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TypeDef targetType = (TypeDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new CastExpr(targetType, e); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cast_expr",122, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //func_args_def ::= type_def_list COMMA DOTDOTDOT 
    java_cup.runtime.Symbol case654(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionArgsDef RESULT =null;/*3*/
		int argTypesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int argTypesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<TypeDef> argTypes = (List<TypeDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
    RESULT = new FunctionArgsDef(argTypes, true);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("func_args_def",120, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //func_args_def ::= DOTDOTDOT 
    java_cup.runtime.Symbol case653(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionArgsDef RESULT =null;/*3*/
		
    RESULT = new FunctionArgsDef(Lists.newArrayList(), true);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("func_args_def",120, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //func_args_def ::= type_def_list 
    java_cup.runtime.Symbol case652(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionArgsDef RESULT =null;/*3*/
		int argTypesleft = CUP$SqlParser$stack.peek().left;
		int argTypesright = CUP$SqlParser$stack.peek().right;
		List<TypeDef> argTypes = (List<TypeDef>) CUP$SqlParser$stack.peek().value;
		
    RESULT = new FunctionArgsDef(argTypes, false);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("func_args_def",120, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_def_list ::= type_def_list COMMA type_def 
    java_cup.runtime.Symbol case651(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<TypeDef> RESULT =null;/*3*/
		int typesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int typesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<TypeDef> types = (List<TypeDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int typeDefleft = CUP$SqlParser$stack.peek().left;
		int typeDefright = CUP$SqlParser$stack.peek().right;
		TypeDef typeDef = (TypeDef) CUP$SqlParser$stack.peek().value;
		
    types.add(typeDef);
    RESULT = types;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_def_list",119, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_def_list ::= type_def 
    java_cup.runtime.Symbol case650(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<TypeDef> RESULT =null;/*3*/
		int typeDefleft = CUP$SqlParser$stack.peek().left;
		int typeDefright = CUP$SqlParser$stack.peek().right;
		TypeDef typeDef = (TypeDef) CUP$SqlParser$stack.peek().value;
		
    RESULT = Lists.newArrayList(typeDef);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_def_list",119, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_def ::= type 
    java_cup.runtime.Symbol case649(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TypeDef RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.peek().left;
		int tright = CUP$SqlParser$stack.peek().right;
		Type t = (Type) CUP$SqlParser$stack.peek().value;
		 RESULT = new TypeDef(t); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_def",117, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_field_length ::= 
    java_cup.runtime.Symbol case648(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Long RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_field_length",175, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_field_length ::= LPAREN INTEGER_LITERAL RPAREN 
    java_cup.runtime.Symbol case647(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Long RESULT =null;/*3*/
		int lengthleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lengthright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Long length = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = length; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_field_length",175, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_HLL 
    java_cup.runtime.Symbol case646(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 ScalarType type = ScalarType.createHllType();
     type.setAssignedStrLenInColDefinition();
     RESULT = type;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DECIMAL 
    java_cup.runtime.Symbol case645(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = ScalarType.createDecimalV2Type(); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DECIMAL LPAREN INTEGER_LITERAL COMMA INTEGER_LITERAL RPAREN 
    java_cup.runtime.Symbol case644(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		int precisionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int precisionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Long precision = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int scaleleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int scaleright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Long scale = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = ScalarType.createDecimalV2Type(precision.intValue(), scale.intValue()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DECIMAL LPAREN INTEGER_LITERAL RPAREN 
    java_cup.runtime.Symbol case643(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		int precisionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int precisionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Long precision = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = ScalarType.createDecimalV2Type(precision.intValue()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_CHAR 
    java_cup.runtime.Symbol case642(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = ScalarType.createCharType(-1); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_CHAR LPAREN INTEGER_LITERAL RPAREN 
    java_cup.runtime.Symbol case641(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		int lenleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lenright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Long len = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 ScalarType type = ScalarType.createCharType(len.intValue());
     type.setAssignedStrLenInColDefinition();
     RESULT = type;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_VARCHAR 
    java_cup.runtime.Symbol case640(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = ScalarType.createVarcharType(-1); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_VARCHAR LPAREN INTEGER_LITERAL RPAREN 
    java_cup.runtime.Symbol case639(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		int lenleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lenright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Long len = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 ScalarType type = ScalarType.createVarcharType(len.intValue());
     type.setAssignedStrLenInColDefinition();
     RESULT = type;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_STRING 
    java_cup.runtime.Symbol case638(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = ScalarType.createVarcharType(-1); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_BITMAP 
    java_cup.runtime.Symbol case637(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.BITMAP; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_TIME 
    java_cup.runtime.Symbol case636(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.TIME; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DATETIME 
    java_cup.runtime.Symbol case635(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.DATETIME; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DATE 
    java_cup.runtime.Symbol case634(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.DATE; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_DOUBLE 
    java_cup.runtime.Symbol case633(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.DOUBLE; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_FLOAT 
    java_cup.runtime.Symbol case632(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.FLOAT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_BOOLEAN 
    java_cup.runtime.Symbol case631(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.BOOLEAN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_LARGEINT opt_field_length 
    java_cup.runtime.Symbol case630(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.LARGEINT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_BIGINT opt_field_length 
    java_cup.runtime.Symbol case629(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.BIGINT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_INT opt_field_length 
    java_cup.runtime.Symbol case628(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.INT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_SMALLINT opt_field_length 
    java_cup.runtime.Symbol case627(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.SMALLINT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type ::= KW_TINYINT opt_field_length 
    java_cup.runtime.Symbol case626(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Type RESULT =null;/*3*/
		 RESULT = Type.TINYINT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type",121, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //limit_clause ::= KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
    java_cup.runtime.Symbol case625(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LimitElement RESULT =null;/*3*/
		int limitleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int limitright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long limit = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int offsetleft = CUP$SqlParser$stack.peek().left;
		int offsetright = CUP$SqlParser$stack.peek().right;
		Long offset = (Long) CUP$SqlParser$stack.peek().value;
		 RESULT = new LimitElement(offset.longValue(), limit.longValue()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("limit_clause",116, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //limit_clause ::= KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
    java_cup.runtime.Symbol case624(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LimitElement RESULT =null;/*3*/
		int offsetleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int offsetright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long offset = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		 RESULT = new LimitElement(offset.longValue(), limit.longValue()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("limit_clause",116, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //limit_clause ::= 
    java_cup.runtime.Symbol case623(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LimitElement RESULT =null;/*3*/
		 RESULT = LimitElement.NO_LIMIT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("limit_clause",116, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //limit_clause ::= KW_LIMIT INTEGER_LITERAL 
    java_cup.runtime.Symbol case622(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LimitElement RESULT =null;/*3*/
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		 RESULT = new LimitElement(limit.longValue()); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("limit_clause",116, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_nulls_order_param ::= 
    java_cup.runtime.Symbol case621(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_nulls_order_param",115, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_nulls_order_param ::= KW_NULLS KW_LAST 
    java_cup.runtime.Symbol case620(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = false; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_nulls_order_param",115, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_nulls_order_param ::= KW_NULLS KW_FIRST 
    java_cup.runtime.Symbol case619(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = true; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_nulls_order_param",115, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_order_param ::= 
    java_cup.runtime.Symbol case618(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = true; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_order_param",114, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_order_param ::= KW_DESC 
    java_cup.runtime.Symbol case617(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = false; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_order_param",114, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_order_param ::= KW_ASC 
    java_cup.runtime.Symbol case616(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		 RESULT = true; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_order_param",114, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //order_by_element ::= expr opt_order_param opt_nulls_order_param 
    java_cup.runtime.Symbol case615(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      OrderByElement RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int eright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr e = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int oleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int oright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean o = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int nleft = CUP$SqlParser$stack.peek().left;
		int nright = CUP$SqlParser$stack.peek().right;
		Boolean n = (Boolean) CUP$SqlParser$stack.peek().value;
		 RESULT = new OrderByElement(e, o, n); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("order_by_element",113, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //order_by_elements ::= order_by_elements COMMA order_by_element 
    java_cup.runtime.Symbol case614(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<OrderByElement> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<OrderByElement> list = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		OrderByElement e = (OrderByElement) CUP$SqlParser$stack.peek().value;
		
    list.add(e);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("order_by_elements",111, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //order_by_elements ::= order_by_element 
    java_cup.runtime.Symbol case613(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<OrderByElement> RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		OrderByElement e = (OrderByElement) CUP$SqlParser$stack.peek().value;
		
    ArrayList<OrderByElement> list = new ArrayList<OrderByElement>();
    list.add(e);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("order_by_elements",111, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //order_by_clause ::= 
    java_cup.runtime.Symbol case612(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<OrderByElement> RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("order_by_clause",112, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //order_by_clause ::= KW_ORDER KW_BY order_by_elements 
    java_cup.runtime.Symbol case611(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<OrderByElement> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<OrderByElement> l = (ArrayList<OrderByElement>) CUP$SqlParser$stack.peek().value;
		 RESULT = l; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("order_by_clause",112, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //having_clause ::= 
    java_cup.runtime.Symbol case610(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("having_clause",110, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //having_clause ::= KW_HAVING expr 
    java_cup.runtime.Symbol case609(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("having_clause",110, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //group_by_clause ::= 
    java_cup.runtime.Symbol case608(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("group_by_clause",230, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //group_by_clause ::= KW_GROUP KW_BY grouping_elements 
    java_cup.runtime.Symbol case607(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		GroupByClause e = (GroupByClause) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("group_by_clause",230, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_elements ::= KW_ROLLUP LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case606(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = new GroupByClause(l, GroupByClause.GroupingType.ROLLUP);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_elements",231, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_elements ::= KW_CUBE LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case605(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = new GroupByClause(l, GroupByClause.GroupingType.CUBE);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_elements",231, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_elements ::= KW_GROUPING KW_SETS LPAREN grouping_set_list RPAREN 
    java_cup.runtime.Symbol case604(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		int lsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<ArrayList<Expr>> ls = (List<ArrayList<Expr>>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = new GroupByClause(ls, GroupByClause.GroupingType.GROUPING_SETS);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_elements",231, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_elements ::= expr_list 
    java_cup.runtime.Symbol case603(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      GroupByClause RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
    RESULT = new GroupByClause(l, GroupByClause.GroupingType.GROUP_BY);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_elements",231, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_set_list ::= grouping_set_list COMMA grouping_set 
    java_cup.runtime.Symbol case602(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ArrayList<Expr>> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<ArrayList<Expr>> list = (List<ArrayList<Expr>>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
    list.add(l);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_set_list",228, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_set_list ::= grouping_set 
    java_cup.runtime.Symbol case601(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ArrayList<Expr>> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
    List<ArrayList<Expr>> list = Lists.newArrayList();
    list.add(l);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_set_list",228, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_set ::= LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case600(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> l = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = l; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_set",229, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grouping_set ::= LPAREN RPAREN 
    java_cup.runtime.Symbol case599(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		
    ArrayList<Expr> list = Lists.newArrayList();
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grouping_set",229, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //where_clause_without_null ::= KW_WHERE expr 
    java_cup.runtime.Symbol case598(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("where_clause_without_null",101, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //where_clause ::= KW_WHERE expr 
    java_cup.runtime.Symbol case597(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		 RESULT = e; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("where_clause",100, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //where_clause ::= 
    java_cup.runtime.Symbol case596(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("where_clause",100, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_list ::= expr_list COMMA expr 
    java_cup.runtime.Symbol case595(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<Expr> list = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    list.add(e);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_list",85, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_list ::= expr 
    java_cup.runtime.Symbol case594(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    ArrayList<Expr> list = new ArrayList<Expr>();
    list.add(e);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_list",85, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_list ::= ident_list COMMA ident 
    java_cup.runtime.Symbol case593(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<String> list = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int identleft = CUP$SqlParser$stack.peek().left;
		int identright = CUP$SqlParser$stack.peek().right;
		String ident = (String) CUP$SqlParser$stack.peek().value;
		
      list.add(ident);
      RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_list",93, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_list ::= ident 
    java_cup.runtime.Symbol case592(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int identleft = CUP$SqlParser$stack.peek().left;
		int identright = CUP$SqlParser$stack.peek().right;
		String ident = (String) CUP$SqlParser$stack.peek().value;
		
      ArrayList<String> list = new ArrayList<String>();
      list.add(ident);
      RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_list",93, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_sort_hints ::= 
    java_cup.runtime.Symbol case591(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_sort_hints",146, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_sort_hints ::= LBRACKET ident_list RBRACKET 
    java_cup.runtime.Symbol case590(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> l = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = l; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_sort_hints",146, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_plan_hints ::= 
    java_cup.runtime.Symbol case589(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_plan_hints",145, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_plan_hints ::= LBRACKET ident_list RBRACKET 
    java_cup.runtime.Symbol case588(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> l = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_plan_hints",145, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_plan_hints ::= COMMENTED_PLAN_HINT_START ident_list COMMENTED_PLAN_HINT_END 
    java_cup.runtime.Symbol case587(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> l = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_plan_hints",145, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_plan_hints ::= COMMENTED_PLAN_HINTS 
    java_cup.runtime.Symbol case586(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
        ArrayList<String> hints = Lists.newArrayList();
        String[] tokens = l.split(",");
        for (String token: tokens) {
            String trimmedToken = token.trim();
            if (trimmedToken.length() > 0) {
                hints.add(trimmedToken);
            }
        }
        RESULT = hints;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_plan_hints",145, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_outer ::= 
    java_cup.runtime.Symbol case585(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_outer",48, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_outer ::= KW_OUTER 
    java_cup.runtime.Symbol case584(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_outer",48, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_inner ::= 
    java_cup.runtime.Symbol case583(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_inner",47, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_inner ::= KW_INNER 
    java_cup.runtime.Symbol case582(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_inner",47, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_CROSS KW_JOIN 
    java_cup.runtime.Symbol case581(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.CROSS_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_RIGHT KW_ANTI KW_JOIN 
    java_cup.runtime.Symbol case580(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.RIGHT_ANTI_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_LEFT KW_ANTI KW_JOIN 
    java_cup.runtime.Symbol case579(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.LEFT_ANTI_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_RIGHT KW_SEMI KW_JOIN 
    java_cup.runtime.Symbol case578(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.RIGHT_SEMI_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_LEFT KW_SEMI KW_JOIN 
    java_cup.runtime.Symbol case577(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.LEFT_SEMI_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_FULL opt_outer KW_JOIN 
    java_cup.runtime.Symbol case576(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.FULL_OUTER_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_RIGHT opt_outer KW_JOIN 
    java_cup.runtime.Symbol case575(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.RIGHT_OUTER_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_MERGE KW_JOIN 
    java_cup.runtime.Symbol case574(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.MERGE_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= KW_LEFT opt_outer KW_JOIN 
    java_cup.runtime.Symbol case573(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.LEFT_OUTER_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //join_operator ::= opt_inner KW_JOIN 
    java_cup.runtime.Symbol case572(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      JoinOperator RESULT =null;/*3*/
		 RESULT = JoinOperator.INNER_JOIN; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("join_operator",144, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_TEMPORARY KW_PARTITION ident 
    java_cup.runtime.Symbol case571(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partNameleft = CUP$SqlParser$stack.peek().left;
		int partNameright = CUP$SqlParser$stack.peek().right;
		String partName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new PartitionNames(true, Lists.newArrayList(partName));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_PARTITION ident 
    java_cup.runtime.Symbol case570(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partNameleft = CUP$SqlParser$stack.peek().left;
		int partNameright = CUP$SqlParser$stack.peek().right;
		String partName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new PartitionNames(false, Lists.newArrayList(partName));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_TEMPORARY KW_PARTITIONS LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case569(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> partitions = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new PartitionNames(true, partitions);  
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_PARTITIONS LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case568(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> partitions = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new PartitionNames(false, partitions);  
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_TEMPORARY KW_PARTITION LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case567(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> partitions = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new PartitionNames(true, partitions);  
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_names ::= KW_PARTITION LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case566(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> partitions = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new PartitionNames(false, partitions);  
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_names",95, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition_names ::= partition_names 
    java_cup.runtime.Symbol case565(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		int partitionNamesleft = CUP$SqlParser$stack.peek().left;
		int partitionNamesright = CUP$SqlParser$stack.peek().right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.peek().value;
		
        RESULT = partitionNames;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition_names",94, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition_names ::= 
    java_cup.runtime.Symbol case564(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionNames RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition_names",94, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_table_alias ::= EQUAL ident 
    java_cup.runtime.Symbol case563(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.peek().left;
		int aliasright = CUP$SqlParser$stack.peek().right;
		String alias = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = alias;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_table_alias",92, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_table_alias ::= KW_AS ident 
    java_cup.runtime.Symbol case562(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.peek().left;
		int aliasright = CUP$SqlParser$stack.peek().right;
		String alias = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = alias;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_table_alias",92, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_table_alias ::= ident 
    java_cup.runtime.Symbol case561(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.peek().left;
		int aliasright = CUP$SqlParser$stack.peek().right;
		String alias = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = alias;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_table_alias",92, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_table_alias ::= 
    java_cup.runtime.Symbol case560(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_table_alias",92, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_common_hints ::= 
    java_cup.runtime.Symbol case559(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_common_hints",150, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_common_hints ::= LBRACKET ident_list RBRACKET 
    java_cup.runtime.Symbol case558(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> l = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_common_hints",150, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_common_hints ::= COMMENTED_PLAN_HINT_START ident_list COMMENTED_PLAN_HINT_END 
    java_cup.runtime.Symbol case557(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<String> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> l = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_common_hints",150, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //base_table_ref ::= table_name opt_partition_names opt_table_alias opt_common_hints 
    java_cup.runtime.Symbol case556(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TableRef RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableName name = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int partitionNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int partitionNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int aliasleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int aliasright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String alias = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int commonHintsleft = CUP$SqlParser$stack.peek().left;
		int commonHintsright = CUP$SqlParser$stack.peek().right;
		ArrayList<String> commonHints = (ArrayList<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new TableRef(name, alias, partitionNames, commonHints);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("base_table_ref",138, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //base_table_ref_list ::= base_table_ref_list COMMA base_table_ref 
    java_cup.runtime.Symbol case555(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<TableRef> list = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tblleft = CUP$SqlParser$stack.peek().left;
		int tblright = CUP$SqlParser$stack.peek().right;
		TableRef tbl = (TableRef) CUP$SqlParser$stack.peek().value;
		
    list.add(tbl);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("base_table_ref_list",135, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //base_table_ref_list ::= base_table_ref 
    java_cup.runtime.Symbol case554(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.peek().left;
		int tblright = CUP$SqlParser$stack.peek().right;
		TableRef tbl = (TableRef) CUP$SqlParser$stack.peek().value;
		
    ArrayList<TableRef> list = new ArrayList<TableRef>();
    list.add(tbl);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("base_table_ref_list",135, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //inline_view_ref ::= LPAREN query_stmt RPAREN opt_table_alias 
    java_cup.runtime.Symbol case553(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      InlineViewRef RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int aliasleft = CUP$SqlParser$stack.peek().left;
		int aliasright = CUP$SqlParser$stack.peek().right;
		String alias = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new InlineViewRef(alias, query);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("inline_view_ref",143, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref ::= inline_view_ref 
    java_cup.runtime.Symbol case552(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TableRef RESULT =null;/*3*/
		int sleft = CUP$SqlParser$stack.peek().left;
		int sright = CUP$SqlParser$stack.peek().right;
		InlineViewRef s = (InlineViewRef) CUP$SqlParser$stack.peek().value;
		 RESULT = s; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref",137, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref ::= base_table_ref 
    java_cup.runtime.Symbol case551(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TableRef RESULT =null;/*3*/
		int bleft = CUP$SqlParser$stack.peek().left;
		int bright = CUP$SqlParser$stack.peek().right;
		TableRef b = (TableRef) CUP$SqlParser$stack.peek().value;
		 RESULT = b; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref",137, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints KW_USING LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case550(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8).right;
		ArrayList<TableRef> list = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		JoinOperator op = (JoinOperator) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int hintsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int hintsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		ArrayList<String> hints = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		TableRef table = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int hleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int hright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<String> h = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int colNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> colNames = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    table.setJoinOp((JoinOperator) op);
    table.setJoinHints(hints);
    table.setUsingClause(colNames);
    table.setSortHints(h);
    list.add(table);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref_list",134, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints KW_ON expr 
    java_cup.runtime.Symbol case549(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		ArrayList<TableRef> list = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		JoinOperator op = (JoinOperator) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int hintsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int hintsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<String> hints = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableRef table = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int hleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int hright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<String> h = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int eleft = CUP$SqlParser$stack.peek().left;
		int eright = CUP$SqlParser$stack.peek().right;
		Expr e = (Expr) CUP$SqlParser$stack.peek().value;
		
    table.setJoinOp((JoinOperator) op);
    table.setJoinHints(hints);
    table.setOnClause(e);
    table.setSortHints(h);
    list.add(table);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref_list",134, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref_list ::= table_ref_list join_operator opt_plan_hints table_ref opt_sort_hints 
    java_cup.runtime.Symbol case548(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<TableRef> list = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		JoinOperator op = (JoinOperator) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int hintsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int hintsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<String> hints = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableRef table = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hleft = CUP$SqlParser$stack.peek().left;
		int hright = CUP$SqlParser$stack.peek().right;
		ArrayList<String> h = (ArrayList<String>) CUP$SqlParser$stack.peek().value;
		
    table.setJoinOp((JoinOperator) op);
    table.setJoinHints(hints);
    table.setSortHints(h);
    list.add(table);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref_list",134, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref_list ::= table_ref_list COMMA table_ref opt_sort_hints 
    java_cup.runtime.Symbol case547(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<TableRef> list = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableRef table = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hleft = CUP$SqlParser$stack.peek().left;
		int hright = CUP$SqlParser$stack.peek().right;
		ArrayList<String> h = (ArrayList<String>) CUP$SqlParser$stack.peek().value;
		
    table.setSortHints(h);
    list.add(table);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref_list",134, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_ref_list ::= table_ref opt_sort_hints 
    java_cup.runtime.Symbol case546(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<TableRef> RESULT =null;/*3*/
		int tleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableRef t = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hleft = CUP$SqlParser$stack.peek().left;
		int hright = CUP$SqlParser$stack.peek().right;
		ArrayList<String> h = (ArrayList<String>) CUP$SqlParser$stack.peek().value;
		
    ArrayList<TableRef> list = new ArrayList<TableRef>();
    t.setSortHints(h);
    list.add(t);
    RESULT = list;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_ref_list",134, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //from_clause ::= KW_FROM table_ref_list 
    java_cup.runtime.Symbol case545(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FromClause RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		ArrayList<TableRef> l = (ArrayList<TableRef>) CUP$SqlParser$stack.peek().value;
		 RESULT = new FromClause(l); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("from_clause",136, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_function_name ::= type_func_name_keyword 
    java_cup.runtime.Symbol case544(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_function_name",242, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //type_function_name ::= ident 
    java_cup.runtime.Symbol case543(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = id; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("type_function_name",242, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_name ::= ident DOT type_function_name 
    java_cup.runtime.Symbol case542(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionName RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int fnleft = CUP$SqlParser$stack.peek().left;
		int fnright = CUP$SqlParser$stack.peek().right;
		String fn = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new FunctionName(db, fn); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_name",99, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //function_name ::= type_function_name 
    java_cup.runtime.Symbol case541(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      FunctionName RESULT =null;/*3*/
		int fnleft = CUP$SqlParser$stack.peek().left;
		int fnright = CUP$SqlParser$stack.peek().right;
		String fn = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new FunctionName(null, fn); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("function_name",99, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_name ::= ident DOT ident 
    java_cup.runtime.Symbol case540(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TableName RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tblleft = CUP$SqlParser$stack.peek().left;
		int tblright = CUP$SqlParser$stack.peek().right;
		String tbl = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new TableName(db, tbl); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_name",98, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //table_name ::= ident 
    java_cup.runtime.Symbol case539(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TableName RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.peek().left;
		int tblright = CUP$SqlParser$stack.peek().right;
		String tbl = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = new TableName(null, tbl); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("table_name",98, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //star_expr ::= ident DOT ident DOT STAR 
    java_cup.runtime.Symbol case538(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectListItem RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String tbl = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        RESULT = SelectListItem.createStarItem(new TableName(db, tbl));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("star_expr",78, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //star_expr ::= ident DOT STAR 
    java_cup.runtime.Symbol case537(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectListItem RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String tbl = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        RESULT = SelectListItem.createStarItem(new TableName(null, tbl));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("star_expr",78, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_alias ::= STRING_LITERAL 
    java_cup.runtime.Symbol case536(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_alias",91, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_alias ::= KW_AS STRING_LITERAL 
    java_cup.runtime.Symbol case535(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		String l = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_alias",91, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_alias ::= ident 
    java_cup.runtime.Symbol case534(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int identleft = CUP$SqlParser$stack.peek().left;
		int identright = CUP$SqlParser$stack.peek().right;
		String ident = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = ident;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_alias",91, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_alias ::= KW_AS ident 
    java_cup.runtime.Symbol case533(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int identleft = CUP$SqlParser$stack.peek().left;
		int identright = CUP$SqlParser$stack.peek().right;
		String ident = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = ident;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_alias",91, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_alias ::= 
    java_cup.runtime.Symbol case532(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_alias",91, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_list_item ::= star_expr 
    java_cup.runtime.Symbol case531(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectListItem RESULT =null;/*3*/
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		SelectListItem expr = (SelectListItem) CUP$SqlParser$stack.peek().value;
		
        RESULT = expr;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_list_item",77, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_list_item ::= expr opt_collate select_alias 
    java_cup.runtime.Symbol case530(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectListItem RESULT =null;/*3*/
		int exprleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int exprright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr expr = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int collateleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int collateright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String collate = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int aliasleft = CUP$SqlParser$stack.peek().left;
		int aliasright = CUP$SqlParser$stack.peek().right;
		String alias = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SelectListItem(expr, alias);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_list_item",77, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_sublist ::= select_list_item 
    java_cup.runtime.Symbol case529(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		SelectListItem item = (SelectListItem) CUP$SqlParser$stack.peek().value;
		
        SelectList list = new SelectList();
        list.addItem(item);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_sublist",76, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_sublist ::= STAR COMMA select_list_item 
    java_cup.runtime.Symbol case528(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		SelectListItem item = (SelectListItem) CUP$SqlParser$stack.peek().value;
		
        SelectList list = new SelectList();
        list.addItem(SelectListItem.createStarItem(null));
        list.addItem(item);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_sublist",76, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_sublist ::= select_sublist COMMA STAR 
    java_cup.runtime.Symbol case527(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		SelectList list = (SelectList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        list.addItem(SelectListItem.createStarItem(null));
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_sublist",76, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_sublist ::= select_sublist COMMA select_list_item 
    java_cup.runtime.Symbol case526(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		SelectList list = (SelectList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		SelectListItem item = (SelectListItem) CUP$SqlParser$stack.peek().value;
		
        list.addItem(item);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_sublist",76, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_list ::= STAR 
    java_cup.runtime.Symbol case525(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		
        SelectList list = new SelectList();
        list.addItem(SelectListItem.createStarItem(null));
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_list",75, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_list ::= select_sublist 
    java_cup.runtime.Symbol case524(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		SelectList list = (SelectList) CUP$SqlParser$stack.peek().value;
		
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_list",75, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_clause ::= KW_SELECT KW_DISTINCT select_list 
    java_cup.runtime.Symbol case523(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		SelectList l = (SelectList) CUP$SqlParser$stack.peek().value;
		
        l.setIsDistinct(true);
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_clause",74, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_clause ::= KW_SELECT KW_ALL select_list 
    java_cup.runtime.Symbol case522(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		SelectList l = (SelectList) CUP$SqlParser$stack.peek().value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_clause",74, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_clause ::= KW_SELECT select_list 
    java_cup.runtime.Symbol case521(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectList RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.peek().left;
		int lright = CUP$SqlParser$stack.peek().right;
		SelectList l = (SelectList) CUP$SqlParser$stack.peek().value;
		
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_clause",74, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_or_default ::= KW_DEFAULT 
    java_cup.runtime.Symbol case520(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		
        RESULT = new DefaultValueExpr();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_or_default",83, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //expr_or_default ::= expr 
    java_cup.runtime.Symbol case519(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = expr;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("expr_or_default",83, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //values ::= values COMMA expr_or_default 
    java_cup.runtime.Symbol case518(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int valueListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int valueListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<Expr> valueList = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		Expr value = (Expr) CUP$SqlParser$stack.peek().value;
		
        valueList.add(value);
        RESULT = valueList;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("values",86, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //values ::= expr_or_default 
    java_cup.runtime.Symbol case517(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		Expr value = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(value);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("values",86, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_values ::= 
    java_cup.runtime.Symbol case516(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		
        RESULT = Lists.newArrayList();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_values",88, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_values ::= values 
    java_cup.runtime.Symbol case515(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int valueListleft = CUP$SqlParser$stack.peek().left;
		int valueListright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> valueList = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
        RESULT = valueList;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_values",88, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //row_value ::= LPAREN opt_values RPAREN 
    java_cup.runtime.Symbol case514(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<Expr> RESULT =null;/*3*/
		int valuesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int valuesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> values = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = values;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("row_value",87, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //value_clause ::= value_clause COMMA row_value 
    java_cup.runtime.Symbol case513(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ValueList RESULT =null;/*3*/
		int valueClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int valueClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ValueList valueClause = (ValueList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> value = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
        valueClause.addRow(value);
        RESULT = valueClause;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("value_clause",44, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //value_clause ::= KW_VALUES row_value 
    java_cup.runtime.Symbol case512(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ValueList RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		ArrayList<Expr> value = (ArrayList<Expr>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ValueList(value);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("value_clause",44, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_stmt ::= value_clause order_by_clause limit_clause 
    java_cup.runtime.Symbol case511(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectStmt RESULT =null;/*3*/
		int valueClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int valueClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ValueList valueClause = (ValueList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
      RESULT = new SelectStmt(valueClause, orderByClause, limitClause);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_stmt",43, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_stmt ::= select_clause from_clause where_clause group_by_clause having_clause order_by_clause limit_clause 
    java_cup.runtime.Symbol case510(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectStmt RESULT =null;/*3*/
		int selectListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int selectListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		SelectList selectList = (SelectList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int fromClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int fromClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		FromClause fromClause = (FromClause) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int wherePredicateleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int wherePredicateright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Expr wherePredicate = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int groupByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int groupByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		GroupByClause groupByClause = (GroupByClause) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int havingPredicateleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int havingPredicateright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Expr havingPredicate = (Expr) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
    RESULT = new SelectStmt(selectList, fromClause, wherePredicate,
                            groupByClause, havingPredicate, orderByClause,
                            limitClause);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_stmt",43, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //select_stmt ::= select_clause limit_clause 
    java_cup.runtime.Symbol case509(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SelectStmt RESULT =null;/*3*/
		int selectListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int selectListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SelectList selectList = (SelectList) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		 RESULT = new SelectStmt(selectList, null, null, null, null, null, limitClause); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("select_stmt",43, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_expr_or_default ::= expr 
    java_cup.runtime.Symbol case508(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = expr;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_expr_or_default",84, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_expr_or_default ::= KW_ALL 
    java_cup.runtime.Symbol case507(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		
        RESULT = new StringLiteral("ALL");
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_expr_or_default",84, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_expr_or_default ::= KW_ON 
    java_cup.runtime.Symbol case506(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		
        RESULT = new StringLiteral("ON");
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_expr_or_default",84, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_expr_or_default ::= KW_DEFAULT 
    java_cup.runtime.Symbol case505(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Expr RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_expr_or_default",84, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //isolation_types ::= KW_SERIALIZABLE 
    java_cup.runtime.Symbol case504(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("isolation_types",59, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //isolation_types ::= KW_REPEATABLE KW_READ 
    java_cup.runtime.Symbol case503(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("isolation_types",59, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //isolation_types ::= KW_READ KW_COMMITTED 
    java_cup.runtime.Symbol case502(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("isolation_types",59, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //isolation_types ::= KW_READ KW_UNCOMMITTED 
    java_cup.runtime.Symbol case501(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("isolation_types",59, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //isolation_level ::= KW_ISOLATION KW_LEVEL isolation_types 
    java_cup.runtime.Symbol case500(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("isolation_level",57, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_access_mode ::= KW_READ KW_WRITE 
    java_cup.runtime.Symbol case499(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_access_mode",58, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_access_mode ::= KW_READ KW_ONLY 
    java_cup.runtime.Symbol case498(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_access_mode",58, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_characteristics ::= isolation_level COMMA transaction_access_mode 
    java_cup.runtime.Symbol case497(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_characteristics",56, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_characteristics ::= transaction_access_mode COMMA isolation_level 
    java_cup.runtime.Symbol case496(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_characteristics",56, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_characteristics ::= isolation_level 
    java_cup.runtime.Symbol case495(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_characteristics",56, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //transaction_characteristics ::= transaction_access_mode 
    java_cup.runtime.Symbol case494(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("transaction_characteristics",56, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //equal ::= SET_VAR 
    java_cup.runtime.Symbol case493(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("equal",55, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //equal ::= EQUAL 
    java_cup.runtime.Symbol case492(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("equal",55, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //var_ident_type ::= KW_SESSION DOT 
    java_cup.runtime.Symbol case491(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.SESSION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("var_ident_type",153, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //var_ident_type ::= KW_LOCAL DOT 
    java_cup.runtime.Symbol case490(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.SESSION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("var_ident_type",153, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //var_ident_type ::= KW_GLOBAL DOT 
    java_cup.runtime.Symbol case489(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.GLOBAL;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("var_ident_type",153, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_var_type ::= KW_SESSION 
    java_cup.runtime.Symbol case488(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		 RESULT = SetType.SESSION; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_var_type",152, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_var_type ::= KW_LOCAL 
    java_cup.runtime.Symbol case487(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		 RESULT = SetType.SESSION; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_var_type",152, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_var_type ::= KW_GLOBAL 
    java_cup.runtime.Symbol case486(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		 RESULT = SetType.GLOBAL; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_var_type",152, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_var_type ::= 
    java_cup.runtime.Symbol case485(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		 RESULT = SetType.DEFAULT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_var_type",152, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_type ::= KW_SESSION 
    java_cup.runtime.Symbol case484(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.SESSION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_type",151, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_type ::= KW_LOCAL 
    java_cup.runtime.Symbol case483(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.SESSION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_type",151, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_type ::= KW_GLOBAL 
    java_cup.runtime.Symbol case482(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetType RESULT =null;/*3*/
		
        RESULT = SetType.GLOBAL;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_type",151, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //text_or_password ::= KW_PASSWORD LPAREN STRING_LITERAL RPAREN 
    java_cup.runtime.Symbol case481(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int passwdleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int passwdright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String passwd = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        // This is plain text
        RESULT = new String(MysqlPassword.makeScrambledPassword(passwd));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("text_or_password",236, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //text_or_password ::= STRING_LITERAL 
    java_cup.runtime.Symbol case480(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int textleft = CUP$SqlParser$stack.peek().left;
		int textright = CUP$SqlParser$stack.peek().right;
		String text = (String) CUP$SqlParser$stack.peek().value;
		
        // This is hashed text
        RESULT = text;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("text_or_password",236, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //variable_name ::= ident 
    java_cup.runtime.Symbol case479(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		String name = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = name;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("variable_name",235, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= KW_PASSWORD KW_FOR user_identity equal text_or_password 
    java_cup.runtime.Symbol case478(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int userIdleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int userIdright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int passwdleft = CUP$SqlParser$stack.peek().left;
		int passwdright = CUP$SqlParser$stack.peek().right;
		String passwd = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetPassVar(userId, passwd);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= KW_PASSWORD equal text_or_password 
    java_cup.runtime.Symbol case477(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int passwdleft = CUP$SqlParser$stack.peek().left;
		int passwdright = CUP$SqlParser$stack.peek().right;
		String passwd = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetPassVar(null, passwd);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= KW_NAMES charset_name_or_default opt_collate 
    java_cup.runtime.Symbol case476(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int charsetleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int charsetright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String charset = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int collateleft = CUP$SqlParser$stack.peek().left;
		int collateright = CUP$SqlParser$stack.peek().right;
		String collate = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetNamesVar(charset, collate);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= KW_NAMES equal expr 
    java_cup.runtime.Symbol case475(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		
        parser.parseError("names", SqlParserSymbols.KW_NAMES);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= charset old_or_new_charset_name_or_default 
    java_cup.runtime.Symbol case474(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int charsetleft = CUP$SqlParser$stack.peek().left;
		int charsetright = CUP$SqlParser$stack.peek().right;
		String charset = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetNamesVar(charset);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= AT AT var_ident_type variable_name equal set_expr_or_default 
    java_cup.runtime.Symbol case473(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		SetType type = (SetType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int variableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int variableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String variable = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetVar(type, variable, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= AT AT variable_name equal set_expr_or_default 
    java_cup.runtime.Symbol case472(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int variableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int variableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String variable = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetVar(variable, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= AT ident_or_text equal literal 
    java_cup.runtime.Symbol case471(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int varleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int varright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String var = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		LiteralExpr expr = (LiteralExpr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetVar(var, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_no_option_type ::= variable_name equal set_expr_or_default 
    java_cup.runtime.Symbol case470(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int variableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int variableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String variable = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetVar(variable, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_no_option_type",156, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_follow_option_type ::= variable_name equal set_expr_or_default 
    java_cup.runtime.Symbol case469(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int variableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int variableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String variable = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetVar(variable, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_follow_option_type",155, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value ::= option_value_no_option_type 
    java_cup.runtime.Symbol case468(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int varleft = CUP$SqlParser$stack.peek().left;
		int varright = CUP$SqlParser$stack.peek().right;
		SetVar var = (SetVar) CUP$SqlParser$stack.peek().value;
		
        RESULT = var;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value",154, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value ::= option_type option_value_follow_option_type 
    java_cup.runtime.Symbol case467(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SetType type = (SetType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int varleft = CUP$SqlParser$stack.peek().left;
		int varright = CUP$SqlParser$stack.peek().right;
		SetVar var = (SetVar) CUP$SqlParser$stack.peek().value;
		
        var.setType(type);
        RESULT = var;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value",154, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_list ::= option_value_list COMMA option_value 
    java_cup.runtime.Symbol case466(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		SetVar item = (SetVar) CUP$SqlParser$stack.peek().value;
		
        list.add(item);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_list",158, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_list ::= option_value 
    java_cup.runtime.Symbol case465(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int varleft = CUP$SqlParser$stack.peek().left;
		int varright = CUP$SqlParser$stack.peek().right;
		SetVar var = (SetVar) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(var);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_list",158, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_list_continued ::= COMMA option_value_list 
    java_cup.runtime.Symbol case464(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_list_continued",159, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //option_value_list_continued ::= 
    java_cup.runtime.Symbol case463(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		
        RESULT = Lists.newArrayList();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("option_value_list_continued",159, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //start_option_value_list_following_option_type ::= KW_TRANSACTION transaction_characteristics 
    java_cup.runtime.Symbol case462(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		
        RESULT = Lists.newArrayList((SetVar) new SetTransaction());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("start_option_value_list_following_option_type",161, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //start_option_value_list_following_option_type ::= option_value_follow_option_type option_value_list_continued 
    java_cup.runtime.Symbol case461(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int varleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int varright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SetVar var = (SetVar) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        list.add(var);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("start_option_value_list_following_option_type",161, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //start_option_value_list ::= option_type start_option_value_list_following_option_type 
    java_cup.runtime.Symbol case460(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SetType type = (SetType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        if (list == null || list.isEmpty()) {
        } else {
            list.get(0).setType(type);
        }
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("start_option_value_list",160, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //start_option_value_list ::= KW_TRANSACTION transaction_characteristics 
    java_cup.runtime.Symbol case459(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		
        RESULT = Lists.newArrayList((SetVar) new SetTransaction());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("start_option_value_list",160, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //start_option_value_list ::= option_value_no_option_type option_value_list_continued 
    java_cup.runtime.Symbol case458(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int valueright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SetVar value = (SetVar) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        if (list == null) {
            list = Lists.newArrayList(value);
        } else {
            list.add(value);
        }
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("start_option_value_list",160, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_property ::= STRING_LITERAL equal KW_NULL 
    java_cup.runtime.Symbol case457(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int keyleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int keyright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String key = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        RESULT = new SetUserPropertyVar(key, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_property",157, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_property ::= STRING_LITERAL equal STRING_LITERAL 
    java_cup.runtime.Symbol case456(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SetVar RESULT =null;/*3*/
		int keyleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int keyright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String key = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		String value = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetUserPropertyVar(key, value);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_property",157, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_property_list ::= user_property_list COMMA user_property 
    java_cup.runtime.Symbol case455(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int propertyleft = CUP$SqlParser$stack.peek().left;
		int propertyright = CUP$SqlParser$stack.peek().right;
		SetVar property = (SetVar) CUP$SqlParser$stack.peek().value;
		
        list.add(property);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_property_list",162, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_property_list ::= user_property 
    java_cup.runtime.Symbol case454(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetVar> RESULT =null;/*3*/
		int propertyleft = CUP$SqlParser$stack.peek().left;
		int propertyright = CUP$SqlParser$stack.peek().right;
		SetVar property = (SetVar) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(property);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_property_list",162, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_stmt ::= KW_SET KW_PROPERTY opt_user user_property_list 
    java_cup.runtime.Symbol case453(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int userright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String user = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int property_listleft = CUP$SqlParser$stack.peek().left;
		int property_listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> property_list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetUserPropertyStmt(user, property_list);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_stmt",21, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_stmt ::= KW_SET start_option_value_list 
    java_cup.runtime.Symbol case452(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SetVar> list = (List<SetVar>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SetStmt(list);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_stmt",21, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //kill_stmt ::= KW_KILL KW_QUERY INTEGER_LITERAL 
    java_cup.runtime.Symbol case451(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		Long value = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = new KillStmt(false, value.longValue());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("kill_stmt",15, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //kill_stmt ::= KW_KILL KW_CONNECTION INTEGER_LITERAL 
    java_cup.runtime.Symbol case450(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		Long value = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = new KillStmt(true, value.longValue());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("kill_stmt",15, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //kill_stmt ::= KW_KILL INTEGER_LITERAL 
    java_cup.runtime.Symbol case449(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		Long value = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = new KillStmt(true, value.longValue());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("kill_stmt",15, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //restore_stmt ::= KW_RESTORE KW_SNAPSHOT job_label KW_FROM ident KW_ON LPAREN base_table_ref_list RPAREN opt_properties 
    java_cup.runtime.Symbol case448(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      RestoreStmt RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int labelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		LabelName label = (LabelName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int repoNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int repoNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String repoName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int tblsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<TableRef> tbls = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RestoreStmt(label, repoName, tbls, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("restore_stmt",73, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //backup_stmt ::= KW_BACKUP KW_SNAPSHOT job_label KW_TO ident KW_ON LPAREN base_table_ref_list RPAREN opt_properties 
    java_cup.runtime.Symbol case447(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      BackupStmt RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int labelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		LabelName label = (LabelName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int repoNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int repoNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String repoName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int tblsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<TableRef> tbls = (ArrayList<TableRef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new BackupStmt(label, repoName, tbls, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("backup_stmt",72, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //insert_source ::= query_stmt 
    java_cup.runtime.Symbol case446(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      InsertSource RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
        RESULT = new InsertSource(query);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("insert_source",71, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_label ::= KW_WITH KW_LABEL ident 
    java_cup.runtime.Symbol case445(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.peek().left;
		int labelright = CUP$SqlParser$stack.peek().right;
		String label = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = label;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_label",191, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_label ::= 
    java_cup.runtime.Symbol case444(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_label",191, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //insert_target ::= table_name opt_partition_names 
    java_cup.runtime.Symbol case443(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      InsertTarget RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableName tbl = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int partitionNamesleft = CUP$SqlParser$stack.peek().left;
		int partitionNamesright = CUP$SqlParser$stack.peek().right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.peek().value;
		
        RESULT = new InsertTarget(tbl, partitionNames);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("insert_target",70, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //insert_stmt ::= KW_INSERT KW_INTO insert_target opt_with_label opt_col_list opt_plan_hints insert_source 
    java_cup.runtime.Symbol case442(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      InsertStmt RESULT =null;/*3*/
		int targetleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int targetright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		InsertTarget target = (InsertTarget) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int labelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int labelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String label = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<String> cols = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int hintsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int hintsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> hints = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int sourceleft = CUP$SqlParser$stack.peek().left;
		int sourceright = CUP$SqlParser$stack.peek().right;
		InsertSource source = (InsertSource) CUP$SqlParser$stack.peek().value;
		
        RESULT = new InsertStmt(target, label, cols, source, hints);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("insert_stmt",69, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //use_stmt ::= KW_USE ident 
    java_cup.runtime.Symbol case441(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UseStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("use_stmt",14, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //enter_stmt ::= KW_ENTER ident 
    java_cup.runtime.Symbol case440(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int clusterleft = CUP$SqlParser$stack.peek().left;
		int clusterright = CUP$SqlParser$stack.peek().right;
		String cluster = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new EnterStmt(cluster);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("enter_stmt",28, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_set_qualifier ::= KW_ALL 
    java_cup.runtime.Symbol case439(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Qualifier RESULT =null;/*3*/
		 RESULT = Qualifier.ALL; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_set_qualifier",148, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_set_qualifier ::= KW_DISTINCT 
    java_cup.runtime.Symbol case438(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Qualifier RESULT =null;/*3*/
		 RESULT = Qualifier.DISTINCT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_set_qualifier",148, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_set_qualifier ::= 
    java_cup.runtime.Symbol case437(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Qualifier RESULT =null;/*3*/
		 RESULT = Qualifier.DISTINCT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_set_qualifier",148, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_op ::= KW_MINUS 
    java_cup.runtime.Symbol case436(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Operation RESULT =null;/*3*/
		 RESULT = Operation.EXCEPT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_op",149, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_op ::= KW_EXCEPT 
    java_cup.runtime.Symbol case435(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Operation RESULT =null;/*3*/
		 RESULT = Operation.EXCEPT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_op",149, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_op ::= KW_INTERSECT 
    java_cup.runtime.Symbol case434(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Operation RESULT =null;/*3*/
		 RESULT = Operation.INTERSECT; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_op",149, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_op ::= KW_UNION 
    java_cup.runtime.Symbol case433(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Operation RESULT =null;/*3*/
		 RESULT = Operation.UNION; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_op",149, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operand_list ::= set_operand_list set_op opt_set_qualifier set_operand 
    java_cup.runtime.Symbol case432(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetOperand> RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int opleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int opright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Operation op = (Operation) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int qualifierleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int qualifierright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Qualifier qualifier = (Qualifier) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int operandleft = CUP$SqlParser$stack.peek().left;
		int operandright = CUP$SqlParser$stack.peek().right;
		QueryStmt operand = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
    operands.add(new SetOperand(operand, op, qualifier));
    RESULT = operands;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operand_list",67, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operand_list ::= set_operand 
    java_cup.runtime.Symbol case431(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SetOperand> RESULT =null;/*3*/
		int operandleft = CUP$SqlParser$stack.peek().left;
		int operandright = CUP$SqlParser$stack.peek().right;
		QueryStmt operand = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
    List<SetOperand> operands = new ArrayList<SetOperand>();
    operands.add(new SetOperand(operand, null, null));
    RESULT = operands;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operand_list",67, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operand ::= LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case430(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = query;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operand",66, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operand ::= select_stmt 
    java_cup.runtime.Symbol case429(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int selectleft = CUP$SqlParser$stack.peek().left;
		int selectright = CUP$SqlParser$stack.peek().right;
		SelectStmt select = (SelectStmt) CUP$SqlParser$stack.peek().value;
		
    RESULT = select;
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operand",66, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
    java_cup.runtime.Symbol case428(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int limitleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int limitright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long limit = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int offsetleft = CUP$SqlParser$stack.peek().left;
		int offsetright = CUP$SqlParser$stack.peek().right;
		Long offset = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("order", SqlParserSymbols.KW_ORDER);
    }
    RESULT = new SetOperationStmt(operands, orderByClause, new LimitElement(offset.longValue(), limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
    java_cup.runtime.Symbol case427(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int offsetleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int offsetright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long offset = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("order", SqlParserSymbols.KW_ORDER);
    }
    RESULT = new SetOperationStmt(operands, orderByClause, new LimitElement(offset.longValue(), limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements KW_LIMIT INTEGER_LITERAL 
    java_cup.runtime.Symbol case426(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("order", SqlParserSymbols.KW_ORDER);
    }
    RESULT = new SetOperationStmt(operands, orderByClause, new LimitElement(limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_ORDER KW_BY order_by_elements 
    java_cup.runtime.Symbol case425(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.peek().left;
		int orderByClauseright = CUP$SqlParser$stack.peek().right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("order", SqlParserSymbols.KW_ORDER);
    }
    RESULT = new SetOperationStmt(operands, orderByClause, LimitElement.NO_LIMIT);
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL KW_OFFSET INTEGER_LITERAL 
    java_cup.runtime.Symbol case424(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int limitleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int limitright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long limit = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int offsetleft = CUP$SqlParser$stack.peek().left;
		int offsetright = CUP$SqlParser$stack.peek().right;
		Long offset = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("limit", SqlParserSymbols.KW_LIMIT);
    }
    RESULT = new SetOperationStmt(operands, null, new LimitElement(offset.longValue(), limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL COMMA INTEGER_LITERAL 
    java_cup.runtime.Symbol case423(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int offsetleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int offsetright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Long offset = (Long) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("limit", SqlParserSymbols.KW_LIMIT);
    }
    RESULT = new SetOperationStmt(operands, null, new LimitElement(offset.longValue(), limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //set_operation_with_order_by_or_limit ::= set_operand_list KW_LIMIT INTEGER_LITERAL 
    java_cup.runtime.Symbol case422(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitleft = CUP$SqlParser$stack.peek().left;
		int limitright = CUP$SqlParser$stack.peek().right;
		Long limit = (Long) CUP$SqlParser$stack.peek().value;
		
    if (operands.size() == 1) {
      parser.parseError("limit", SqlParserSymbols.KW_LIMIT);
    }
    RESULT = new SetOperationStmt(operands, null, new LimitElement(limit.longValue()));
  /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("set_operation_with_order_by_or_limit",68, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def_list ::= with_view_def_list COMMA with_view_def 
    java_cup.runtime.Symbol case421(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<View> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<View> list = (ArrayList<View>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int vleft = CUP$SqlParser$stack.peek().left;
		int vright = CUP$SqlParser$stack.peek().right;
		View v = (View) CUP$SqlParser$stack.peek().value;
		
        list.add(v);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def_list",140, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def_list ::= with_view_def 
    java_cup.runtime.Symbol case420(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<View> RESULT =null;/*3*/
		int vleft = CUP$SqlParser$stack.peek().left;
		int vright = CUP$SqlParser$stack.peek().right;
		View v = (View) CUP$SqlParser$stack.peek().value;
		
        ArrayList<View> list = new ArrayList<View>();
        list.add(v);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def_list",140, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def ::= STRING_LITERAL LPAREN ident_list RPAREN KW_AS LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case419(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      View RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int aliasright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String alias = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int col_namesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int col_namesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		ArrayList<String> col_names = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new View(alias, query, col_names); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def",141, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def ::= ident LPAREN ident_list RPAREN KW_AS LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case418(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      View RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int aliasright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String alias = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int col_namesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int col_namesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		ArrayList<String> col_names = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new View(alias, query, col_names); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def",141, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def ::= STRING_LITERAL KW_AS LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case417(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      View RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int aliasright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String alias = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new View(alias, query, null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def",141, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //with_view_def ::= ident KW_AS LPAREN query_stmt RPAREN 
    java_cup.runtime.Symbol case416(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      View RESULT =null;/*3*/
		int aliasleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int aliasright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String alias = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int queryleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int queryright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = new View(alias, query, null); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("with_view_def",141, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_clause ::= 
    java_cup.runtime.Symbol case415(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      WithClause RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_clause",139, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_with_clause ::= KW_WITH with_view_def_list 
    java_cup.runtime.Symbol case414(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      WithClause RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		ArrayList<View> list = (ArrayList<View>) CUP$SqlParser$stack.peek().value;
		 RESULT = new WithClause(list); /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_with_clause",139, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_outfile ::= KW_INTO KW_OUTFILE STRING_LITERAL opt_file_format opt_properties 
    java_cup.runtime.Symbol case413(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      OutFileClause RESULT =null;/*3*/
		int fileleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int fileright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String file = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int fileFormatleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int fileFormatright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String fileFormat = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new OutFileClause(file, fileFormat, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_outfile",257, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_outfile ::= 
    java_cup.runtime.Symbol case412(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      OutFileClause RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_outfile",257, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //query_stmt ::= opt_with_clause set_operation_with_order_by_or_limit opt_outfile 
    java_cup.runtime.Symbol case411(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int wleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int wright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		WithClause w = (WithClause) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int set_operationleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int set_operationright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		QueryStmt set_operation = (QueryStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int outfileleft = CUP$SqlParser$stack.peek().left;
		int outfileright = CUP$SqlParser$stack.peek().right;
		OutFileClause outfile = (OutFileClause) CUP$SqlParser$stack.peek().value;
		
        set_operation.setWithClause(w);
        set_operation.setOutFileClause(outfile);
        RESULT = set_operation;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("query_stmt",65, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //query_stmt ::= opt_with_clause set_operand_list opt_outfile 
    java_cup.runtime.Symbol case410(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      QueryStmt RESULT =null;/*3*/
		int wleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int wright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		WithClause w = (WithClause) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int operandsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int operandsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<SetOperand> operands = (List<SetOperand>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int outfileleft = CUP$SqlParser$stack.peek().left;
		int outfileright = CUP$SqlParser$stack.peek().right;
		OutFileClause outfile = (OutFileClause) CUP$SqlParser$stack.peek().value;
		
        QueryStmt queryStmt = null;
        if (operands.size() == 1) {
          queryStmt = operands.get(0).getQueryStmt();
        } else {
          queryStmt = new SetOperationStmt(operands, null, LimitElement.NO_LIMIT);
        }
        queryStmt.setWithClause(w);
        queryStmt.setOutFileClause(outfile);
        RESULT = queryStmt;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("query_stmt",65, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //delete_stmt ::= KW_DELETE KW_FROM table_name opt_partition_names where_clause 
    java_cup.runtime.Symbol case409(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		TableName table = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int partitionNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int wherePredicateleft = CUP$SqlParser$stack.peek().left;
		int wherePredicateright = CUP$SqlParser$stack.peek().right;
		Expr wherePredicate = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DeleteStmt(table, partitionNames, wherePredicate);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("delete_stmt",25, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_param ::= KW_RESTORE opt_db 
    java_cup.runtime.Symbol case408(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CancelBackupStmt(db, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_param",24, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_param ::= KW_BACKUP opt_db 
    java_cup.runtime.Symbol case407(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CancelBackupStmt(db, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_param",24, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_param ::= KW_DECOMMISSION KW_BACKEND string_list 
    java_cup.runtime.Symbol case406(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CancelAlterSystemStmt(hostPorts);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_param",24, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_param ::= KW_ALTER KW_TABLE opt_alter_type KW_FROM table_name cancel_rollup_job_id_list 
    java_cup.runtime.Symbol case405(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ShowAlterStmt.AlterType type = (ShowAlterStmt.AlterType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableName table = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<Long> list = (List<Long>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CancelAlterTableStmt(type, table, list);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_param",24, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_param ::= KW_LOAD opt_db opt_wild_where 
    java_cup.runtime.Symbol case404(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new CancelLoadStmt(db, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_param",24, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_rollup_job_id_list ::= LPAREN integer_list RPAREN 
    java_cup.runtime.Symbol case403(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Long> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<Long> list = (List<Long>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_rollup_job_id_list",186, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_rollup_job_id_list ::= 
    java_cup.runtime.Symbol case402(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Long> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_rollup_job_id_list",186, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cancel_stmt ::= KW_CANCEL cancel_param 
    java_cup.runtime.Symbol case401(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = stmt;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cancel_stmt",23, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_command ::= KW_DESC 
    java_cup.runtime.Symbol case400(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_command",45, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_command ::= KW_DESCRIBE 
    java_cup.runtime.Symbol case399(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_command",45, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_stmt ::= describe_command insert_stmt 
    java_cup.runtime.Symbol case398(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		InsertStmt stmt = (InsertStmt) CUP$SqlParser$stack.peek().value;
		
        stmt.getQueryStmt().setIsExplain(true);
        RESULT = stmt;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_stmt",12, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_stmt ::= describe_command query_stmt 
    java_cup.runtime.Symbol case397(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
        query.setIsExplain(true);
        RESULT = query;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_stmt",12, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_stmt ::= describe_command table_name KW_ALL 
    java_cup.runtime.Symbol case396(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableName table = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new DescribeStmt(table, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_stmt",12, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //describe_stmt ::= describe_command table_name 
    java_cup.runtime.Symbol case395(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.peek().left;
		int tableright = CUP$SqlParser$stack.peek().right;
		TableName table = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DescribeStmt(table, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("describe_stmt",12, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_builtin ::= KW_BUILTIN 
    java_cup.runtime.Symbol case394(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_builtin",255, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_builtin ::= 
    java_cup.runtime.Symbol case393(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_builtin",255, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_alter_type ::= KW_COLUMN 
    java_cup.runtime.Symbol case392(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ShowAlterStmt.AlterType RESULT =null;/*3*/
		
        RESULT = ShowAlterStmt.AlterType.COLUMN;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_alter_type",254, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_alter_type ::= KW_ROLLUP 
    java_cup.runtime.Symbol case391(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ShowAlterStmt.AlterType RESULT =null;/*3*/
		
        RESULT = ShowAlterStmt.AlterType.ROLLUP;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_alter_type",254, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_wild_where ::= KW_WHERE expr 
    java_cup.runtime.Symbol case390(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		int whereleft = CUP$SqlParser$stack.peek().left;
		int whereright = CUP$SqlParser$stack.peek().right;
		Expr where = (Expr) CUP$SqlParser$stack.peek().value;
		
        parser.where = where;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_wild_where",52, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_wild_where ::= KW_LIKE STRING_LITERAL 
    java_cup.runtime.Symbol case389(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		int wildleft = CUP$SqlParser$stack.peek().left;
		int wildright = CUP$SqlParser$stack.peek().right;
		String wild = (String) CUP$SqlParser$stack.peek().value;
		
        parser.wild = wild;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_wild_where",52, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_wild_where ::= 
    java_cup.runtime.Symbol case388(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_wild_where",52, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_full ::= KW_FULL 
    java_cup.runtime.Symbol case387(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        parser.isVerbose = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_full",46, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_full ::= 
    java_cup.runtime.Symbol case386(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		
        parser.isVerbose = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_full",46, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //from_or_in ::= KW_IN 
    java_cup.runtime.Symbol case385(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("from_or_in",49, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //from_or_in ::= KW_FROM 
    java_cup.runtime.Symbol case384(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("from_or_in",49, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //procedure_or_function ::= KW_FUNCTION 
    java_cup.runtime.Symbol case383(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("procedure_or_function",246, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //procedure_or_function ::= KW_PROCEDURE 
    java_cup.runtime.Symbol case382(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("procedure_or_function",246, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_storage ::= KW_STORAGE 
    java_cup.runtime.Symbol case381(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_storage",51, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_storage ::= 
    java_cup.runtime.Symbol case380(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_storage",51, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //collation_name_or_default ::= KW_DEFAULT 
    java_cup.runtime.Symbol case379(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("collation_name_or_default",240, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //collation_name_or_default ::= ident_or_text 
    java_cup.runtime.Symbol case378(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("collation_name_or_default",240, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_collate ::= KW_COLLATE collation_name_or_default 
    java_cup.runtime.Symbol case377(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int collateleft = CUP$SqlParser$stack.peek().left;
		int collateright = CUP$SqlParser$stack.peek().right;
		String collate = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = collate;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_collate",239, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_collate ::= 
    java_cup.runtime.Symbol case376(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_collate",239, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_charset_name ::= charset old_or_new_charset_name_or_default 
    java_cup.runtime.Symbol case375(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_charset_name",54, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_charset_name ::= 
    java_cup.runtime.Symbol case374(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_charset_name",54, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //old_or_new_charset_name_or_default ::= KW_DEFAULT 
    java_cup.runtime.Symbol case373(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("old_or_new_charset_name_or_default",238, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //old_or_new_charset_name_or_default ::= ident_or_text 
    java_cup.runtime.Symbol case372(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("old_or_new_charset_name_or_default",238, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //charset_name_or_default ::= KW_DEFAULT 
    java_cup.runtime.Symbol case371(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("charset_name_or_default",237, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //charset_name_or_default ::= ident_or_text 
    java_cup.runtime.Symbol case370(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int idleft = CUP$SqlParser$stack.peek().left;
		int idright = CUP$SqlParser$stack.peek().right;
		String id = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = id;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("charset_name_or_default",237, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //charset ::= KW_CHARSET 
    java_cup.runtime.Symbol case369(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("charset",53, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //charset ::= KW_CHAR KW_SET 
    java_cup.runtime.Symbol case368(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("charset",53, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_db ::= from_or_in ident 
    java_cup.runtime.Symbol case367(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = db;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_db",245, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_db ::= 
    java_cup.runtime.Symbol case366(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_db",245, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keys_or_index ::= KW_INDEXES 
    java_cup.runtime.Symbol case365(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keys_or_index",50, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keys_or_index ::= KW_INDEX 
    java_cup.runtime.Symbol case364(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keys_or_index",50, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keys_or_index ::= KW_KEYS 
    java_cup.runtime.Symbol case363(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keys_or_index",50, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //keys_or_index ::= KW_KEY 
    java_cup.runtime.Symbol case362(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("keys_or_index",50, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_tmp ::= KW_TEMPORARY 
    java_cup.runtime.Symbol case361(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_tmp",256, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_tmp ::= 
    java_cup.runtime.Symbol case360(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_tmp",256, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_TRANSACTION opt_db opt_wild_where 
    java_cup.runtime.Symbol case359(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowTransactionStmt(dbName, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= keys_or_index from_or_in table_name opt_db 
    java_cup.runtime.Symbol case358(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbTblNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbTblNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableName dbTblName = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int dbNameleft = CUP$SqlParser$stack.peek().left;
		int dbNameright = CUP$SqlParser$stack.peek().right;
		String dbName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowIndexStmt(dbName, dbTblName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_FILE opt_db 
    java_cup.runtime.Symbol case357(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.peek().left;
		int dbNameright = CUP$SqlParser$stack.peek().right;
		String dbName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowSmallFilesStmt(dbName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_full opt_builtin KW_FUNCTIONS opt_db opt_wild_where 
    java_cup.runtime.Symbol case356(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isBuiltinleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int isBuiltinright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Boolean isBuiltin = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowFunctionsStmt(dbName, isBuiltin, parser.isVerbose, parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_ROLES 
    java_cup.runtime.Symbol case355(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowRolesStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_GRANTS KW_FOR user_identity 
    java_cup.runtime.Symbol case354(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int userIdentleft = CUP$SqlParser$stack.peek().left;
		int userIdentright = CUP$SqlParser$stack.peek().right;
		UserIdentity userIdent = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowGrantsStmt(userIdent, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_GRANTS 
    java_cup.runtime.Symbol case353(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowGrantsStmt(null, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_ALL KW_GRANTS 
    java_cup.runtime.Symbol case352(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowGrantsStmt(null, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_SNAPSHOT KW_ON ident opt_wild_where 
    java_cup.runtime.Symbol case351(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int repoleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int reporight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String repo = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowSnapshotStmt(repo, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_REPOSITORIES 
    java_cup.runtime.Symbol case350(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
       RESULT = new ShowRepositoriesStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_USER 
    java_cup.runtime.Symbol case349(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowUserStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_FRONTENDS 
    java_cup.runtime.Symbol case348(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowFrontendsStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_BACKENDS 
    java_cup.runtime.Symbol case347(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowBackendsStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_RESOURCES 
    java_cup.runtime.Symbol case346(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowResourcesStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_BROKER 
    java_cup.runtime.Symbol case345(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowBrokerStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_RESTORE opt_db opt_wild_where 
    java_cup.runtime.Symbol case344(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowRestoreStmt(db, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_BACKUP opt_db 
    java_cup.runtime.Symbol case343(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowBackupStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_PROPERTY opt_user opt_wild_where 
    java_cup.runtime.Symbol case342(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int userright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String user = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowUserPropertyStmt(user, parser.wild);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_TABLET KW_FROM table_name opt_partition_names opt_wild_where order_by_clause limit_clause 
    java_cup.runtime.Symbol case341(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbTblNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbTblNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		TableName dbTblName = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int partitionNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int partitionNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowTabletStmt(dbTblName, -1L, partitionNames, parser.where, orderByClause, limitClause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_TABLET INTEGER_LITERAL 
    java_cup.runtime.Symbol case340(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tabletIdleft = CUP$SqlParser$stack.peek().left;
		int tabletIdright = CUP$SqlParser$stack.peek().right;
		Long tabletId = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowTabletStmt(null, tabletId);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_tmp KW_PARTITIONS KW_FROM table_name opt_wild_where order_by_clause limit_clause 
    java_cup.runtime.Symbol case339(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tmpleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int tmpright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		Boolean tmp = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int tblNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableName tblName = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowPartitionsStmt(tblName, parser.where, orderByClause, limitClause, tmp);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_DATA KW_FROM table_name 
    java_cup.runtime.Symbol case338(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbTblNameleft = CUP$SqlParser$stack.peek().left;
		int dbTblNameright = CUP$SqlParser$stack.peek().right;
		TableName dbTblName = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowDataStmt(dbTblName.getDb(), dbTblName.getTbl());
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_DATA 
    java_cup.runtime.Symbol case337(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowDataStmt(null, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_ALTER KW_TABLE opt_alter_type opt_db opt_wild_where order_by_clause limit_clause 
    java_cup.runtime.Symbol case336(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ShowAlterStmt.AlterType type = (ShowAlterStmt.AlterType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowAlterStmt(type, db, parser.where, orderByClause, limitClause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_DELETE opt_db 
    java_cup.runtime.Symbol case335(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowDeleteStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_EXPORT opt_db opt_wild_where order_by_clause limit_clause 
    java_cup.runtime.Symbol case334(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowExportStmt(db, parser.where, orderByClause, limitClause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_LOAD opt_db opt_wild_where order_by_clause limit_clause 
    java_cup.runtime.Symbol case333(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int orderByClauseleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int orderByClauseright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<OrderByElement> orderByClause = (ArrayList<OrderByElement>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowLoadStmt(db, parser.where, orderByClause, limitClause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_LOAD KW_WARNINGS KW_ON STRING_LITERAL 
    java_cup.runtime.Symbol case332(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int urlleft = CUP$SqlParser$stack.peek().left;
		int urlright = CUP$SqlParser$stack.peek().right;
		String url = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowLoadWarningsStmt(null, url, null, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_LOAD KW_WARNINGS opt_db opt_wild_where limit_clause 
    java_cup.runtime.Symbol case331(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int limitClauseleft = CUP$SqlParser$stack.peek().left;
		int limitClauseright = CUP$SqlParser$stack.peek().right;
		LimitElement limitClause = (LimitElement) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowLoadWarningsStmt(db, null, parser.where, limitClause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_ERRORS limit_clause 
    java_cup.runtime.Symbol case330(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowWarningStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_WARNINGS limit_clause 
    java_cup.runtime.Symbol case329(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowWarningStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_COUNT LPAREN STAR RPAREN KW_ERRORS 
    java_cup.runtime.Symbol case328(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        SelectList list = new SelectList();
        list.addItem(new SelectListItem(new IntLiteral((long)0), null));
        RESULT = new SelectStmt(list, null, null, null, null, null, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_COUNT LPAREN STAR RPAREN KW_WARNINGS 
    java_cup.runtime.Symbol case327(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        SelectList list = new SelectList();
        list.addItem(new SelectListItem(new IntLiteral((long)0), null));
        RESULT = new SelectStmt(list, null, null, null, null, null, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_PROC STRING_LITERAL 
    java_cup.runtime.Symbol case326(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int pathleft = CUP$SqlParser$stack.peek().left;
		int pathright = CUP$SqlParser$stack.peek().right;
		String path = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowProcStmt(path);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= charset opt_wild_where 
    java_cup.runtime.Symbol case325(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowCharsetStmt(parser.wild);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_COLLATION opt_wild_where 
    java_cup.runtime.Symbol case324(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowCollationStmt(parser.wild);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_full KW_COLUMNS from_or_in table_name opt_db opt_wild_where 
    java_cup.runtime.Symbol case323(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tableright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		TableName table = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowColumnStmt(table, db, parser.wild, parser.isVerbose, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_DYNAMIC KW_PARTITION KW_TABLES opt_db 
    java_cup.runtime.Symbol case322(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowDynamicPartitionStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_SCHEMAS opt_wild_where 
    java_cup.runtime.Symbol case321(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowDbStmt(parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_DATABASES opt_wild_where 
    java_cup.runtime.Symbol case320(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowDbStmt(parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_MIGRATIONS 
    java_cup.runtime.Symbol case319(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowMigrationsStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_CLUSTERS 
    java_cup.runtime.Symbol case318(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowClusterStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_CREATE KW_SCHEMA ident 
    java_cup.runtime.Symbol case317(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowCreateDbStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_CREATE KW_DATABASE ident 
    java_cup.runtime.Symbol case316(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowCreateDbStmt(db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_CREATE KW_VIEW table_name 
    java_cup.runtime.Symbol case315(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.peek().left;
		int tableright = CUP$SqlParser$stack.peek().right;
		TableName table = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowCreateTableStmt(table, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_CREATE KW_TABLE table_name 
    java_cup.runtime.Symbol case314(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tableleft = CUP$SqlParser$stack.peek().left;
		int tableright = CUP$SqlParser$stack.peek().right;
		TableName table = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowCreateTableStmt(table);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_AUTHORS 
    java_cup.runtime.Symbol case313(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowAuthorStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_storage KW_ENGINES 
    java_cup.runtime.Symbol case312(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowEnginesStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_PLUGINS 
    java_cup.runtime.Symbol case311(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowPluginsStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_EVENTS opt_db opt_wild_where 
    java_cup.runtime.Symbol case310(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowEventsStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_full KW_TRIGGERS opt_db opt_wild_where 
    java_cup.runtime.Symbol case309(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowTriggersStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_var_type KW_STATUS opt_wild_where 
    java_cup.runtime.Symbol case308(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowStatusStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= procedure_or_function KW_STATUS opt_wild_where 
    java_cup.runtime.Symbol case307(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowProcedureStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_full KW_PROCESSLIST 
    java_cup.runtime.Symbol case306(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowProcesslistStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_full KW_TABLES opt_db opt_wild_where 
    java_cup.runtime.Symbol case305(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowTableStmt(db, parser.isVerbose, parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_TABLE KW_STATUS opt_db opt_wild_where 
    java_cup.runtime.Symbol case304(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowTableStatusStmt(db, parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_OPEN KW_TABLES opt_db opt_wild_where 
    java_cup.runtime.Symbol case303(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowOpenTableStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= opt_var_type KW_VARIABLES opt_wild_where 
    java_cup.runtime.Symbol case302(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		SetType type = (SetType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        RESULT = new ShowVariablesStmt(type, parser.wild, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_param ::= KW_WHITELIST 
    java_cup.runtime.Symbol case301(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
		RESULT = new ShowWhiteListStmt();
	/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_param",3, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_stmt ::= KW_SHOW show_param 
    java_cup.runtime.Symbol case300(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = stmt;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_stmt",2, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_external ::= KW_EXTERNAL 
    java_cup.runtime.Symbol case299(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_external",252, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_external ::= 
    java_cup.runtime.Symbol case298(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_external",252, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_if_not_exists ::= KW_IF KW_NOT KW_EXISTS 
    java_cup.runtime.Symbol case297(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_if_not_exists",251, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_if_not_exists ::= 
    java_cup.runtime.Symbol case296(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_if_not_exists",251, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_if_exists ::= KW_IF KW_EXISTS 
    java_cup.runtime.Symbol case295(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_if_exists",250, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_if_exists ::= 
    java_cup.runtime.Symbol case294(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_if_exists",250, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_index_type ::= KW_USING KW_BITMAP 
    java_cup.runtime.Symbol case293(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      IndexDef.IndexType RESULT =null;/*3*/
		
        RESULT = IndexDef.IndexType.BITMAP;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_index_type",253, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_index_type ::= 
    java_cup.runtime.Symbol case292(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      IndexDef.IndexType RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_index_type",253, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_comment ::= KW_COMMENT STRING_LITERAL 
    java_cup.runtime.Symbol case291(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int commentleft = CUP$SqlParser$stack.peek().left;
		int commentright = CUP$SqlParser$stack.peek().right;
		String comment = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = comment;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_comment",247, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_comment ::= 
    java_cup.runtime.Symbol case290(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = "";
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_comment",247, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_is_allow_null ::= KW_NOT KW_NULL 
    java_cup.runtime.Symbol case289(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_is_allow_null",212, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_is_allow_null ::= KW_NULL 
    java_cup.runtime.Symbol case288(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_is_allow_null",212, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_is_allow_null ::= 
    java_cup.runtime.Symbol case287(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_is_allow_null",212, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //index_definition ::= KW_INDEX ident LPAREN ident_list RPAREN opt_index_type opt_comment 
    java_cup.runtime.Symbol case286(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      IndexDef RESULT =null;/*3*/
		int indexNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int indexNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String indexName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<String> cols = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int indexTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int indexTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		IndexDef.IndexType indexType = (IndexDef.IndexType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int commentleft = CUP$SqlParser$stack.peek().left;
		int commentright = CUP$SqlParser$stack.peek().right;
		String comment = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new IndexDef(indexName, cols, indexType, comment);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("index_definition",168, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_definition ::= ident type_def opt_is_key opt_agg_type opt_is_allow_null opt_default_value opt_comment 
    java_cup.runtime.Symbol case285(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnDef RESULT =null;/*3*/
		int columnNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int columnNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		String columnName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int typeDefleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int typeDefright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		TypeDef typeDef = (TypeDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int isKeyleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int isKeyright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Boolean isKey = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int aggTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int aggTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		AggregateType aggType = (AggregateType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int isAllowNullleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int isAllowNullright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Boolean isAllowNull = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int defaultValueleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int defaultValueright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ColumnDef.DefaultValue defaultValue = (ColumnDef.DefaultValue) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int commentleft = CUP$SqlParser$stack.peek().left;
		int commentright = CUP$SqlParser$stack.peek().right;
		String comment = (String) CUP$SqlParser$stack.peek().value;
		
        ColumnDef columnDef = new ColumnDef(columnName, typeDef, isKey, aggType, isAllowNull, defaultValue, comment);
        RESULT = columnDef;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_definition",167, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_is_key ::= KW_KEY 
    java_cup.runtime.Symbol case284(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		int keyleft = CUP$SqlParser$stack.peek().left;
		int keyright = CUP$SqlParser$stack.peek().right;
		String key = (String) CUP$SqlParser$stack.peek().value;
		
		RESULT = true;
	/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_is_key",213, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_is_key ::= 
    java_cup.runtime.Symbol case283(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
		RESULT = false;
	/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_is_key",213, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_default_value ::= KW_DEFAULT KW_NULL 
    java_cup.runtime.Symbol case282(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnDef.DefaultValue RESULT =null;/*3*/
		
        RESULT = ColumnDef.DefaultValue.NULL_DEFAULT_VALUE;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_default_value",249, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_default_value ::= KW_DEFAULT STRING_LITERAL 
    java_cup.runtime.Symbol case281(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnDef.DefaultValue RESULT =null;/*3*/
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		String value = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColumnDef.DefaultValue(true, value);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_default_value",249, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_default_value ::= 
    java_cup.runtime.Symbol case280(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnDef.DefaultValue RESULT =null;/*3*/
		
        RESULT = ColumnDef.DefaultValue.NOT_SET;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_default_value",249, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //index_definition_list ::= index_definition_list COMMA index_definition 
    java_cup.runtime.Symbol case279(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<IndexDef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<IndexDef> list = (ArrayList<IndexDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int indexleft = CUP$SqlParser$stack.peek().left;
		int indexright = CUP$SqlParser$stack.peek().right;
		IndexDef index = (IndexDef) CUP$SqlParser$stack.peek().value;
		
        list.add(index);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("index_definition_list",170, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //index_definition_list ::= index_definition 
    java_cup.runtime.Symbol case278(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<IndexDef> RESULT =null;/*3*/
		int indexleft = CUP$SqlParser$stack.peek().left;
		int indexright = CUP$SqlParser$stack.peek().right;
		IndexDef index = (IndexDef) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList();
        RESULT.add(index);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("index_definition_list",170, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_definition_list ::= column_definition_list COMMA column_definition 
    java_cup.runtime.Symbol case277(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<ColumnDef> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<ColumnDef> list = (ArrayList<ColumnDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int columnleft = CUP$SqlParser$stack.peek().left;
		int columnright = CUP$SqlParser$stack.peek().right;
		ColumnDef column = (ColumnDef) CUP$SqlParser$stack.peek().value;
		
    list.add(column);
    RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_definition_list",169, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_definition_list ::= column_definition 
    java_cup.runtime.Symbol case276(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ArrayList<ColumnDef> RESULT =null;/*3*/
		int columnleft = CUP$SqlParser$stack.peek().left;
		int columnright = CUP$SqlParser$stack.peek().right;
		ColumnDef column = (ColumnDef) CUP$SqlParser$stack.peek().value;
		
    RESULT = Lists.newArrayList();
    RESULT.add(column);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_definition_list",169, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_ext_properties ::= KW_BROKER KW_PROPERTIES LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case275(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		int mapleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int mapright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> map = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = map;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_ext_properties",166, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_ext_properties ::= 
    java_cup.runtime.Symbol case274(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		
    RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_ext_properties",166, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_properties ::= KW_PROPERTIES LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case273(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		int mapleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int mapright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> map = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = map;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_properties",165, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_properties ::= 
    java_cup.runtime.Symbol case272(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		
    RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_properties",165, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //key_value_map ::= key_value_map COMMA STRING_LITERAL EQUAL STRING_LITERAL 
    java_cup.runtime.Symbol case271(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		int mapleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int mapright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Map<String,String> map = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		String value = (String) CUP$SqlParser$stack.peek().value;
		
    map.put(name, value);
    RESULT = map;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("key_value_map",163, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //key_value_map ::= STRING_LITERAL EQUAL STRING_LITERAL 
    java_cup.runtime.Symbol case270(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int valueleft = CUP$SqlParser$stack.peek().left;
		int valueright = CUP$SqlParser$stack.peek().right;
		String value = (String) CUP$SqlParser$stack.peek().value;
		
    RESULT = Maps.newHashMap();
    RESULT.put(name, value);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("key_value_map",163, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_key_value_map ::= LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case269(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		int mapleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int mapright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> map = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    RESULT = map;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_key_value_map",164, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_key_value_map ::= 
    java_cup.runtime.Symbol case268(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Map<String,String> RESULT =null;/*3*/
		
    RESULT = Maps.newHashMap();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_key_value_map",164, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_engine ::= KW_ENGINE EQUAL ident 
    java_cup.runtime.Symbol case267(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int engineNameleft = CUP$SqlParser$stack.peek().left;
		int engineNameright = CUP$SqlParser$stack.peek().right;
		String engineName = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = engineName; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_engine",248, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_engine ::= 
    java_cup.runtime.Symbol case266(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_engine",248, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //fixed_partition_key_desc ::= LBRACKET LPAREN partition_key_list RPAREN COMMA LPAREN partition_key_list RPAREN RPAREN 
    java_cup.runtime.Symbol case265(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionKeyDesc RESULT =null;/*3*/
		int lowerleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int lowerright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		List<PartitionValue> lower = (List<PartitionValue>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int upperleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int upperright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<PartitionValue> upper = (List<PartitionValue>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        RESULT = new PartitionKeyDesc(lower, upper);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("fixed_partition_key_desc",178, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_list ::= KW_MAX_VALUE 
    java_cup.runtime.Symbol case264(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<PartitionValue> RESULT =null;/*3*/
		
        RESULT = Lists.newArrayList(PartitionValue.MAX_VALUE);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_list",179, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_list ::= STRING_LITERAL 
    java_cup.runtime.Symbol case263(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<PartitionValue> RESULT =null;/*3*/
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		String item = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(new PartitionValue(item));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_list",179, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_list ::= partition_key_list COMMA KW_MAX_VALUE 
    java_cup.runtime.Symbol case262(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<PartitionValue> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<PartitionValue> l = (List<PartitionValue>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		
        l.add(PartitionValue.MAX_VALUE);
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_list",179, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_list ::= partition_key_list COMMA STRING_LITERAL 
    java_cup.runtime.Symbol case261(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<PartitionValue> RESULT =null;/*3*/
		int lleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int lright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<PartitionValue> l = (List<PartitionValue>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int itemleft = CUP$SqlParser$stack.peek().left;
		int itemright = CUP$SqlParser$stack.peek().right;
		String item = (String) CUP$SqlParser$stack.peek().value;
		
        l.add(new PartitionValue(item));
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_list",179, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_list ::= 
    java_cup.runtime.Symbol case260(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<PartitionValue> RESULT =null;/*3*/
		
        List<PartitionValue> l = new ArrayList<PartitionValue>();
        RESULT = l;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_list",179, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_desc ::= LPAREN partition_key_list RPAREN 
    java_cup.runtime.Symbol case259(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionKeyDesc RESULT =null;/*3*/
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<PartitionValue> keys = (List<PartitionValue>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new PartitionKeyDesc(keys);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_desc",177, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //partition_key_desc ::= KW_MAX_VALUE 
    java_cup.runtime.Symbol case258(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionKeyDesc RESULT =null;/*3*/
		
        RESULT = PartitionKeyDesc.createMaxKeyDesc();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("partition_key_desc",177, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //single_range_partition_desc ::= KW_PARTITION opt_if_not_exists ident KW_VALUES fixed_partition_key_desc opt_key_value_map 
    java_cup.runtime.Symbol case257(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SingleRangePartitionDesc RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int partNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int partNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String partName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int descleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int descright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		PartitionKeyDesc desc = (PartitionKeyDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SingleRangePartitionDesc(ifNotExists, partName, desc, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("single_range_partition_desc",180, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //single_range_partition_desc ::= KW_PARTITION opt_if_not_exists ident KW_VALUES KW_LESS KW_THAN partition_key_desc opt_key_value_map 
    java_cup.runtime.Symbol case256(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      SingleRangePartitionDesc RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int partNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int partNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String partName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int descleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int descright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		PartitionKeyDesc desc = (PartitionKeyDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new SingleRangePartitionDesc(ifNotExists, partName, desc, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("single_range_partition_desc",180, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //single_range_partition_desc_list ::= single_range_partition_desc 
    java_cup.runtime.Symbol case255(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SingleRangePartitionDesc> RESULT =null;/*3*/
		int descleft = CUP$SqlParser$stack.peek().left;
		int descright = CUP$SqlParser$stack.peek().right;
		SingleRangePartitionDesc desc = (SingleRangePartitionDesc) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(desc);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("single_range_partition_desc_list",182, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //single_range_partition_desc_list ::= single_range_partition_desc_list COMMA single_range_partition_desc 
    java_cup.runtime.Symbol case254(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SingleRangePartitionDesc> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<SingleRangePartitionDesc> list = (List<SingleRangePartitionDesc>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int descleft = CUP$SqlParser$stack.peek().left;
		int descright = CUP$SqlParser$stack.peek().right;
		SingleRangePartitionDesc desc = (SingleRangePartitionDesc) CUP$SqlParser$stack.peek().value;
		
        list.add(desc);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("single_range_partition_desc_list",182, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_single_range_partition_desc_list ::= single_range_partition_desc_list 
    java_cup.runtime.Symbol case253(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SingleRangePartitionDesc> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.peek().left;
		int listright = CUP$SqlParser$stack.peek().right;
		List<SingleRangePartitionDesc> list = (List<SingleRangePartitionDesc>) CUP$SqlParser$stack.peek().value;
		
		RESULT = list;
	/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_single_range_partition_desc_list",181, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_single_range_partition_desc_list ::= 
    java_cup.runtime.Symbol case252(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<SingleRangePartitionDesc> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_single_range_partition_desc_list",181, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_keys ::= KW_AGGREGATE KW_KEY LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case251(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      KeysDesc RESULT =null;/*3*/
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> keys = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new KeysDesc(KeysType.AGG_KEYS, keys);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_keys",176, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_keys ::= KW_UNIQUE KW_KEY LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case250(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      KeysDesc RESULT =null;/*3*/
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> keys = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new KeysDesc(KeysType.UNIQUE_KEYS, keys);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_keys",176, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_keys ::= KW_DUPLICATE KW_KEY LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case249(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      KeysDesc RESULT =null;/*3*/
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> keys = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new KeysDesc(KeysType.DUP_KEYS, keys);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_keys",176, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_keys ::= KW_PRIMARY KW_KEY LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case248(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      KeysDesc RESULT =null;/*3*/
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> keys = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new KeysDesc(KeysType.PRIMARY_KEYS, keys);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_keys",176, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_keys ::= 
    java_cup.runtime.Symbol case247(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      KeysDesc RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_keys",176, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_distribution_number ::= KW_BUCKETS INTEGER_LITERAL 
    java_cup.runtime.Symbol case246(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Integer RESULT =null;/*3*/
		int numDistributionleft = CUP$SqlParser$stack.peek().left;
		int numDistributionright = CUP$SqlParser$stack.peek().right;
		Long numDistribution = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = numDistribution.intValue();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_distribution_number",174, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_distribution_number ::= 
    java_cup.runtime.Symbol case245(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Integer RESULT =null;/*3*/
		
        /* If distribution number is null, default distribution number is 10. */
        RESULT = 10;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_distribution_number",174, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_rollup ::= KW_ROLLUP LPAREN add_rollup_clause_list RPAREN 
    java_cup.runtime.Symbol case244(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<AlterClause> list = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_rollup",223, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_rollup ::= 
    java_cup.runtime.Symbol case243(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		
        RESULT = new ArrayList<>();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_rollup",223, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_distribution ::= KW_DISTRIBUTED KW_BY KW_RANDOM opt_distribution_number 
    java_cup.runtime.Symbol case242(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DistributionDesc RESULT =null;/*3*/
		int numDistributionleft = CUP$SqlParser$stack.peek().left;
		int numDistributionright = CUP$SqlParser$stack.peek().right;
		Integer numDistribution = (Integer) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RandomDistributionDesc(numDistribution);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_distribution",173, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_distribution ::= KW_DISTRIBUTED KW_BY KW_HASH LPAREN ident_list RPAREN opt_distribution_number 
    java_cup.runtime.Symbol case241(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DistributionDesc RESULT =null;/*3*/
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ArrayList<String> columns = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int numDistributionleft = CUP$SqlParser$stack.peek().left;
		int numDistributionright = CUP$SqlParser$stack.peek().right;
		Integer numDistribution = (Integer) CUP$SqlParser$stack.peek().value;
		
        RESULT = new HashDistributionDesc(numDistribution, columns);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_distribution",173, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_distribution ::= 
    java_cup.runtime.Symbol case240(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DistributionDesc RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_distribution",173, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition ::= KW_PARTITION KW_BY KW_RANGE LPAREN ident_list RPAREN LPAREN opt_single_range_partition_desc_list RPAREN 
    java_cup.runtime.Symbol case239(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionDesc RESULT =null;/*3*/
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<String> columns = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<SingleRangePartitionDesc> list = (List<SingleRangePartitionDesc>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new RangePartitionDesc(columns, list);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition",172, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_partition ::= 
    java_cup.runtime.Symbol case238(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      PartitionDesc RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_partition",172, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_BITMAP_UNION 
    java_cup.runtime.Symbol case237(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.BITMAP_UNION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_HLL_UNION 
    java_cup.runtime.Symbol case236(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.HLL_UNION;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_REPLACE_IF_NOT_NULL 
    java_cup.runtime.Symbol case235(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.REPLACE_IF_NOT_NULL;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_REPLACE 
    java_cup.runtime.Symbol case234(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.REPLACE;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_MIN 
    java_cup.runtime.Symbol case233(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.MIN;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_MAX 
    java_cup.runtime.Symbol case232(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.MAX;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= KW_SUM 
    java_cup.runtime.Symbol case231(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		
    RESULT = AggregateType.SUM;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_agg_type ::= 
    java_cup.runtime.Symbol case230(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AggregateType RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_agg_type",171, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //recover_stmt ::= KW_RECOVER KW_PARTITION ident KW_FROM table_name 
    java_cup.runtime.Symbol case229(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int partitionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int partitionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String partitionName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int dbTblNameleft = CUP$SqlParser$stack.peek().left;
		int dbTblNameright = CUP$SqlParser$stack.peek().right;
		TableName dbTblName = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RecoverPartitionStmt(dbTblName, partitionName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("recover_stmt",17, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //recover_stmt ::= KW_RECOVER KW_TABLE table_name 
    java_cup.runtime.Symbol case228(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbTblNameleft = CUP$SqlParser$stack.peek().left;
		int dbTblNameright = CUP$SqlParser$stack.peek().right;
		TableName dbTblName = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RecoverTableStmt(dbTblName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("recover_stmt",17, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //recover_stmt ::= KW_RECOVER KW_DATABASE ident 
    java_cup.runtime.Symbol case227(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.peek().left;
		int dbNameright = CUP$SqlParser$stack.peek().right;
		String dbName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RecoverDbStmt(dbName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("recover_stmt",17, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_RESOURCE ident_or_text 
    java_cup.runtime.Symbol case226(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int resourceNameleft = CUP$SqlParser$stack.peek().left;
		int resourceNameright = CUP$SqlParser$stack.peek().right;
		String resourceName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropResourceStmt(resourceName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_MATERIALIZED KW_VIEW opt_if_exists ident KW_ON table_name 
    java_cup.runtime.Symbol case225(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int mvNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int mvNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String mvName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tableNameleft = CUP$SqlParser$stack.peek().left;
		int tableNameright = CUP$SqlParser$stack.peek().right;
		TableName tableName = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropMaterializedViewStmt(ifExists, mvName, tableName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_INDEX ident KW_ON table_name 
    java_cup.runtime.Symbol case224(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int indexNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int indexNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String indexName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tableNameleft = CUP$SqlParser$stack.peek().left;
		int tableNameright = CUP$SqlParser$stack.peek().right;
		TableName tableName = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterTableStmt(tableName, Lists.newArrayList(new DropIndexClause(indexName, tableName, false)));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_FILE STRING_LITERAL opt_db KW_PROPERTIES LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case223(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int fileNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int fileNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String fileName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new DropFileStmt(fileName, dbName, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_ROLE ident 
    java_cup.runtime.Symbol case222(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropRoleStmt(role);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_REPOSITORY ident 
    java_cup.runtime.Symbol case221(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int repoNameleft = CUP$SqlParser$stack.peek().left;
		int repoNameright = CUP$SqlParser$stack.peek().right;
		String repoName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropRepositoryStmt(repoName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_VIEW opt_if_exists table_name 
    java_cup.runtime.Symbol case220(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		TableName name = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropTableStmt(ifExists, name, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_USER user_identity 
    java_cup.runtime.Symbol case219(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int userIdleft = CUP$SqlParser$stack.peek().left;
		int userIdright = CUP$SqlParser$stack.peek().right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropUserStmt(userId);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_TABLE opt_if_exists table_name 
    java_cup.runtime.Symbol case218(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		TableName name = (TableName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropTableStmt(ifExists, name);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_FUNCTION function_name LPAREN func_args_def RPAREN 
    java_cup.runtime.Symbol case217(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int functionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int functionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		FunctionName functionName = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int argsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int argsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		FunctionArgsDef args = (FunctionArgsDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new DropFunctionStmt(functionName, args);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_CLUSTER opt_if_exists ident 
    java_cup.runtime.Symbol case216(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int clusterleft = CUP$SqlParser$stack.peek().left;
		int clusterright = CUP$SqlParser$stack.peek().right;
		String cluster = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropClusterStmt(ifExists, cluster);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_SCHEMA opt_if_exists ident 
    java_cup.runtime.Symbol case215(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropDbStmt(ifExists, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_stmt ::= KW_DROP KW_DATABASE opt_if_exists ident 
    java_cup.runtime.Symbol case214(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropDbStmt(ifExists, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_stmt",16, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //revoke_stmt ::= KW_REVOKE privilege_list KW_ON KW_RESOURCE resource_pattern KW_FROM KW_ROLE STRING_LITERAL 
    java_cup.runtime.Symbol case213(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int resourcePatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int resourcePatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ResourcePattern resourcePattern = (ResourcePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RevokeStmt(null, role, resourcePattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("revoke_stmt",19, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //revoke_stmt ::= KW_REVOKE privilege_list KW_ON KW_RESOURCE resource_pattern KW_FROM user_identity 
    java_cup.runtime.Symbol case212(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int resourcePatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int resourcePatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ResourcePattern resourcePattern = (ResourcePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int userIdleft = CUP$SqlParser$stack.peek().left;
		int userIdright = CUP$SqlParser$stack.peek().right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RevokeStmt(userId, null, resourcePattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("revoke_stmt",19, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //revoke_stmt ::= KW_REVOKE privilege_list KW_ON tbl_pattern KW_FROM KW_ROLE STRING_LITERAL 
    java_cup.runtime.Symbol case211(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int tblPatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblPatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TablePattern tblPattern = (TablePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RevokeStmt(null, role, tblPattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("revoke_stmt",19, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //revoke_stmt ::= KW_REVOKE privilege_list KW_ON tbl_pattern KW_FROM user_identity 
    java_cup.runtime.Symbol case210(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int tblPatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblPatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		TablePattern tblPattern = (TablePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int userIdleft = CUP$SqlParser$stack.peek().left;
		int userIdright = CUP$SqlParser$stack.peek().right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RevokeStmt(userId, null, tblPattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("revoke_stmt",19, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_or_star ::= ident 
    java_cup.runtime.Symbol case209(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int identleft = CUP$SqlParser$stack.peek().left;
		int identright = CUP$SqlParser$stack.peek().right;
		String ident = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = ident;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_or_star",208, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //ident_or_star ::= STAR 
    java_cup.runtime.Symbol case208(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = "*";
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("ident_or_star",208, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //resource_pattern ::= STRING_LITERAL 
    java_cup.runtime.Symbol case207(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ResourcePattern RESULT =null;/*3*/
		int resourceNameleft = CUP$SqlParser$stack.peek().left;
		int resourceNameright = CUP$SqlParser$stack.peek().right;
		String resourceName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ResourcePattern(resourceName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("resource_pattern",207, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //resource_pattern ::= ident_or_star 
    java_cup.runtime.Symbol case206(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ResourcePattern RESULT =null;/*3*/
		int resourceNameleft = CUP$SqlParser$stack.peek().left;
		int resourceNameright = CUP$SqlParser$stack.peek().right;
		String resourceName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ResourcePattern(resourceName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("resource_pattern",207, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //tbl_pattern ::= ident_or_star DOT ident_or_star 
    java_cup.runtime.Symbol case205(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TablePattern RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tblleft = CUP$SqlParser$stack.peek().left;
		int tblright = CUP$SqlParser$stack.peek().right;
		String tbl = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new TablePattern(db, tbl);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("tbl_pattern",206, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //tbl_pattern ::= ident_or_star 
    java_cup.runtime.Symbol case204(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TablePattern RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new TablePattern(db, "*");
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("tbl_pattern",206, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_stmt ::= KW_GRANT privilege_list KW_ON KW_RESOURCE resource_pattern KW_TO KW_ROLE STRING_LITERAL 
    java_cup.runtime.Symbol case203(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int resourcePatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int resourcePatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ResourcePattern resourcePattern = (ResourcePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new GrantStmt(null, role, resourcePattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_stmt",18, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_stmt ::= KW_GRANT privilege_list KW_ON KW_RESOURCE resource_pattern KW_TO user_identity 
    java_cup.runtime.Symbol case202(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int resourcePatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int resourcePatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ResourcePattern resourcePattern = (ResourcePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int userIdleft = CUP$SqlParser$stack.peek().left;
		int userIdright = CUP$SqlParser$stack.peek().right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new GrantStmt(userId, null, resourcePattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_stmt",18, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_stmt ::= KW_GRANT privilege_list KW_ON tbl_pattern KW_TO KW_ROLE STRING_LITERAL 
    java_cup.runtime.Symbol case201(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int tblPatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblPatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TablePattern tblPattern = (TablePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new GrantStmt(null, role, tblPattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_stmt",18, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_stmt ::= KW_GRANT privilege_list KW_ON tbl_pattern KW_TO user_identity 
    java_cup.runtime.Symbol case200(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int privsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int privsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		List<AccessPrivilege> privs = (List<AccessPrivilege>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int tblPatternleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int tblPatternright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		TablePattern tblPattern = (TablePattern) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int userIdleft = CUP$SqlParser$stack.peek().left;
		int userIdright = CUP$SqlParser$stack.peek().right;
		UserIdentity userId = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        RESULT = new GrantStmt(userId, null, tblPattern, privs);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_stmt",18, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_routine_load_task_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD KW_TASK opt_db opt_wild_where 
    java_cup.runtime.Symbol case199(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ShowRoutineLoadTaskStmt(dbName, parser.where);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_routine_load_task_stmt",11, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_routine_load_stmt ::= KW_SHOW KW_ALL KW_ROUTINE KW_LOAD 
    java_cup.runtime.Symbol case198(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowRoutineLoadStmt(null, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_routine_load_stmt",10, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_routine_load_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD 
    java_cup.runtime.Symbol case197(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new ShowRoutineLoadStmt(null, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_routine_load_stmt",10, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_routine_load_stmt ::= KW_SHOW KW_ALL KW_ROUTINE KW_LOAD KW_FOR job_label 
    java_cup.runtime.Symbol case196(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.peek().left;
		int jobLabelright = CUP$SqlParser$stack.peek().right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowRoutineLoadStmt(jobLabel, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_routine_load_stmt",10, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //show_routine_load_stmt ::= KW_SHOW KW_ROUTINE KW_LOAD KW_FOR job_label 
    java_cup.runtime.Symbol case195(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.peek().left;
		int jobLabelright = CUP$SqlParser$stack.peek().right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ShowRoutineLoadStmt(jobLabel, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("show_routine_load_stmt",10, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stop_routine_load_stmt ::= KW_STOP KW_ROUTINE KW_LOAD KW_FOR job_label 
    java_cup.runtime.Symbol case194(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.peek().left;
		int jobLabelright = CUP$SqlParser$stack.peek().right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new StopRoutineLoadStmt(jobLabel);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stop_routine_load_stmt",9, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //resume_routine_load_stmt ::= KW_RESUME KW_ROUTINE KW_LOAD KW_FOR job_label 
    java_cup.runtime.Symbol case193(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.peek().left;
		int jobLabelright = CUP$SqlParser$stack.peek().right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ResumeRoutineLoadStmt(jobLabel);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("resume_routine_load_stmt",8, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //pause_routine_load_stmt ::= KW_PAUSE KW_ROUTINE KW_LOAD KW_FOR job_label 
    java_cup.runtime.Symbol case192(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.peek().left;
		int jobLabelright = CUP$SqlParser$stack.peek().right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new PauseRoutineLoadStmt(jobLabel);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("pause_routine_load_stmt",7, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_property ::= partition_names 
    java_cup.runtime.Symbol case191(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ParseNode RESULT =null;/*3*/
		int partitionNamesleft = CUP$SqlParser$stack.peek().left;
		int partitionNamesright = CUP$SqlParser$stack.peek().right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.peek().value;
		
        RESULT = partitionNames;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_property",209, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_property ::= import_where_stmt 
    java_cup.runtime.Symbol case190(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ParseNode RESULT =null;/*3*/
		int wherePredicateleft = CUP$SqlParser$stack.peek().left;
		int wherePredicateright = CUP$SqlParser$stack.peek().right;
		StatementBase wherePredicate = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = wherePredicate;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_property",209, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_property ::= import_columns_stmt 
    java_cup.runtime.Symbol case189(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ParseNode RESULT =null;/*3*/
		int columnsInfoleft = CUP$SqlParser$stack.peek().left;
		int columnsInforight = CUP$SqlParser$stack.peek().right;
		StatementBase columnsInfo = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = columnsInfo;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_property",209, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_property ::= column_separator 
    java_cup.runtime.Symbol case188(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ParseNode RESULT =null;/*3*/
		int colSepleft = CUP$SqlParser$stack.peek().left;
		int colSepright = CUP$SqlParser$stack.peek().right;
		ColumnSeparator colSep = (ColumnSeparator) CUP$SqlParser$stack.peek().value;
		
        RESULT = colSep;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_property",209, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_load_property_list ::= opt_load_property_list COMMA load_property 
    java_cup.runtime.Symbol case187(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ParseNode> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<ParseNode> list = (List<ParseNode>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int loadPropertyleft = CUP$SqlParser$stack.peek().left;
		int loadPropertyright = CUP$SqlParser$stack.peek().right;
		ParseNode loadProperty = (ParseNode) CUP$SqlParser$stack.peek().value;
		
        list.add(loadProperty);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_load_property_list",210, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_load_property_list ::= load_property 
    java_cup.runtime.Symbol case186(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ParseNode> RESULT =null;/*3*/
		int loadPropertyleft = CUP$SqlParser$stack.peek().left;
		int loadPropertyright = CUP$SqlParser$stack.peek().right;
		ParseNode loadProperty = (ParseNode) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(loadProperty);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_load_property_list",210, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_load_property_list ::= 
    java_cup.runtime.Symbol case185(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ParseNode> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_load_property_list",210, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_routine_load_stmt ::= KW_CREATE KW_ROUTINE KW_LOAD job_label KW_ON ident opt_load_property_list opt_properties KW_FROM ident LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case184(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int jobLabelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).left;
		int jobLabelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).right;
		LabelName jobLabel = (LabelName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).value;
		int tableNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int tableNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String tableName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int loadPropertyListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int loadPropertyListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		List<ParseNode> loadPropertyList = (List<ParseNode>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int typeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int typeright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String type = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int customPropertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int customPropertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> customProperties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new CreateRoutineLoadStmt(jobLabel, tableName, loadPropertyList, properties, type, customProperties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_routine_load_stmt",6, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //resource_desc ::= KW_WITH KW_RESOURCE ident_or_text LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case183(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ResourceDesc RESULT =null;/*3*/
		int resourceNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int resourceNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String resourceName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		                                                                               
        RESULT = new ResourceDesc(resourceName, properties);                         
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("resource_desc",194, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //resource_desc ::= KW_WITH KW_RESOURCE ident_or_text 
    java_cup.runtime.Symbol case182(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ResourceDesc RESULT =null;/*3*/
		int resourceNameleft = CUP$SqlParser$stack.peek().left;
		int resourceNameright = CUP$SqlParser$stack.peek().right;
		String resourceName = (String) CUP$SqlParser$stack.peek().value;
		                                                                               
        RESULT = new ResourceDesc(resourceName, null);                               
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("resource_desc",194, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_broker ::= KW_WITH KW_BROKER ident_or_text LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case181(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      BrokerDesc RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new BrokerDesc(name, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_broker",193, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_broker ::= KW_WITH KW_BROKER ident_or_text 
    java_cup.runtime.Symbol case180(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      BrokerDesc RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		String name = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new BrokerDesc(name, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_broker",193, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_broker ::= 
    java_cup.runtime.Symbol case179(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      BrokerDesc RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_broker",193, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_system ::= KW_BY ident_or_text 
    java_cup.runtime.Symbol case178(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int systemleft = CUP$SqlParser$stack.peek().left;
		int systemright = CUP$SqlParser$stack.peek().right;
		String system = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = system;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_system",192, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_system ::= 
    java_cup.runtime.Symbol case177(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_system",192, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_mapping_list ::= KW_SET LPAREN expr_list RPAREN 
    java_cup.runtime.Symbol case176(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Expr> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<Expr> list = (ArrayList<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
    	RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_mapping_list",202, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_mapping_list ::= 
    java_cup.runtime.Symbol case175(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<Expr> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_mapping_list",202, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //col_list ::= KW_COLUMNS LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case174(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int colListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> colList = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = colList;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("col_list",196, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //col_with_comment ::= ident opt_comment 
    java_cup.runtime.Symbol case173(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColWithComment RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String col = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int commentleft = CUP$SqlParser$stack.peek().left;
		int commentright = CUP$SqlParser$stack.peek().right;
		String comment = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColWithComment(col, comment);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("col_with_comment",201, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //col_with_comment_list ::= col_with_comment_list COMMA col_with_comment 
    java_cup.runtime.Symbol case172(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ColWithComment> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<ColWithComment> list = (List<ColWithComment>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		ColWithComment col = (ColWithComment) CUP$SqlParser$stack.peek().value;
		
        list.add(col);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("col_with_comment_list",200, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //col_with_comment_list ::= col_with_comment 
    java_cup.runtime.Symbol case171(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ColWithComment> RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		ColWithComment col = (ColWithComment) CUP$SqlParser$stack.peek().value;
		
        ArrayList<ColWithComment> list = new ArrayList<ColWithComment>();
        list.add(col);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("col_with_comment_list",200, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_with_comment_list ::= LPAREN col_with_comment_list RPAREN 
    java_cup.runtime.Symbol case170(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ColWithComment> RESULT =null;/*3*/
		int colListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<ColWithComment> colList = (List<ColWithComment>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = colList;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_with_comment_list",199, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_with_comment_list ::= 
    java_cup.runtime.Symbol case169(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ColWithComment> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_with_comment_list",199, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_list ::= LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case168(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int colListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> colList = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = colList;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_list",195, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_list ::= 
    java_cup.runtime.Symbol case167(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_list",195, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_columns_from_path ::= KW_COLUMNS KW_FROM KW_PATH KW_AS LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case166(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int columnsFromPathleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int columnsFromPathright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> columnsFromPath = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		 RESULT = columnsFromPath; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_columns_from_path",198, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_columns_from_path ::= 
    java_cup.runtime.Symbol case165(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_columns_from_path",198, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_file_format ::= KW_FORMAT KW_AS ident_or_text 
    java_cup.runtime.Symbol case164(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int formatleft = CUP$SqlParser$stack.peek().left;
		int formatright = CUP$SqlParser$stack.peek().right;
		String format = (String) CUP$SqlParser$stack.peek().value;
		 RESULT = format; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_file_format",243, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_file_format ::= 
    java_cup.runtime.Symbol case163(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		 RESULT = null; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_file_format",243, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //column_separator ::= KW_COLUMNS KW_TERMINATED KW_BY STRING_LITERAL 
    java_cup.runtime.Symbol case162(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnSeparator RESULT =null;/*3*/
		int sepleft = CUP$SqlParser$stack.peek().left;
		int sepright = CUP$SqlParser$stack.peek().right;
		String sep = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColumnSeparator(sep);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("column_separator",204, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_field_term ::= KW_COLUMNS KW_TERMINATED KW_BY STRING_LITERAL 
    java_cup.runtime.Symbol case161(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnSeparator RESULT =null;/*3*/
		int sepleft = CUP$SqlParser$stack.peek().left;
		int sepright = CUP$SqlParser$stack.peek().right;
		String sep = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColumnSeparator(sep);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_field_term",203, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_field_term ::= 
    java_cup.runtime.Symbol case160(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnSeparator RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_field_term",203, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_negative ::= KW_NEGATIVE 
    java_cup.runtime.Symbol case159(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_negative",211, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_negative ::= 
    java_cup.runtime.Symbol case158(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_negative",211, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //data_desc ::= KW_DATA KW_FROM KW_TABLE ident opt_negative KW_INTO KW_TABLE ident opt_partition_names opt_col_mapping_list where_clause 
    java_cup.runtime.Symbol case157(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DataDescription RESULT =null;/*3*/
		int srcTableNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int srcTableNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String srcTableName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int isNegleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int isNegright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		Boolean isNeg = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int tableNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tableNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String tableName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int partitionNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int partitionNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int colMappingListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colMappingListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<Expr> colMappingList = (List<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int whereExprleft = CUP$SqlParser$stack.peek().left;
		int whereExprright = CUP$SqlParser$stack.peek().right;
		Expr whereExpr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DataDescription(tableName, partitionNames, srcTableName, isNeg, colMappingList, whereExpr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("data_desc",188, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //data_desc ::= KW_DATA KW_INFILE LPAREN string_list RPAREN opt_negative KW_INTO KW_TABLE ident opt_partition_names opt_field_term opt_file_format opt_col_list opt_columns_from_path opt_col_mapping_list where_clause 
    java_cup.runtime.Symbol case156(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DataDescription RESULT =null;/*3*/
		int filesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).left;
		int filesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).right;
		List<String> files = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).value;
		int isNegleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10).left;
		int isNegright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10).right;
		Boolean isNeg = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10).value;
		int tableNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int tableNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String tableName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int partitionNamesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int partitionNamesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		PartitionNames partitionNames = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int colSepleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int colSepright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		ColumnSeparator colSep = (ColumnSeparator) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int fileFormatleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int fileFormatright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String fileFormat = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int colListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		List<String> colList = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int columnsFromPathleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int columnsFromPathright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<String> columnsFromPath = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int colMappingListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colMappingListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<Expr> colMappingList = (List<Expr>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int whereExprleft = CUP$SqlParser$stack.peek().left;
		int whereExprright = CUP$SqlParser$stack.peek().right;
		Expr whereExpr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DataDescription(tableName, partitionNames, files, colList, colSep, fileFormat,
        columnsFromPath, isNeg, colMappingList, whereExpr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("data_desc",188, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-15), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //data_desc_list ::= data_desc_list COMMA data_desc 
    java_cup.runtime.Symbol case155(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<DataDescription> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<DataDescription> list = (List<DataDescription>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int descleft = CUP$SqlParser$stack.peek().left;
		int descright = CUP$SqlParser$stack.peek().right;
		DataDescription desc = (DataDescription) CUP$SqlParser$stack.peek().value;
		
        list.add(desc);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("data_desc_list",189, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //data_desc_list ::= data_desc 
    java_cup.runtime.Symbol case154(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<DataDescription> RESULT =null;/*3*/
		int descleft = CUP$SqlParser$stack.peek().left;
		int descright = CUP$SqlParser$stack.peek().right;
		DataDescription desc = (DataDescription) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(desc);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("data_desc_list",189, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //job_label ::= ident DOT ident 
    java_cup.runtime.Symbol case153(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LabelName RESULT =null;/*3*/
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int labelleft = CUP$SqlParser$stack.peek().left;
		int labelright = CUP$SqlParser$stack.peek().right;
		String label = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new LabelName(db, label);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("job_label",190, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //job_label ::= ident 
    java_cup.runtime.Symbol case152(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      LabelName RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.peek().left;
		int labelright = CUP$SqlParser$stack.peek().right;
		String label = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new LabelName("", label);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("job_label",190, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_stmt ::= KW_LOAD KW_LABEL job_label LPAREN data_desc_list RPAREN resource_desc opt_properties 
    java_cup.runtime.Symbol case151(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int labelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		LabelName label = (LabelName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int dataDescListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int dataDescListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		List<DataDescription> dataDescList = (List<DataDescription>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int resourceleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int resourceright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ResourceDesc resource = (ResourceDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new LoadStmt(label, dataDescList, resource, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_stmt",5, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //load_stmt ::= KW_LOAD KW_LABEL job_label LPAREN data_desc_list RPAREN opt_broker opt_system opt_properties 
    java_cup.runtime.Symbol case150(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int labelleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int labelright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		LabelName label = (LabelName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int dataDescListleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dataDescListright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		List<DataDescription> dataDescList = (List<DataDescription>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int brokerleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int brokerright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		BrokerDesc broker = (BrokerDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int systemleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int systemright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String system = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new LoadStmt(label, dataDescList, broker, system, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("load_stmt",5, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-8), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //export_stmt ::= KW_EXPORT KW_TABLE base_table_ref KW_TO STRING_LITERAL opt_properties opt_broker 
    java_cup.runtime.Symbol case149(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblRefleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int tblRefright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		TableRef tblRef = (TableRef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int pathleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int pathright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String path = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int brokerleft = CUP$SqlParser$stack.peek().left;
		int brokerright = CUP$SqlParser$stack.peek().right;
		BrokerDesc broker = (BrokerDesc) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ExportStmt(tblRef, path, properties, broker);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("export_stmt",30, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //help_stmt ::= KW_HELP ident_or_text 
    java_cup.runtime.Symbol case148(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int markleft = CUP$SqlParser$stack.peek().left;
		int markright = CUP$SqlParser$stack.peek().right;
		String mark = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new HelpStmt(mark);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("help_stmt",4, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_identity ::= ident_or_text AT LBRACKET ident_or_text RBRACKET 
    java_cup.runtime.Symbol case147(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserIdentity RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int userright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String user = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int hostleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int hostright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String host = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new UserIdentity(user, host, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_identity",62, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_identity ::= ident_or_text AT ident_or_text 
    java_cup.runtime.Symbol case146(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserIdentity RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int userright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String user = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int hostleft = CUP$SqlParser$stack.peek().left;
		int hostright = CUP$SqlParser$stack.peek().right;
		String host = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UserIdentity(user, host, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_identity",62, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user_identity ::= ident_or_text 
    java_cup.runtime.Symbol case145(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserIdentity RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.peek().left;
		int userright = CUP$SqlParser$stack.peek().right;
		String user = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UserIdentity(user, "%", false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user_identity",62, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //user ::= ident_or_text 
    java_cup.runtime.Symbol case144(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.peek().left;
		int userright = CUP$SqlParser$stack.peek().right;
		String user = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = user;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("user",60, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_user_role ::= KW_DEFAULT KW_ROLE STRING_LITERAL 
    java_cup.runtime.Symbol case143(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = role;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_user_role",205, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_user_role ::= KW_SUPERUSER 
    java_cup.runtime.Symbol case142(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = "superuser";
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_user_role",205, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_user_role ::= 
    java_cup.runtime.Symbol case141(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_user_role",205, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_user ::= user_identity KW_IDENTIFIED KW_BY KW_PASSWORD STRING_LITERAL 
    java_cup.runtime.Symbol case140(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserDesc RESULT =null;/*3*/
		int user_idleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int user_idright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		UserIdentity user_id = (UserIdentity) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int passwordleft = CUP$SqlParser$stack.peek().left;
		int passwordright = CUP$SqlParser$stack.peek().right;
		String password = (String) CUP$SqlParser$stack.peek().value;
		
        /* hashed password */
        RESULT = new UserDesc(user_id, password, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_user",64, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_user ::= user_identity KW_IDENTIFIED KW_BY STRING_LITERAL 
    java_cup.runtime.Symbol case139(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserDesc RESULT =null;/*3*/
		int user_idleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int user_idright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		UserIdentity user_id = (UserIdentity) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int passwordleft = CUP$SqlParser$stack.peek().left;
		int passwordright = CUP$SqlParser$stack.peek().right;
		String password = (String) CUP$SqlParser$stack.peek().value;
		
        /* plain text password */
        RESULT = new UserDesc(user_id, password, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_user",64, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //grant_user ::= user_identity 
    java_cup.runtime.Symbol case138(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      UserDesc RESULT =null;/*3*/
		int user_idleft = CUP$SqlParser$stack.peek().left;
		int user_idright = CUP$SqlParser$stack.peek().right;
		UserIdentity user_id = (UserIdentity) CUP$SqlParser$stack.peek().value;
		
        /* No password */
        RESULT = new UserDesc(user_id);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("grant_user",64, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_read_only ::= KW_READ KW_ONLY 
    java_cup.runtime.Symbol case137(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_read_only",214, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_read_only ::= 
    java_cup.runtime.Symbol case136(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_read_only",214, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_aggregate ::= KW_AGGREGATE 
    java_cup.runtime.Symbol case135(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = true;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_aggregate",215, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_aggregate ::= 
    java_cup.runtime.Symbol case134(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Boolean RESULT =null;/*3*/
		
        RESULT = false;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_aggregate",215, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE opt_external KW_RESOURCE ident_or_text opt_properties 
    java_cup.runtime.Symbol case133(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isExternalleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int isExternalright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Boolean isExternal = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int resourceNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int resourceNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String resourceName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateResourceStmt(isExternal, resourceName, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_INDEX ident KW_ON table_name LPAREN ident_list RPAREN opt_index_type opt_comment 
    java_cup.runtime.Symbol case132(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int indexNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int indexNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String indexName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int tableNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int tableNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		TableName tableName = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<String> cols = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int indexTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int indexTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		IndexDef.IndexType indexType = (IndexDef.IndexType) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int commentleft = CUP$SqlParser$stack.peek().left;
		int commentright = CUP$SqlParser$stack.peek().right;
		String comment = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterTableStmt(tableName, Lists.newArrayList(new CreateIndexClause(tableName, new IndexDef(indexName, cols, indexType, comment), false)));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_MATERIALIZED KW_VIEW ident KW_AS select_stmt opt_properties 
    java_cup.runtime.Symbol case131(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int mvNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int mvNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		String mvName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int selectStmtleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int selectStmtright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		SelectStmt selectStmt = (SelectStmt) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateMaterializedViewStmt(mvName, selectStmt, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_FILE STRING_LITERAL opt_db KW_PROPERTIES LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case130(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int fileNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int fileNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String fileName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int dbleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String db = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new CreateFileStmt(fileName, db, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_ROLE ident 
    java_cup.runtime.Symbol case129(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int roleleft = CUP$SqlParser$stack.peek().left;
		int roleright = CUP$SqlParser$stack.peek().right;
		String role = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateRoleStmt(role);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE opt_read_only KW_REPOSITORY ident KW_WITH KW_BROKER ident KW_ON KW_LOCATION STRING_LITERAL opt_properties 
    java_cup.runtime.Symbol case128(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isReadOnlyleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).left;
		int isReadOnlyright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).right;
		Boolean isReadOnly = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).value;
		int repoNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int repoNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String repoName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int brokerNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int brokerNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String brokerName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int locationleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int locationright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String location = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateRepositoryStmt(isReadOnly, repoName, brokerName, location, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_CLUSTER ident opt_properties KW_IDENTIFIED KW_BY STRING_LITERAL 
    java_cup.runtime.Symbol case127(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int passwordleft = CUP$SqlParser$stack.peek().left;
		int passwordright = CUP$SqlParser$stack.peek().right;
		String password = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateClusterStmt(name, properties, password);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_VIEW opt_if_not_exists table_name opt_col_with_comment_list opt_comment KW_AS query_stmt 
    java_cup.runtime.Symbol case126(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int viewNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int viewNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		TableName viewName = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		List<ColWithComment> columns = (List<ColWithComment>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int commentleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int commentright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String comment = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int view_defleft = CUP$SqlParser$stack.peek().left;
		int view_defright = CUP$SqlParser$stack.peek().right;
		QueryStmt view_def = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateViewStmt(ifNotExists, viewName, columns, comment, view_def);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_USER opt_if_not_exists grant_user opt_user_role 
    java_cup.runtime.Symbol case125(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int userleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int userright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		UserDesc user = (UserDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int userRoleleft = CUP$SqlParser$stack.peek().left;
		int userRoleright = CUP$SqlParser$stack.peek().right;
		String userRole = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateUserStmt(ifNotExists, user, userRole);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE opt_external KW_TABLE opt_if_not_exists table_name LPAREN column_definition_list COMMA index_definition_list RPAREN opt_engine opt_keys opt_comment opt_partition opt_distribution opt_rollup opt_properties opt_ext_properties 
    java_cup.runtime.Symbol case124(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isExternalleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-16).left;
		int isExternalright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-16).right;
		Boolean isExternal = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-16).value;
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).value;
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-13).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-13).right;
		TableName name = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-13).value;
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).right;
		ArrayList<ColumnDef> columns = (ArrayList<ColumnDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).value;
		int indexesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).left;
		int indexesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).right;
		ArrayList<IndexDef> indexes = (ArrayList<IndexDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).value;
		int engineNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int engineNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String engineName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		KeysDesc keys = (KeysDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int tableCommentleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int tableCommentright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String tableComment = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int partitionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int partitionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		PartitionDesc partition = (PartitionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int distributionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int distributionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		DistributionDesc distribution = (DistributionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int indexleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int indexright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AlterClause> index = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tblPropertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tblPropertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> tblProperties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int extPropertiesleft = CUP$SqlParser$stack.peek().left;
		int extPropertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> extProperties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateTableStmt(ifNotExists, isExternal, name, columns, indexes, engineName, keys, partition,
        distribution, tblProperties, extProperties, tableComment, index);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-17), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE opt_external KW_TABLE opt_if_not_exists table_name LPAREN column_definition_list RPAREN opt_engine opt_keys opt_comment opt_partition opt_distribution opt_rollup opt_properties opt_ext_properties 
    java_cup.runtime.Symbol case123(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isExternalleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).left;
		int isExternalright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).right;
		Boolean isExternal = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-14).value;
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-12).value;
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).right;
		TableName name = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-11).value;
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).right;
		ArrayList<ColumnDef> columns = (ArrayList<ColumnDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).value;
		int engineNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int engineNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		String engineName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		KeysDesc keys = (KeysDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int tableCommentleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int tableCommentright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		String tableComment = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int partitionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int partitionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		PartitionDesc partition = (PartitionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int distributionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int distributionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		DistributionDesc distribution = (DistributionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int indexleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int indexright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AlterClause> index = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int tblPropertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tblPropertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> tblProperties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int extPropertiesleft = CUP$SqlParser$stack.peek().left;
		int extPropertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> extProperties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateTableStmt(ifNotExists, isExternal, name, columns, engineName, keys, partition,
        distribution, tblProperties, extProperties, tableComment, index);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-15), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE opt_aggregate KW_FUNCTION function_name LPAREN func_args_def RPAREN KW_RETURNS type_def opt_intermediate_type opt_properties 
    java_cup.runtime.Symbol case122(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int isAggregateleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).left;
		int isAggregateright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).right;
		Boolean isAggregate = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-9).value;
		int functionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).left;
		int functionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).right;
		FunctionName functionName = (FunctionName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-7).value;
		int argsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).left;
		int argsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).right;
		FunctionArgsDef args = (FunctionArgsDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5).value;
		int retrunTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int retrunTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		TypeDef retrunType = (TypeDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int intermediateTypeleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int intermediateTyperight = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TypeDef intermediateType = (TypeDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateFunctionStmt(isAggregate, functionName, args, retrunType, intermediateType, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-10), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_SCHEMA opt_if_not_exists ident 
    java_cup.runtime.Symbol case121(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateDbStmt(ifNotExists, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //create_stmt ::= KW_CREATE KW_DATABASE opt_if_not_exists ident 
    java_cup.runtime.Symbol case120(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int ifNotExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifNotExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifNotExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateDbStmt(ifNotExists, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("create_stmt",20, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_intermediate_type ::= KW_INTERMEDIATE type_def 
    java_cup.runtime.Symbol case119(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TypeDef RESULT =null;/*3*/
		int intermediateTypeleft = CUP$SqlParser$stack.peek().left;
		int intermediateTyperight = CUP$SqlParser$stack.peek().right;
		TypeDef intermediateType = (TypeDef) CUP$SqlParser$stack.peek().value;
		
        RESULT = intermediateType;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_intermediate_type",118, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_intermediate_type ::= 
    java_cup.runtime.Symbol case118(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      TypeDef RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_intermediate_type",118, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //sync_stmt ::= KW_SYNC 
    java_cup.runtime.Symbol case117(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new SyncStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("sync_stmt",22, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_cluster_clause ::= KW_MODIFY opt_properties 
    java_cup.runtime.Symbol case116(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterClusterClause(AlterClusterType.ALTER_CLUSTER_PROPERTIES, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_cluster_clause",220, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_SET KW_LOAD KW_ERRORS KW_HUB opt_properties 
    java_cup.runtime.Symbol case115(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterLoadErrorUrlClause(properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROP KW_ALL KW_BROKER ident_or_text 
    java_cup.runtime.Symbol case114(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int brokerNameleft = CUP$SqlParser$stack.peek().left;
		int brokerNameright = CUP$SqlParser$stack.peek().right;
		String brokerName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = ModifyBrokerClause.createDropAllBrokerClause(brokerName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROP KW_BROKER ident_or_text string_list 
    java_cup.runtime.Symbol case113(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int brokerNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int brokerNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String brokerName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = ModifyBrokerClause.createDropBrokerClause(brokerName, hostPorts);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_BROKER ident_or_text string_list 
    java_cup.runtime.Symbol case112(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int brokerNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int brokerNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String brokerName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = ModifyBrokerClause.createAddBrokerClause(brokerName, hostPorts);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROP KW_FOLLOWER STRING_LITERAL 
    java_cup.runtime.Symbol case111(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortleft = CUP$SqlParser$stack.peek().left;
		int hostPortright = CUP$SqlParser$stack.peek().right;
		String hostPort = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropFollowerClause(hostPort);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_FOLLOWER STRING_LITERAL 
    java_cup.runtime.Symbol case110(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortleft = CUP$SqlParser$stack.peek().left;
		int hostPortright = CUP$SqlParser$stack.peek().right;
		String hostPort = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddFollowerClause(hostPort);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROP KW_OBSERVER STRING_LITERAL 
    java_cup.runtime.Symbol case109(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortleft = CUP$SqlParser$stack.peek().left;
		int hostPortright = CUP$SqlParser$stack.peek().right;
		String hostPort = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropObserverClause(hostPort);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_OBSERVER STRING_LITERAL 
    java_cup.runtime.Symbol case108(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortleft = CUP$SqlParser$stack.peek().left;
		int hostPortright = CUP$SqlParser$stack.peek().right;
		String hostPort = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddObserverClause(hostPort);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DECOMMISSION KW_BACKEND string_list 
    java_cup.runtime.Symbol case107(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DecommissionBackendClause(hostPorts);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROPP KW_BACKEND string_list 
    java_cup.runtime.Symbol case106(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropBackendClause(hostPorts, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_DROP KW_BACKEND string_list 
    java_cup.runtime.Symbol case105(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropBackendClause(hostPorts, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_BACKEND KW_TO ident string_list 
    java_cup.runtime.Symbol case104(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int clusterNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int clusterNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String clusterName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddBackendClause(hostPorts, clusterName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_FREE KW_BACKEND string_list 
    java_cup.runtime.Symbol case103(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddBackendClause(hostPorts, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_system_clause ::= KW_ADD KW_BACKEND string_list 
    java_cup.runtime.Symbol case102(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int hostPortsleft = CUP$SqlParser$stack.peek().left;
		int hostPortsright = CUP$SqlParser$stack.peek().right;
		List<String> hostPorts = (List<String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddBackendClause(hostPorts, false);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_system_clause",219, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_DROP KW_INDEX ident 
    java_cup.runtime.Symbol case101(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int indexNameleft = CUP$SqlParser$stack.peek().left;
		int indexNameright = CUP$SqlParser$stack.peek().right;
		String indexName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropIndexClause(indexName, null, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_ADD index_definition 
    java_cup.runtime.Symbol case100(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int indexDefleft = CUP$SqlParser$stack.peek().left;
		int indexDefright = CUP$SqlParser$stack.peek().right;
		IndexDef indexDef = (IndexDef) CUP$SqlParser$stack.peek().value;
		
        RESULT = new CreateIndexClause(null, indexDef, true);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_RENAME KW_COLUMN ident ident 
    java_cup.runtime.Symbol case99(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String colName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int newColNameleft = CUP$SqlParser$stack.peek().left;
		int newColNameright = CUP$SqlParser$stack.peek().right;
		String newColName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColumnRenameClause(colName, newColName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_RENAME KW_PARTITION ident ident 
    java_cup.runtime.Symbol case98(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int partitionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int partitionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String partitionName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int newPartitionNameleft = CUP$SqlParser$stack.peek().left;
		int newPartitionNameright = CUP$SqlParser$stack.peek().right;
		String newPartitionName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new PartitionRenameClause(partitionName, newPartitionName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_RENAME KW_ROLLUP ident ident 
    java_cup.runtime.Symbol case97(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int rollupNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollupName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int newRollupNameleft = CUP$SqlParser$stack.peek().left;
		int newRollupNameright = CUP$SqlParser$stack.peek().right;
		String newRollupName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new RollupRenameClause(rollupName, newRollupName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_RENAME ident 
    java_cup.runtime.Symbol case96(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int newTableNameleft = CUP$SqlParser$stack.peek().left;
		int newTableNameright = CUP$SqlParser$stack.peek().right;
		String newTableName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new TableRenameClause(newTableName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_REPLACE opt_partition_names KW_WITH opt_partition_names opt_properties 
    java_cup.runtime.Symbol case95(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int partitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int partitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		PartitionNames partitions = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int tempPartitionsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tempPartitionsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		PartitionNames tempPartitions = (PartitionNames) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ReplacePartitionClause(partitions, tempPartitions, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_MODIFY KW_PARTITION ident KW_SET LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case94(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int partitionNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int partitionNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String partitionName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ModifyPartitionClause(partitionName, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_DROP opt_tmp KW_PARTITION opt_if_exists ident 
    java_cup.runtime.Symbol case93(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int isTempPartitionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int isTempPartitionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Boolean isTempPartition = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int ifExistsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int ifExistsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Boolean ifExists = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int partitionNameleft = CUP$SqlParser$stack.peek().left;
		int partitionNameright = CUP$SqlParser$stack.peek().right;
		String partitionName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropPartitionClause(ifExists, partitionName, isTempPartition);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_ADD opt_tmp single_range_partition_desc opt_distribution opt_properties 
    java_cup.runtime.Symbol case92(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int isTempPartitionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int isTempPartitionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		Boolean isTempPartition = (Boolean) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int descleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int descright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		SingleRangePartitionDesc desc = (SingleRangePartitionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int distributionleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int distributionright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		DistributionDesc distribution = (DistributionDesc) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddPartitionClause(desc, distribution, properties, isTempPartition);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_SET LPAREN key_value_map RPAREN 
    java_cup.runtime.Symbol case91(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int propertiesleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int propertiesright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ModifyTablePropertiesClause(properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_ORDER KW_BY LPAREN ident_list RPAREN opt_from_rollup opt_properties 
    java_cup.runtime.Symbol case90(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<String> cols = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int rollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ReorderColumnsClause(cols, rollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_MODIFY KW_COLUMN column_definition opt_col_pos opt_from_rollup opt_properties 
    java_cup.runtime.Symbol case89(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ColumnDef col = (ColumnDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int col_posleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int col_posright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ColumnPosition col_pos = (ColumnPosition) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int rollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ModifyColumnClause(col, col_pos, rollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_DROP KW_COLUMN ident opt_from_rollup opt_properties 
    java_cup.runtime.Symbol case88(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int colright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String col = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int rollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropColumnClause(col, rollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_ADD KW_COLUMN LPAREN column_definition_list RPAREN opt_to_rollup opt_properties 
    java_cup.runtime.Symbol case87(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ArrayList<ColumnDef> cols = (ArrayList<ColumnDef>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int rollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddColumnsClause(cols, rollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause ::= KW_ADD KW_COLUMN column_definition opt_col_pos opt_to_rollup opt_properties 
    java_cup.runtime.Symbol case86(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AlterClause RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int colright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		ColumnDef col = (ColumnDef) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int col_posleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int col_posright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		ColumnPosition col_pos = (ColumnPosition) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int rollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddColumnClause(col, col_pos, rollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause",221, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_dup_keys ::= KW_DUPLICATE KW_KEY LPAREN ident_list RPAREN 
    java_cup.runtime.Symbol case85(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ArrayList<String> cols = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = cols;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_dup_keys",197, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_dup_keys ::= 
    java_cup.runtime.Symbol case84(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<String> RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_dup_keys",197, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_pos ::= KW_AFTER ident 
    java_cup.runtime.Symbol case83(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnPosition RESULT =null;/*3*/
		int colleft = CUP$SqlParser$stack.peek().left;
		int colright = CUP$SqlParser$stack.peek().right;
		String col = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ColumnPosition(col);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_pos",218, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_pos ::= KW_FIRST 
    java_cup.runtime.Symbol case82(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnPosition RESULT =null;/*3*/
		
        RESULT = ColumnPosition.FIRST;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_pos",218, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_col_pos ::= 
    java_cup.runtime.Symbol case81(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ColumnPosition RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_col_pos",218, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_from_rollup ::= KW_FROM ident 
    java_cup.runtime.Symbol case80(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int rollupleft = CUP$SqlParser$stack.peek().left;
		int rollupright = CUP$SqlParser$stack.peek().right;
		String rollup = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = rollup;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_from_rollup",216, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_from_rollup ::= 
    java_cup.runtime.Symbol case79(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_from_rollup",216, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_to_rollup ::= KW_IN ident 
    java_cup.runtime.Symbol case78(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int rollupleft = CUP$SqlParser$stack.peek().left;
		int rollupright = CUP$SqlParser$stack.peek().right;
		String rollup = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = rollup;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_to_rollup",217, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_to_rollup ::= KW_TO ident 
    java_cup.runtime.Symbol case77(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int rollupleft = CUP$SqlParser$stack.peek().left;
		int rollupright = CUP$SqlParser$stack.peek().right;
		String rollup = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = rollup;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_to_rollup",217, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_to_rollup ::= 
    java_cup.runtime.Symbol case76(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		
        RESULT = null;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_to_rollup",217, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause_list ::= alter_table_clause_list COMMA alter_table_clause 
    java_cup.runtime.Symbol case75(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AlterClause> list = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		AlterClause clause = (AlterClause) CUP$SqlParser$stack.peek().value;
		
        list.add(clause);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause_list",222, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_table_clause_list ::= alter_table_clause 
    java_cup.runtime.Symbol case74(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		AlterClause clause = (AlterClause) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(clause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_table_clause_list",222, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_rollup_clause_list ::= drop_rollup_clause_list COMMA drop_rollup_clause 
    java_cup.runtime.Symbol case73(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AlterClause> list = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		DropRollupClause clause = (DropRollupClause) CUP$SqlParser$stack.peek().value;
		
        list.add(clause);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_rollup_clause_list",225, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_rollup_clause_list ::= drop_rollup_clause 
    java_cup.runtime.Symbol case72(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		DropRollupClause clause = (DropRollupClause) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(clause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_rollup_clause_list",225, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //drop_rollup_clause ::= ident opt_properties 
    java_cup.runtime.Symbol case71(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      DropRollupClause RESULT =null;/*3*/
		int rollupNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int rollupNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String rollupName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new DropRollupClause(rollupName, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("drop_rollup_clause",227, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //add_rollup_clause_list ::= add_rollup_clause_list COMMA add_rollup_clause 
    java_cup.runtime.Symbol case70(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int listleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int listright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<AlterClause> list = (List<AlterClause>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		AddRollupClause clause = (AddRollupClause) CUP$SqlParser$stack.peek().value;
		
        list.add(clause);
        RESULT = list;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("add_rollup_clause_list",224, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //add_rollup_clause_list ::= add_rollup_clause 
    java_cup.runtime.Symbol case69(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<AlterClause> RESULT =null;/*3*/
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		AddRollupClause clause = (AddRollupClause) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(clause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("add_rollup_clause_list",224, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //add_rollup_clause ::= ident LPAREN ident_list RPAREN opt_dup_keys opt_from_rollup opt_properties 
    java_cup.runtime.Symbol case68(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      AddRollupClause RESULT =null;/*3*/
		int rollupNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).left;
		int rollupNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).right;
		String rollupName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6).value;
		int colsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int colsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		ArrayList<String> cols = (ArrayList<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int dup_keysleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dup_keysright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<String> dup_keys = (List<String>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int baseRollupleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int baseRollupright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String baseRollup = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AddRollupClause(rollupName, cols, dup_keys, baseRollup, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("add_rollup_clause",226, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_user ::= KW_FOR user 
    java_cup.runtime.Symbol case67(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int userleft = CUP$SqlParser$stack.peek().left;
		int userright = CUP$SqlParser$stack.peek().right;
		String user = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = user;

    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_user",61, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //opt_user ::= 
    java_cup.runtime.Symbol case66(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("opt_user",61, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //quantity ::= ident 
    java_cup.runtime.Symbol case65(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int number_unitleft = CUP$SqlParser$stack.peek().left;
		int number_unitright = CUP$SqlParser$stack.peek().right;
		String number_unit = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = number_unit;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("quantity",63, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //quantity ::= INTEGER_LITERAL 
    java_cup.runtime.Symbol case64(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      String RESULT =null;/*3*/
		int numberleft = CUP$SqlParser$stack.peek().left;
		int numberright = CUP$SqlParser$stack.peek().right;
		Long number = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = number.toString();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("quantity",63, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_DATABASE ident KW_RENAME ident 
    java_cup.runtime.Symbol case63(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int newDbNameleft = CUP$SqlParser$stack.peek().left;
		int newDbNameright = CUP$SqlParser$stack.peek().right;
		String newDbName = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterDatabaseRename(dbName, newDbName);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_DATABASE ident KW_SET KW_REPLICA KW_QUOTA INTEGER_LITERAL 
    java_cup.runtime.Symbol case62(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int numberleft = CUP$SqlParser$stack.peek().left;
		int numberright = CUP$SqlParser$stack.peek().right;
		Long number = (Long) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterDatabaseQuotaStmt(dbName, QuotaType.REPLICA, String.valueOf(number));
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_DATABASE ident KW_SET KW_DATA KW_QUOTA quantity 
    java_cup.runtime.Symbol case61(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int dbNameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).left;
		int dbNameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).right;
		String dbName = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-4).value;
		int quota_quantityleft = CUP$SqlParser$stack.peek().left;
		int quota_quantityright = CUP$SqlParser$stack.peek().right;
		String quota_quantity = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterDatabaseQuotaStmt(dbName, QuotaType.DATA, quota_quantity);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-6), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_CLUSTER ident opt_properties 
    java_cup.runtime.Symbol case60(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int propertiesleft = CUP$SqlParser$stack.peek().left;
		int propertiesright = CUP$SqlParser$stack.peek().right;
		Map<String,String> properties = (Map<String,String>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterClusterStmt(name, properties);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_SYSTEM alter_system_clause 
    java_cup.runtime.Symbol case59(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int clauseleft = CUP$SqlParser$stack.peek().left;
		int clauseright = CUP$SqlParser$stack.peek().right;
		AlterClause clause = (AlterClause) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterSystemStmt(clause);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_VIEW table_name opt_col_with_comment_list KW_AS query_stmt 
    java_cup.runtime.Symbol case58(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableName tbl = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<ColWithComment> columns = (List<ColWithComment>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int view_defleft = CUP$SqlParser$stack.peek().left;
		int view_defright = CUP$SqlParser$stack.peek().right;
		QueryStmt view_def = (QueryStmt) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterViewStmt(tbl, columns, view_def);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_TABLE table_name KW_DROP KW_ROLLUP drop_rollup_clause_list 
    java_cup.runtime.Symbol case57(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableName tbl = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int clausesleft = CUP$SqlParser$stack.peek().left;
		int clausesright = CUP$SqlParser$stack.peek().right;
		List<AlterClause> clauses = (List<AlterClause>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterTableStmt(tbl, clauses);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_TABLE table_name KW_ADD KW_ROLLUP add_rollup_clause_list 
    java_cup.runtime.Symbol case56(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).right;
		TableName tbl = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3).value;
		int clausesleft = CUP$SqlParser$stack.peek().left;
		int clausesright = CUP$SqlParser$stack.peek().right;
		List<AlterClause> clauses = (List<AlterClause>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterTableStmt(tbl, clauses);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-5), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //alter_stmt ::= KW_ALTER KW_TABLE table_name alter_table_clause_list 
    java_cup.runtime.Symbol case55(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int tblleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int tblright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		TableName tbl = (TableName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int clausesleft = CUP$SqlParser$stack.peek().left;
		int clausesright = CUP$SqlParser$stack.peek().right;
		List<AlterClause> clauses = (List<AlterClause>) CUP$SqlParser$stack.peek().value;
		
        RESULT = new AlterTableStmt(tbl, clauses);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("alter_stmt",13, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //migrate_stmt ::= KW_MIGRATE KW_DATABASE cluster_name des_cluster_name 
    java_cup.runtime.Symbol case54(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int src_nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int src_nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ClusterName src_name = (ClusterName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int des_nameleft = CUP$SqlParser$stack.peek().left;
		int des_nameright = CUP$SqlParser$stack.peek().right;
		ClusterName des_name = (ClusterName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new MigrateDbStmt(src_name, des_name);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("migrate_stmt",27, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //link_stmt ::= KW_LINK KW_DATABASE cluster_name des_cluster_name 
    java_cup.runtime.Symbol case53(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int src_nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int src_nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		ClusterName src_name = (ClusterName) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		int des_nameleft = CUP$SqlParser$stack.peek().left;
		int des_nameright = CUP$SqlParser$stack.peek().right;
		ClusterName des_name = (ClusterName) CUP$SqlParser$stack.peek().value;
		
        RESULT = new LinkDbStmt(src_name, des_name);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("link_stmt",26, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //uninstall_plugin_stmt ::= KW_UNINSTALL KW_PLUGIN ident_or_text 
    java_cup.runtime.Symbol case52(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		String name = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new UninstallPluginStmt(name);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("uninstall_plugin_stmt",36, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //install_plugin_stmt ::= KW_INSTALL KW_PLUGIN KW_FROM ident_or_text 
    java_cup.runtime.Symbol case51(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int sourceleft = CUP$SqlParser$stack.peek().left;
		int sourceright = CUP$SqlParser$stack.peek().right;
		String source = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new InstallPluginStmt(source);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("install_plugin_stmt",35, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //des_cluster_name ::= ident DOT ident 
    java_cup.runtime.Symbol case50(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ClusterName RESULT =null;/*3*/
		int clusterleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int clusterright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String cluster = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ClusterName(cluster, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("des_cluster_name",97, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //des_cluster_name ::= ident 
    java_cup.runtime.Symbol case49(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ClusterName RESULT =null;/*3*/
		int clusterleft = CUP$SqlParser$stack.peek().left;
		int clusterright = CUP$SqlParser$stack.peek().right;
		String cluster = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ClusterName(cluster, "");
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("des_cluster_name",97, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cluster_name ::= ident DOT ident 
    java_cup.runtime.Symbol case48(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ClusterName RESULT =null;/*3*/
		int clusterleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int clusterright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String cluster = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int dbleft = CUP$SqlParser$stack.peek().left;
		int dbright = CUP$SqlParser$stack.peek().right;
		String db = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ClusterName(cluster, db);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cluster_name",96, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //cluster_name ::= ident 
    java_cup.runtime.Symbol case47(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ClusterName RESULT =null;/*3*/
		int clusterleft = CUP$SqlParser$stack.peek().left;
		int clusterright = CUP$SqlParser$stack.peek().right;
		String cluster = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ClusterName(cluster, "");
	/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("cluster_name",96, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= 
    java_cup.runtime.Symbol case46(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		
        RESULT = new EmptyStmt();
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= uninstall_plugin_stmt 
    java_cup.runtime.Symbol case45(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= install_plugin_stmt 
    java_cup.runtime.Symbol case44(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= truncate_stmt 
    java_cup.runtime.Symbol case43(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= admin_stmt 
    java_cup.runtime.Symbol case42(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= export_stmt 
    java_cup.runtime.Symbol case41(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= unsupported_stmt 
    java_cup.runtime.Symbol case40(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= restore_stmt 
    java_cup.runtime.Symbol case39(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		RestoreStmt stmt = (RestoreStmt) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= backup_stmt 
    java_cup.runtime.Symbol case38(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		BackupStmt stmt = (BackupStmt) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= insert_stmt 
    java_cup.runtime.Symbol case37(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		InsertStmt stmt = (InsertStmt) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= sync_stmt 
    java_cup.runtime.Symbol case36(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= delete_stmt 
    java_cup.runtime.Symbol case35(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= cancel_stmt 
    java_cup.runtime.Symbol case34(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= show_routine_load_task_stmt 
    java_cup.runtime.Symbol case33(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= show_routine_load_stmt 
    java_cup.runtime.Symbol case32(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= stop_routine_load_stmt 
    java_cup.runtime.Symbol case31(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= resume_routine_load_stmt 
    java_cup.runtime.Symbol case30(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= pause_routine_load_stmt 
    java_cup.runtime.Symbol case29(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= create_routine_load_stmt 
    java_cup.runtime.Symbol case28(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= load_stmt 
    java_cup.runtime.Symbol case27(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= help_stmt 
    java_cup.runtime.Symbol case26(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= revoke_stmt 
    java_cup.runtime.Symbol case25(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int revokeleft = CUP$SqlParser$stack.peek().left;
		int revokeright = CUP$SqlParser$stack.peek().right;
		StatementBase revoke = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = revoke; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= grant_stmt 
    java_cup.runtime.Symbol case24(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int grantleft = CUP$SqlParser$stack.peek().left;
		int grantright = CUP$SqlParser$stack.peek().right;
		StatementBase grant = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = grant; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= show_stmt 
    java_cup.runtime.Symbol case23(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int showleft = CUP$SqlParser$stack.peek().left;
		int showright = CUP$SqlParser$stack.peek().right;
		StatementBase show = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = show; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= describe_stmt 
    java_cup.runtime.Symbol case22(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int describeleft = CUP$SqlParser$stack.peek().left;
		int describeright = CUP$SqlParser$stack.peek().right;
		StatementBase describe = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = describe; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= kill_stmt 
    java_cup.runtime.Symbol case21(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int killleft = CUP$SqlParser$stack.peek().left;
		int killright = CUP$SqlParser$stack.peek().right;
		StatementBase kill = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = kill; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= set_stmt 
    java_cup.runtime.Symbol case20(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int setleft = CUP$SqlParser$stack.peek().left;
		int setright = CUP$SqlParser$stack.peek().right;
		StatementBase set = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = set; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= use_stmt 
    java_cup.runtime.Symbol case19(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int useleft = CUP$SqlParser$stack.peek().left;
		int useright = CUP$SqlParser$stack.peek().right;
		StatementBase use = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = use; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= recover_stmt 
    java_cup.runtime.Symbol case18(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= drop_stmt 
    java_cup.runtime.Symbol case17(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= query_stmt 
    java_cup.runtime.Symbol case16(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		QueryStmt query = (QueryStmt) CUP$SqlParser$stack.peek().value;
		 RESULT = query; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= enter_stmt 
    java_cup.runtime.Symbol case15(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int enterleft = CUP$SqlParser$stack.peek().left;
		int enterright = CUP$SqlParser$stack.peek().right;
		StatementBase enter = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = enter; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= migrate_stmt 
    java_cup.runtime.Symbol case14(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		StatementBase query = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = query; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= link_stmt 
    java_cup.runtime.Symbol case13(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		StatementBase query = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = query; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= create_stmt 
    java_cup.runtime.Symbol case12(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int queryleft = CUP$SqlParser$stack.peek().left;
		int queryright = CUP$SqlParser$stack.peek().right;
		StatementBase query = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = query; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmt ::= alter_stmt 
    java_cup.runtime.Symbol case11(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		 RESULT = stmt; /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmt",1, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_where_stmt ::= KW_WHERE expr 
    java_cup.runtime.Symbol case10(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ImportWhereStmt(expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_where_stmt",34, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_column_desc ::= ident EQUAL expr 
    java_cup.runtime.Symbol case9(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ImportColumnDesc RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int nameright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		String name = (String) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int exprleft = CUP$SqlParser$stack.peek().left;
		int exprright = CUP$SqlParser$stack.peek().right;
		Expr expr = (Expr) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ImportColumnDesc(name, expr);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_column_desc",37, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_column_desc ::= ident 
    java_cup.runtime.Symbol case8(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      ImportColumnDesc RESULT =null;/*3*/
		int nameleft = CUP$SqlParser$stack.peek().left;
		int nameright = CUP$SqlParser$stack.peek().right;
		String name = (String) CUP$SqlParser$stack.peek().value;
		
        RESULT = new ImportColumnDesc(name, null);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_column_desc",37, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_column_descs ::= import_column_descs COMMA import_column_desc 
    java_cup.runtime.Symbol case7(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ImportColumnDesc> RESULT =null;/*3*/
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<ImportColumnDesc> columns = (List<ImportColumnDesc>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int columnleft = CUP$SqlParser$stack.peek().left;
		int columnright = CUP$SqlParser$stack.peek().right;
		ImportColumnDesc column = (ImportColumnDesc) CUP$SqlParser$stack.peek().value;
		
        columns.add(column);
        RESULT = columns;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_column_descs",38, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_column_descs ::= import_column_desc 
    java_cup.runtime.Symbol case6(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<ImportColumnDesc> RESULT =null;/*3*/
		int columnleft = CUP$SqlParser$stack.peek().left;
		int columnright = CUP$SqlParser$stack.peek().right;
		ImportColumnDesc column = (ImportColumnDesc) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(column);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_column_descs",38, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //import_columns_stmt ::= KW_COLUMNS LPAREN import_column_descs RPAREN 
    java_cup.runtime.Symbol case5(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      StatementBase RESULT =null;/*3*/
		int columnsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int columnsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<ImportColumnDesc> columns = (List<ImportColumnDesc>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		
        RESULT = new ImportColumnsStmt(columns);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("import_columns_stmt",33, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-3), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmts ::= import_where_stmt 
    java_cup.runtime.Symbol case4(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<StatementBase> RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(stmt);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmts",0, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmts ::= import_columns_stmt 
    java_cup.runtime.Symbol case3(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<StatementBase> RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(stmt);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmts",0, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmts ::= stmts SEMICOLON stmt 
    java_cup.runtime.Symbol case2(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<StatementBase> RESULT =null;/*3*/
		int stmtsleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).left;
		int stmtsright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).right;
		List<StatementBase> stmts = (List<StatementBase>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2).value;
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        stmts.add(stmt);
        RESULT = stmts;
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmts",0, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-2), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //stmts ::= stmt 
    java_cup.runtime.Symbol case1(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      List<StatementBase> RESULT =null;/*3*/
		int stmtleft = CUP$SqlParser$stack.peek().left;
		int stmtright = CUP$SqlParser$stack.peek().right;
		StatementBase stmt = (StatementBase) CUP$SqlParser$stack.peek().value;
		
        RESULT = Lists.newArrayList(stmt);
    /*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("stmts",0, CUP$SqlParser$stack.peek(), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
    //$START ::= stmts EOF 
    java_cup.runtime.Symbol case0(
    int                        CUP$SqlParser$act_num,
    java_cup.runtime.lr_parser CUP$SqlParser$parser,
    java.util.Stack<java_cup.runtime.Symbol> CUP$SqlParser$stack,
    int                        CUP$SqlParser$top)
    throws java.lang.Exception
    {
      java_cup.runtime.Symbol CUP$SqlParser$result;
      Object RESULT =null;/*3*/
		int start_valleft = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).left;
		int start_valright = CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).right;
		List<StatementBase> start_val = (List<StatementBase>) CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1).value;
		RESULT = start_val;/*5*/
              CUP$SqlParser$result = parser.getSymbolFactory().newSymbol("$START",0, CUP$SqlParser$stack.elementAt(CUP$SqlParser$top-1), CUP$SqlParser$stack.peek(), RESULT); /*6*/
      return CUP$SqlParser$result;/*8*/

    }
}

